<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>claude-code分析1</title>
      <link href="/2025/10/22/claude-code-fen-xi-1/"/>
      <url>/2025/10/22/claude-code-fen-xi-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>canvas绘图</title>
      <link href="/2025/10/22/canvas-hui-tu/"/>
      <url>/2025/10/22/canvas-hui-tu/</url>
      
        <content type="html"><![CDATA[<h3 id="1、canvas点连线生成图片"><a href="#1、canvas点连线生成图片" class="headerlink" title="1、canvas点连线生成图片"></a>1、canvas点连线生成图片</h3><p>canvas点连线生成等值线就是将数组内索引为0的元素设置为起点，moveTo该点<br>其余点使用lineTo进行连接，<br><code>当涉及到多维数组的时候，需要进入到数组的最内部循环进行上述操作</code><br><strong>注意：如果需要绘制的图形铺满整个画布，则需要先计算出所有坐标点的极值点<br>，即最大最小的x、y，再结合画布width和height，算出每个方向上的缩放<br>倍率scaleX和scaleY，moveTo和lineTo的时候需要将缩放倍率计算进去</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> xmin<span class="token punctuation">,</span> xmax<span class="token punctuation">;</span><span class="token keyword">let</span> ymin<span class="token punctuation">,</span> ymax<span class="token punctuation">;</span><span class="token keyword">let</span> xArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> yArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> scalex<span class="token punctuation">,</span> scaley<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">drawChina</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 解析边界线</span>  <span class="token keyword">let</span> obj <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">"./data/china.json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> object <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> features <span class="token operator">=</span> object<span class="token punctuation">.</span>features<span class="token punctuation">;</span>    <span class="token comment">// 计算极值</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> features<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> geo <span class="token operator">=</span> features<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>geometry<span class="token punctuation">;</span>    <span class="token keyword">let</span> coor <span class="token operator">=</span> geo<span class="token punctuation">.</span>coordinates<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> coor<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> m <span class="token operator">&lt;</span> coor<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> m<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> coor<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          xArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>coor<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          yArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>coor<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> b <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>xArr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> num1<span class="token punctuation">,</span> num2<span class="token punctuation">;</span> <span class="token comment">//最小值与最大值</span>  num1 <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  num2 <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> num1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      num1 <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> num2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      num2 <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// console.log(num1, num2);</span>  xmin <span class="token operator">=</span> num1<span class="token punctuation">;</span>  xmax <span class="token operator">=</span> num2<span class="token punctuation">;</span>  <span class="token keyword">let</span> a <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>yArr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> num3<span class="token punctuation">,</span> num4<span class="token punctuation">;</span> <span class="token comment">//最小值与最大值</span>  num3 <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  num4 <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> num3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      num3 <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> num4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      num4 <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  ymin <span class="token operator">=</span> num3<span class="token punctuation">;</span>  ymax <span class="token operator">=</span> num4<span class="token punctuation">;</span>  <span class="token comment">// 打印极值</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xmin<span class="token punctuation">,</span> xmax<span class="token punctuation">,</span> ymin<span class="token punctuation">,</span> ymax<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 循环绘制</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> features<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> feature <span class="token operator">=</span> features<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> geometry <span class="token operator">=</span> feature<span class="token punctuation">.</span>geometry<span class="token punctuation">;</span>    <span class="token keyword">let</span> type <span class="token operator">=</span> geometry<span class="token punctuation">.</span>type<span class="token punctuation">;</span>    <span class="token keyword">let</span> coordinates <span class="token operator">=</span> geometry<span class="token punctuation">.</span>coordinates<span class="token punctuation">;</span>    <span class="token comment">// 得到不同方向上的倍率</span>    scalex <span class="token operator">=</span> <span class="token punctuation">(</span>xmax <span class="token operator">-</span> xmin<span class="token punctuation">)</span> <span class="token operator">/</span> width<span class="token punctuation">;</span>    scaley <span class="token operator">=</span> <span class="token punctuation">(</span>ymax <span class="token operator">-</span> ymin<span class="token punctuation">)</span> <span class="token operator">/</span> height<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"Polygon"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">drawPolygon0</span><span class="token punctuation">(</span>coordinates<span class="token punctuation">,</span> scalex<span class="token punctuation">,</span> scaley<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"MultiPolygon"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> coordinates<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> polygon <span class="token operator">=</span> coordinates<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">drawPolygon0</span><span class="token punctuation">(</span>polygon<span class="token punctuation">,</span> scalex<span class="token punctuation">,</span> scaley<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// node环境保存图片，与绘制无关，可以不使用</span>  <span class="token keyword">function</span> <span class="token function">saveChina</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> image <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> base64Data <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^data:image\/\w+;base64,</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> bufferData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span> <span class="token string">"base64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>      <span class="token string">"./result/img/"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".png"</span><span class="token punctuation">,</span>      bufferData<span class="token punctuation">,</span>      <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">////console.log(err);</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token comment">////console.log("图片保存成功");</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// saveChina()</span>  <span class="token keyword">function</span> <span class="token function">drawPolygon0</span><span class="token punctuation">(</span><span class="token parameter">polygon<span class="token punctuation">,</span> scalex<span class="token punctuation">,</span> scaley</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> points <span class="token operator">=</span> polygon<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> point <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 根据倍率移动点位置，进行满铺</span>      <span class="token comment">// 由于canvas坐标系左上角为顶点，越往下y值越大，所以需要翻转</span>      <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> xmin<span class="token punctuation">)</span> <span class="token operator">/</span> scalex<span class="token punctuation">;</span>      <span class="token keyword">let</span> t <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> ymin<span class="token punctuation">)</span> <span class="token operator">/</span> scaley<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// console.log("0");</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">"rgba(255,255,255,1)"</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"rgba(255,0,0,1)"</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、canvas颜色的填充"><a href="#2、canvas颜色的填充" class="headerlink" title="2、canvas颜色的填充"></a>2、canvas颜色的填充</h3><p>canvas在绘制等值线（或者说是闭合区域的时候）往往需要在区域内填色，根据<br>globalCompositeOperation的不同属性值，会得到不同的结果，具体需要填色的情况<br>选择不同的属性值<br><code>在有要求的情况下，可以根据闭合区域不同的高度值（假如是等高线）进行不同的填色</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">drawOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> colors <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">zuigaowen</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#F3BF48"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#FFAF41"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#F98E20"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#FF760A"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#EC5418"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#EE0D20"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#C70321"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">dibiaowendushikuang</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#A7DC32"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#F0C828"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#F09D29"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#F06429"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#DF3418"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#C20D0D"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#890323"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">bianwen</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#66A6FF"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#80CFFF"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#9AF9FF"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#FFFB87"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#FCDF76"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#F8BE5C"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">jiangshui</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token comment">// &#123; Value_Min: -10, Value_Max: 0.1, color: "rgba(0,0,0,0)" &#125;,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"rgba(0,0,0,0)"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#7DF0FF"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#0E3FD9"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">Value_Min</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">Value_Max</span><span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"#072586"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">fourteen</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">zhongshu</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">zs3</span><span class="token operator">:</span> <span class="token string">"#EB9700"</span><span class="token punctuation">,</span>        <span class="token literal-property property">zs4</span><span class="token operator">:</span> <span class="token string">"#DC521E"</span><span class="token punctuation">,</span>        <span class="token literal-property property">zs5</span><span class="token operator">:</span> <span class="token string">"#B00808"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">"./1.json"</span><span class="token punctuation">;</span>  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> object <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> <span class="token constant">CLOSED_CONTOURS</span> <span class="token punctuation">&#125;</span> <span class="token operator">=</span> object<span class="token punctuation">;</span>      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> color <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> leixing <span class="token operator">=</span> <span class="token string">"fourteen"</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> leixing_child <span class="token operator">=</span> <span class="token string">"zhongshu"</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token constant">CLOSED_CONTOURS</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> CLOSED_CONTOURS_i <span class="token operator">=</span> <span class="token constant">CLOSED_CONTOURS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> linePoint <span class="token punctuation">&#125;</span> <span class="token operator">=</span> CLOSED_CONTOURS_i<span class="token punctuation">;</span>        <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> markName <span class="token punctuation">&#125;</span> <span class="token operator">=</span> CLOSED_CONTOURS_i<span class="token punctuation">.</span>lineMark<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>colors<span class="token punctuation">[</span>leixing<span class="token punctuation">]</span><span class="token punctuation">[</span>leixing_child<span class="token punctuation">]</span><span class="token punctuation">[</span>markName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>linePoint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> m <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> m<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">drawPolygon</span><span class="token punctuation">(</span>            arr<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">,</span>            scalex<span class="token punctuation">,</span>            scaley<span class="token punctuation">,</span>            colors<span class="token punctuation">[</span>leixing<span class="token punctuation">]</span><span class="token punctuation">[</span>leixing_child<span class="token punctuation">]</span><span class="token punctuation">[</span>markName<span class="token punctuation">]</span>          <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">const</span> image <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> base64Data <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^data:image\/\w+;base64,</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> bufferData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span> <span class="token string">"base64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>        <span class="token string">"./result/img/"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".png"</span><span class="token punctuation">,</span>        bufferData<span class="token punctuation">,</span>        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"图片保存成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">drawPolygon</span><span class="token punctuation">(</span><span class="token parameter">points<span class="token punctuation">,</span> scalex<span class="token punctuation">,</span> scaley<span class="token punctuation">,</span> color</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// console.log(scalex, scaley);</span>    ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> point <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment">//   console.log(point);</span>      <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token string">"lot"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token string">"lat"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//   console.log(x, y);</span>      <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> xmin<span class="token punctuation">)</span> <span class="token operator">/</span> scalex<span class="token punctuation">;</span>      <span class="token keyword">let</span> t <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> ymin<span class="token punctuation">)</span> <span class="token operator">/</span> scaley<span class="token punctuation">;</span>      <span class="token comment">//   console.log(l, t);</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// ctx.globalCompositeOperation = "destination-over";</span>    ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> color<span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"#fff"</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、canvas图形形状的截取"><a href="#3、canvas图形形状的截取" class="headerlink" title="3、canvas图形形状的截取"></a>3、canvas图形形状的截取</h3><p>canvas形状的截取，尤其是既包含填色，又包含截取（按另一个图形的形状截取）的情况下，<br>强烈建议分两步</p><h4 id="3-1首先将目标canvas与源canvas生成图片，避免涂色相互影响的问题。"><a href="#3-1首先将目标canvas与源canvas生成图片，避免涂色相互影响的问题。" class="headerlink" title="3.1首先将目标canvas与源canvas生成图片，避免涂色相互影响的问题。"></a>3.1首先将目标canvas与源canvas生成图片，避免涂色相互影响的问题。</h4><h4 id="3-2然后将两张图片进行叠加截图"><a href="#3-2然后将两张图片进行叠加截图" class="headerlink" title="3.2然后将两张图片进行叠加截图"></a>3.2然后将两张图片进行叠加截图</h4><p><strong>node环境为例</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 测试canvas图像截取 * 先画元素图 * 再画中国地图 * 再截取 */</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>createCanvas<span class="token punctuation">,</span> loadImage<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span><span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span><span class="token keyword">const</span> canvas <span class="token operator">=</span> <span class="token function">createCanvas</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//降雨使用的方法(或者说是没有铺满中国的元素图的截取方法)</span><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token string">'./result/img/new/14/gaowen.png'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">yuansu</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">//加载元素图</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'yuansu'</span><span class="token punctuation">,</span>yuansu<span class="token punctuation">)</span>        ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>yuansu<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>        <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token string">'./result/img/china.png'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">china</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token comment">//加载中国地图</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'china'</span><span class="token punctuation">,</span>china<span class="token punctuation">)</span>            ctx<span class="token punctuation">.</span>globalCompositeOperation <span class="token operator">=</span> <span class="token string">"destination-in"</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>china<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span>            <span class="token keyword">function</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> image <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> base64Data <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^data:image\/\w+;base64,</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> bufferData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span> <span class="token string">"base64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>                    <span class="token string">"./result/img/"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".png"</span><span class="token punctuation">,</span>                    bufferData<span class="token punctuation">,</span>                    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"图片保存成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// setTimeout(function ()&#123;result()&#125;,1000)</span>            <span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token string">'./result/img/china2.png'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">china</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">//加载中国地图</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'china'</span><span class="token punctuation">,</span>china<span class="token punctuation">)</span>        ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>china<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>        <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token string">'./result/img/new/14/gaowen.png'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">yuansu</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token comment">//加载元素图</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'yuansu'</span><span class="token punctuation">,</span>yuansu<span class="token punctuation">)</span>            <span class="token comment">//todo:目前除去降雨数据，其他的都用下面的属性</span>            <span class="token comment">// ctx.globalCompositeOperation = "source-atop"</span>            <span class="token comment">//降雨时属性</span>            <span class="token comment">// ctx.globalCompositeOperation = "destination-in";</span>            ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>yuansu<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span>            <span class="token keyword">function</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> image <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> base64Data <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^data:image\/\w+;base64,</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> bufferData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span> <span class="token string">"base64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>                    <span class="token string">"./result/img/"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".png"</span><span class="token punctuation">,</span>                    bufferData<span class="token punctuation">,</span>                    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"图片保存成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// setTimeout(function ()&#123;result()&#125;,1000)</span>            <span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// b()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em><code>总结：在绘制闭合区域（只有数组没有顺序）的时候，需要注意canvas涂色覆盖的问题，同时，需要截取复杂图形的时候，不建议直接在一个canvas对象内使用，可以使用两张图片叠加的形式。本文所使用的的环境是node，可以直接生成图片保存在本地，然后进行读取。可以猜想，利用不同变量保存每个canvas生成的base64也可以直接在浏览器生成类似效果，但本人未做尝试，只是猜想。另外，本文没有使用clip属性进行截图操作，因为没有思路。在颜色填充部分本文尝试使用save和restore属性，但是产生的结果与未使用时一致，如各位了解该如何使用上述属性或有兴趣技术沟通，可直接与我联系</code></em></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cesium绘制卫星云图</title>
      <link href="/2025/10/22/cesium-hui-zhi-wei-xing-yun-tu/"/>
      <url>/2025/10/22/cesium-hui-zhi-wei-xing-yun-tu/</url>
      
        <content type="html"><![CDATA[<h3 id="加载卫星云图（同样使用polygon来加载）"><a href="#加载卫星云图（同样使用polygon来加载）" class="headerlink" title="加载卫星云图（同样使用polygon来加载）"></a>加载卫星云图（同样使用polygon来加载）</h3><h4 id="设置好图片要显示的范围"><a href="#设置好图片要显示的范围" class="headerlink" title="设置好图片要显示的范围"></a>设置好图片要显示的范围</h4><h4 id="添加polygon"><a href="#添加polygon" class="headerlink" title="添加polygon"></a>添加polygon</h4><h3 id="卫星云图动图"><a href="#卫星云图动图" class="headerlink" title="卫星云图动图"></a>卫星云图动图</h3><h4 id="准备多张卫星云图图"><a href="#准备多张卫星云图图" class="headerlink" title="准备多张卫星云图图"></a>准备多张卫星云图图</h4><h4 id="使用CallbackProperty动态material赋值"><a href="#使用CallbackProperty动态material赋值" class="headerlink" title="使用CallbackProperty动态material赋值"></a>使用CallbackProperty动态material赋值</h4><h4 id="定时器轮流改变i值"><a href="#定时器轮流改变i值" class="headerlink" title="定时器轮流改变i值"></a>定时器轮流改变i值</h4><p><em><code>如果卫星云图颜色过深，遮盖住了地球表面，可以在material里面设置一个透明度</code></em></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">color</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Color<span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">.</span><span class="token function">withAlpha</span><span class="token punctuation">(</span><span class="token number">0.6</span><span class="token punctuation">)</span> <span class="token comment">// 这里的颜色不会对图片材质造成影像</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=Edge,chrome=1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>卫星图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cesiumjs.org/releases/1.57/Build/Cesium/Cesium.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/jquery/3.0.0/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cesiumjs.org/releases/1.57/Build/Cesium/Widgets/widgets.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">html,        body,        #cesiumContainer</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #000000<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cesiumContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 创建地球底图</span>    <span class="token keyword">var</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">'cesiumContainer'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">imageryProvider</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>UrlTemplateImageryProvider</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.google.cn/maps/vt?lyrs=s@716&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置视角</span>    viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">destination</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">89.5</span><span class="token punctuation">,</span> <span class="token number">20.4</span><span class="token punctuation">,</span> <span class="token number">110.4</span><span class="token punctuation">,</span> <span class="token number">61.2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> urls <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"./sate/SATE_L1_F2G_VISSR_MWB_NOM_FDI-201906171300.HDF.png"</span><span class="token punctuation">,</span>        <span class="token string">"./sate/SATE_L1_F2G_VISSR_MWB_NOM_FDI-201906171400.HDF.png"</span><span class="token punctuation">,</span>        <span class="token string">"./sate/SATE_L1_F2G_VISSR_MWB_NOM_FDI-201906171500.HDF.png"</span><span class="token punctuation">,</span>        <span class="token string">"./sate/SATE_L1_F2G_VISSR_MWB_NOM_FDI-201906171600.HDF.png"</span><span class="token punctuation">,</span>        <span class="token comment">// "./sate/SATE_L1_F2G_VISSR_MWB_NOM_FDI-201906171700.HDF.png"</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 设置云图范围</span>    <span class="token keyword">var</span> positions <span class="token operator">=</span> <span class="token punctuation">[</span>        Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 添加云图</span>    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    viewer<span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">polygon</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">hierarchy</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>PolygonHierarchy</span><span class="token punctuation">(</span>positions<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token literal-property property">heightReference</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>HeightReference<span class="token punctuation">.</span><span class="token constant">CLAMP_TO_GROUND</span><span class="token punctuation">,</span>            <span class="token literal-property property">material</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>ImageMaterialProperty</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>CallbackProperty</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> urls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 云图切换</span>    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> urls<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cesium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live-server使用</title>
      <link href="/2025/10/22/live-server-shi-yong/"/>
      <url>/2025/10/22/live-server-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><code>本文适用于使用cnpm下载的live-server，使用npm或者其他方式下载的安装包未做测试</code></p><pre class="line-numbers language-none"><code class="language-none">与http-server比，live-server是一种自动热更新的工具包。但是在启动http-server的时候，会自动启动127.0.0.1与本机ip地址两个链接以供访问，这就使得内网内的设备都能访问。但是live-server默认只会启动127.0.0.1（在没有修改包文件内index.js的时候）导致每次想换启动地址时都需要去修改index.js文件，导致非常麻烦。目前本机安装的live-server版本，可以通过在命令行内直接使用命令指定的方式修改端口和链接。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>修改端口</strong></p><pre class="line-numbers language-none"><code class="language-none">live-server --port&#x3D;&#39;8081&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><p><strong>修改地址</strong></p><pre class="line-numbers language-none"><code class="language-none">live-server --host&#x3D;&#39;192.168.1.1&#39;注意host内应该是本机的内网ip地址，这样在同一个内网下，不同的设备才能访问我们开放的页面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>macOS安装homebrew</title>
      <link href="/2025/10/22/macos-an-zhuang-homebrew/"/>
      <url>/2025/10/22/macos-an-zhuang-homebrew/</url>
      
        <content type="html"><![CDATA[<p>Homebrew是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。</p><h3 id="官方安装方式-https-brew-sh-index-zh-cn"><a href="#官方安装方式-https-brew-sh-index-zh-cn" class="headerlink" title="官方安装方式(https://brew.sh/index_zh-cn)"></a>官方安装方式(<a href="https://brew.sh/index_zh-cn">https://brew.sh/index_zh-cn</a>)</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;bin&#x2F;bash -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;HEAD&#x2F;install.sh)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>官方安装方法在国内很多时候都是无法直接安装问题的，因为网络问题，解决方法也有很多，这里就不一一介绍了，这里就介绍最简单的方法</code></p><h3 id="国内快速安装"><a href="#国内快速安装" class="headerlink" title="国内快速安装"></a>国内快速安装</h3><p><code>这里只推荐安装最全的方式，我一般选中科大的源</code></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;bin&#x2F;zsh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;gitee.com&#x2F;cunkai&#x2F;HomebrewCN&#x2F;raw&#x2F;master&#x2F;Homebrew.sh)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node canvas生成图片并保存</title>
      <link href="/2025/10/22/node-canvas-sheng-cheng-tu-pian-bing-bao-cun/"/>
      <url>/2025/10/22/node-canvas-sheng-cheng-tu-pian-bing-bao-cun/</url>
      
        <content type="html"><![CDATA[<p><code>canvas可以将画布转为base64，而base64就是该图片的信息，但是node保存文件的时候需要buffer格式的信息，所以只需要将canvas转成的base64处理成buffer，就可以保存</code></p><p>总结如下：<br><em><strong>1、将画布信息转为base64</strong></em><br><em><strong>2、处理base64为buffer，进行保存</strong></em></p><h3 id="1、引入canvas模块"><a href="#1、引入canvas模块" class="headerlink" title="1、引入canvas模块"></a>1、引入canvas模块</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>createCanvas<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、canvas绘图"><a href="#2、canvas绘图" class="headerlink" title="2、canvas绘图"></a>2、canvas绘图</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> canvas <span class="token operator">=</span> <span class="token function">createCanvas</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'30px'</span>ctx<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、将画布信息转为base64"><a href="#3、将画布信息转为base64" class="headerlink" title="3、将画布信息转为base64"></a>3、将画布信息转为base64</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> dataURl <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、处理base64为buffer"><a href="#4、处理base64为buffer" class="headerlink" title="4、处理base64为buffer"></a>4、处理base64为buffer</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> base64Data <span class="token operator">=</span> dataURl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^data:image\/\w+;base64,</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bufferData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5、保存buffer为图片格式"><a href="#5、保存buffer为图片格式" class="headerlink" title="5、保存buffer为图片格式"></a>5、保存buffer为图片格式</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'2.png'</span><span class="token punctuation">,</span>bufferData<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'图片保存成功'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6、完整代码"><a href="#6、完整代码" class="headerlink" title="6、完整代码"></a>6、完整代码</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>createCanvas<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> canvas <span class="token operator">=</span> <span class="token function">createCanvas</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'30px'</span>ctx<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token keyword">const</span> dataURl <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataURl<span class="token punctuation">)</span><span class="token keyword">const</span> base64Data <span class="token operator">=</span> dataURl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^data:image\/\w+;base64,</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">)</span><span class="token keyword">const</span> bufferData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span><span class="token string">'base64'</span><span class="token punctuation">)</span>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'2.png'</span><span class="token punctuation">,</span>bufferData<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'图片保存成功'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tcp三次握手和四次挥手</title>
      <link href="/2025/10/22/tcp-san-ci-wo-shou-he-si-ci-hui-shou/"/>
      <url>/2025/10/22/tcp-san-ci-wo-shou-he-si-ci-hui-shou/</url>
      
        <content type="html"><![CDATA[<h2 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h2><p>客户端和服务端通信前要进行连接，<br><code>“3次握手”的作用就是</code><em><strong><code>双方都能明确自己和对方的收、发能力是正常的。</code></strong></em></p><h3 id="1、第一次握手："><a href="#1、第一次握手：" class="headerlink" title="1、第一次握手："></a>1、第一次握手：</h3><p>客户端发送网络包，服务端收到了。这样服务端就能得出结论：客户端的发送能力、服务端的接收能力是正常的。</p><h3 id="2、第二次握手："><a href="#2、第二次握手：" class="headerlink" title="2、第二次握手："></a>2、第二次握手：</h3><p>服务端发包，客户端收到了。这样客户端就能得出结论：服务端的接收、发送能力，客户端的接收、发送能力是正常的。 从客户端的视角来看，我接到了服务端发送过来的响应数据包，说明服务端接收到了我在第一次握手时发送的网络包，并且成功发送了响应数据包，这就说明，服务端的接收、发送能力正常。而另一方面，我收到了服务端的响应数据包，说明我第一次发送的网络包成功到达服务端，这样，我自己的发送和接收能力也是正常的。<code>但是服务器还不知道我的接收能力</code></p><h3 id="3、第三次握手："><a href="#3、第三次握手：" class="headerlink" title="3、第三次握手："></a>3、第三次握手：</h3><p>客户端发包，服务端收到了。这样服务端就能得出结论：客户端的接收、发送能力，服务端的发送、接收能力是正常的。 第一、二次握手后，服务端并不知道客户端的接收能力以及自己的发送能力是否正常。而在第三次握手时，服务端收到了客户端对第二次握手作的回应。从服务端的角度，我在第二次握手时的响应数据发送出去了，客户端接收到了。所以，我的发送能力是正常的。而客户端的接收能力也是正常的。</p><h2 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h2><ol><li>客户端发送一个FIN段，并包含一个希望接收者看到的自己当前的序列号K. 同时还包含一个ACK表示确认对方最近一次发过来的数据。</li><li>服务端将K值加1作为ACK序号值，表明收到了上一个包。这时上层的应用程序会被告知另一端发起了关闭操作，通常这将引起应用程序发起自己的关闭操作。</li><li>服务端发起自己的FIN段，ACK=K+1, Seq=L。</li><li>客户端确认。ACK=L+1。</li></ol><h2 id="为什么握手是三次，挥手是四次"><a href="#为什么握手是三次，挥手是四次" class="headerlink" title="为什么握手是三次，挥手是四次"></a>为什么握手是三次，挥手是四次</h2><p>这是因为服务端在LISTEN状态下，<code>收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端</code>(<em><strong>相当于将四次挥手中的第2、3次合并了</strong></em>)。而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方是否现在关闭发送数据通道，需要上层应用来决定，因此，己方ACK和FIN一般都会分开发送。</p>]]></content>
      
      
      <categories>
          
          <category> http </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>编辑器插件合集</title>
      <link href="/2025/10/22/bian-ji-qi-cha-jian-he-ji/"/>
      <url>/2025/10/22/bian-ji-qi-cha-jian-he-ji/</url>
      
        <content type="html"><![CDATA[<h5 id="1"><a href="#1" class="headerlink" title="1. "></a>1. <a href="/2023/10/13/da-mo-xing-xun-lian/" title="大模型训练">大模型训练</a></h5><h5 id="2"><a href="#2" class="headerlink" title="2. "></a>2. <a href="/2023/10/18/xiang-liang-shu-ju-ku/" title="向量数据库">向量数据库</a></h5><h5 id="3"><a href="#3" class="headerlink" title="3. "></a>3. <a href="/2023/10/20/ji-suan-ji-zhong-de-xiang-liang/" title="计算机中的向量">计算机中的向量</a></h5><h5 id="4"><a href="#4" class="headerlink" title="4. "></a>4. <a href="/2023/11/01/da-mo-xing-shi-ru-he-fen-xi-shu-ju-de/" title="大模型是如何分析数据的">大模型是如何分析数据的</a></h5><h5 id="5"><a href="#5" class="headerlink" title="5. "></a>5. <a href="/2023/11/05/da-mo-xing-wei-diao/" title="大模型微调">大模型微调</a></h5><h5 id="6"><a href="#6" class="headerlink" title="6. "></a>6. <a href="/2023/11/05/da-mo-xing-wei-diao-xu-yao-zhu-yi-de-shi-xiang/" title="大模型微调需要注意的事项">大模型微调需要注意的事项</a></h5><h5 id="7"><a href="#7" class="headerlink" title="7. "></a>7. <a href="/2023/11/05/da-mo-xing-guo-ni-he/" title="大模型过拟合">大模型过拟合</a></h5><h5 id="8"><a href="#8" class="headerlink" title="8. "></a>8. <a href="/2023/11/05/da-mo-xing-qian-ni-he/" title="大模型欠拟合">大模型欠拟合</a></h5><h5 id="9"><a href="#9" class="headerlink" title="9. "></a>9. <a href="/2023/11/05/da-mo-xing-de-fan-hua-neng-li/" title="大模型的泛化能力">大模型的泛化能力</a></h5><h5 id="10"><a href="#10" class="headerlink" title="10. "></a>10. <a href="/2023/11/19/da-mo-xing-l1-l2-zheng-ze-hua/" title="大模型L1、L2正则化">大模型L1、L2正则化</a></h5><h5 id="11"><a href="#11" class="headerlink" title="11. "></a>11. <a href="/2023/11/20/da-mo-xing-ya-li-ce-shi/" title="大模型压力测试">大模型压力测试</a></h5><h5 id="12"><a href="#12" class="headerlink" title="12. "></a>12. <a href="/2023/11/25/ji-suan-ji-zhong-de-lu-bang-xing/" title="计算机中的鲁棒性">计算机中的鲁棒性</a></h5><h5 id="13"><a href="#13" class="headerlink" title="13. "></a>13. <a href="/2023/12/13/qian-ru-mo-xing/" title="嵌入模型">嵌入模型</a></h5><h5 id="14"><a href="#14" class="headerlink" title="14. "></a>14. <a href="/2023/12/13/sun-shi-han-shu/" title="损失函数">损失函数</a></h5><h5 id="15"><a href="#15" class="headerlink" title="15. "></a>15. <a href="/2023/12/13/xian-xing-ji-huo-han-shu/" title="线性激活函数">线性激活函数</a></h5>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>claude-code解析</title>
      <link href="/2025/10/22/claude-code-jie-xi/"/>
      <url>/2025/10/22/claude-code-jie-xi/</url>
      
        <content type="html"><![CDATA[<h5 id="1"><a href="#1" class="headerlink" title="1. "></a>1. <a href="/2025/10/22/claude-code-fen-xi-1/" title="claude-code分析1">claude-code分析1</a></h5><h5 id="2"><a href="#2" class="headerlink" title="2. "></a>2. <a href="/2023/10/18/xiang-liang-shu-ju-ku/" title="向量数据库">向量数据库</a></h5><h5 id="3"><a href="#3" class="headerlink" title="3. "></a>3. <a href="/2023/10/20/ji-suan-ji-zhong-de-xiang-liang/" title="计算机中的向量">计算机中的向量</a></h5><h5 id="4"><a href="#4" class="headerlink" title="4. "></a>4. <a href="/2023/11/01/da-mo-xing-shi-ru-he-fen-xi-shu-ju-de/" title="大模型是如何分析数据的">大模型是如何分析数据的</a></h5><h5 id="5"><a href="#5" class="headerlink" title="5. "></a>5. <a href="/2023/11/05/da-mo-xing-wei-diao/" title="大模型微调">大模型微调</a></h5><h5 id="6"><a href="#6" class="headerlink" title="6. "></a>6. <a href="/2023/11/05/da-mo-xing-wei-diao-xu-yao-zhu-yi-de-shi-xiang/" title="大模型微调需要注意的事项">大模型微调需要注意的事项</a></h5><h5 id="7"><a href="#7" class="headerlink" title="7. "></a>7. <a href="/2023/11/05/da-mo-xing-guo-ni-he/" title="大模型过拟合">大模型过拟合</a></h5><h5 id="8"><a href="#8" class="headerlink" title="8. "></a>8. <a href="/2023/11/05/da-mo-xing-qian-ni-he/" title="大模型欠拟合">大模型欠拟合</a></h5><h5 id="9"><a href="#9" class="headerlink" title="9. "></a>9. <a href="/2023/11/05/da-mo-xing-de-fan-hua-neng-li/" title="大模型的泛化能力">大模型的泛化能力</a></h5><h5 id="10"><a href="#10" class="headerlink" title="10. "></a>10. <a href="/2023/11/19/da-mo-xing-l1-l2-zheng-ze-hua/" title="大模型L1、L2正则化">大模型L1、L2正则化</a></h5><h5 id="11"><a href="#11" class="headerlink" title="11. "></a>11. <a href="/2023/11/20/da-mo-xing-ya-li-ce-shi/" title="大模型压力测试">大模型压力测试</a></h5><h5 id="12"><a href="#12" class="headerlink" title="12. "></a>12. <a href="/2023/11/25/ji-suan-ji-zhong-de-lu-bang-xing/" title="计算机中的鲁棒性">计算机中的鲁棒性</a></h5><h5 id="13"><a href="#13" class="headerlink" title="13. "></a>13. <a href="/2023/12/13/qian-ru-mo-xing/" title="嵌入模型">嵌入模型</a></h5><h5 id="14"><a href="#14" class="headerlink" title="14. "></a>14. <a href="/2023/12/13/sun-shi-han-shu/" title="损失函数">损失函数</a></h5><h5 id="15"><a href="#15" class="headerlink" title="15. "></a>15. <a href="/2023/12/13/xian-xing-ji-huo-han-shu/" title="线性激活函数">线性激活函数</a></h5>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs与python绘图</title>
      <link href="/2025/08/01/nodejs-yu-python-hui-tu/"/>
      <url>/2025/08/01/nodejs-yu-python-hui-tu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token punctuation">,</span> ImageDraw<span class="token punctuation">,</span> ImageFont<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> os<span class="token keyword">import</span> glob<span class="token keyword">import</span> time<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">hex_to_rgb</span><span class="token punctuation">(</span>hex_color<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""将16进制颜色字符串转换为RGB元组    Args:        hex_color: 16进制颜色字符串，格式为 "#RRGGBB" 或 "RRGGBB"    Returns:        tuple: RGB颜色元组 (R, G, B)    Raises:        ValueError: 如果颜色格式不正确    """</span>    <span class="token keyword">if</span> hex_color <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token comment"># 移除可能的 # 前缀</span>    hex_color <span class="token operator">=</span> hex_color<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">'#'</span><span class="token punctuation">)</span>    <span class="token comment"># 验证格式</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r'^[0-9A-Fa-f]&#123;6&#125;$'</span><span class="token punctuation">,</span> hex_color<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"无效的16进制颜色格式: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>hex_color<span class="token punctuation">&#125;</span></span><span class="token string">，应为6位16进制数"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 转换为RGB</span>    r <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>hex_color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    g <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>hex_color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>hex_color<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">arrange_icons_layout_1</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> icon_folder<span class="token operator">=</span><span class="token string">'icon'</span><span class="token punctuation">,</span> start_y<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""布局1：左右两组，各6个图标"""</span>    step_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 获取所有图标文件</span>        icon_files <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>icon_folder<span class="token punctuation">,</span> <span class="token string">'*.png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> icon_files<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"没有找到图标文件"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[信息] 找到 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>icon_files<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 个图标文件"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 加载指定的12个图标</span>        icons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        load_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 定义指定的图标文件名</span>        specified_icons <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"com_autopai_smart_sound_effect.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_incall_apps_personalcenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_carcamera.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_airconditioner.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_vehiclecenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_car_dialer.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_mediacenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_scenemode.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_scenemode.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_electronicdirections.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_scene.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_gamezone.png"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        <span class="token comment"># 定义应用名称映射</span>        app_names <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"音效"</span><span class="token punctuation">,</span> <span class="token string">"个人中心"</span><span class="token punctuation">,</span> <span class="token string">"空调"</span><span class="token punctuation">,</span> <span class="token string">"车辆中心"</span><span class="token punctuation">,</span> <span class="token string">"电话"</span><span class="token punctuation">,</span> <span class="token string">"AI空间"</span><span class="token punctuation">,</span>            <span class="token string">"情景模式"</span><span class="token punctuation">,</span> <span class="token string">"导航"</span><span class="token punctuation">,</span> <span class="token string">"场景"</span><span class="token punctuation">,</span> <span class="token string">"游戏"</span><span class="token punctuation">,</span> <span class="token string">"空调2"</span><span class="token punctuation">,</span> <span class="token string">"AI空间2"</span>        <span class="token punctuation">]</span>        <span class="token comment"># 查找指定的图标文件</span>        found_icons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> icon_name <span class="token keyword">in</span> specified_icons<span class="token punctuation">:</span>            icon_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>icon_folder<span class="token punctuation">,</span> icon_name<span class="token punctuation">)</span>            <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>icon_path<span class="token punctuation">)</span><span class="token punctuation">:</span>                found_icons<span class="token punctuation">.</span>append<span class="token punctuation">(</span>icon_path<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[失败] 错误: 找不到图标文件 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_name<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token keyword">return</span>        <span class="token comment"># 如果指定的图标不够12个，用其他图标补充</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">:</span>            remaining_icons <span class="token operator">=</span> <span class="token punctuation">[</span>f <span class="token keyword">for</span> f <span class="token keyword">in</span> icon_files <span class="token keyword">if</span> f <span class="token keyword">not</span> <span class="token keyword">in</span> found_icons<span class="token punctuation">]</span>            found_icons<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>remaining_icons<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[警告] 指定的图标不足12个，补充了 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 个其他图标"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 获取画布尺寸用于计算图标大小</span>        canvas_width<span class="token punctuation">,</span> canvas_height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>size        icon_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> <span class="token number">3.9</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 3.9%的宽度</span>        icon_height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> <span class="token number">8.33</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 8.33%的高度</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> icon_file <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                icon <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>icon_file<span class="token punctuation">)</span>                <span class="token comment"># 调整图标大小为相对尺寸</span>                icon <span class="token operator">=</span> icon<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span>icon_width<span class="token punctuation">,</span> icon_height<span class="token punctuation">)</span><span class="token punctuation">,</span> Image<span class="token punctuation">.</span>Resampling<span class="token punctuation">.</span>LANCZOS<span class="token punctuation">)</span>                <span class="token comment"># 使用预定义的应用名称</span>                app_name <span class="token operator">=</span> app_names<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>app_names<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string-interpolation"><span class="token string">f"应用</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                icons<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>icon<span class="token punctuation">,</span> app_name<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[警告] 加载图标失败 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_file<span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        load_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> load_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图标加载完成 (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>load_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> icons<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"没有成功加载任何图标"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token comment"># # 尝试加载中文字体，如果失败则使用默认字体</span>        <span class="token comment"># font_start_time = time.time()</span>        <span class="token comment"># try:</span>        <span class="token comment">#     font = ImageFont.truetype("simhei.ttf", 24)  # 黑体，24号字</span>        <span class="token comment">#     print("[成功] 使用中文字体: simhei.ttf")</span>        <span class="token comment"># except:</span>        <span class="token comment">#     try:</span>        <span class="token comment">#         font = ImageFont.truetype("C:/Windows/Fonts/simhei.ttf", 24)</span>        <span class="token comment">#         print("[成功] 使用中文字体: C:/Windows/Fonts/simhei.ttf")</span>        <span class="token comment">#     except:</span>        <span class="token comment">#         font = ImageFont.load_default()</span>        <span class="token comment">#         print("[警告] 使用默认字体")</span>        <span class="token comment"># font_time = (time.time() - font_start_time) * 1000</span>        <span class="token comment"># print(f"[成功] 字体加载完成 (耗时: &#123;font_time:.2f&#125;ms)")</span>        <span class="token comment"># # 创建绘图对象</span>        <span class="token comment"># draw = ImageDraw.Draw(canvas)</span>        <span class="token comment"># 获取画布尺寸</span>        canvas_width<span class="token punctuation">,</span> canvas_height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>size        <span class="token comment"># 布局参数（使用百分比）</span>        icon_width_percent <span class="token operator">=</span> <span class="token number">3.9</span>  <span class="token comment"># 图标宽度占画布宽度的3.9%</span>        icon_height_percent <span class="token operator">=</span> <span class="token number">8.33</span>  <span class="token comment"># 图标高度占画布高度的8.33%</span>        icon_spacing_percent <span class="token operator">=</span> <span class="token number">3.125</span>  <span class="token comment"># 图标间距占画布宽度的3.125%</span>        left_group_start_percent <span class="token operator">=</span> <span class="token number">5.47</span>  <span class="token comment"># 左侧组起始位置占画布宽度的5.47%</span>        group_spacing_percent <span class="token operator">=</span> <span class="token number">10.84</span>  <span class="token comment"># 两组之间的间距占画布宽度的10.74%</span>        <span class="token comment"># 计算实际像素值</span>        icon_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> icon_width_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        icon_height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> icon_height_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        icon_spacing <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> icon_spacing_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        left_group_start <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> left_group_start_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        group_spacing <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> group_spacing_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment"># 计算右侧组起始位置</span>        right_group_start <span class="token operator">=</span> left_group_start <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>icon_width <span class="token operator">+</span> icon_spacing<span class="token punctuation">)</span> <span class="token operator">-</span> icon_spacing <span class="token operator">+</span> group_spacing        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"画布尺寸: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>canvas_width<span class="token punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>canvas_height<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"图标尺寸: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_width<span class="token punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_height<span class="token punctuation">&#125;</span></span><span class="token string"> (宽度</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_width_percent<span class="token punctuation">&#125;</span></span><span class="token string">%, 高度</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_height_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"图标间距: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_spacing<span class="token punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_spacing_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"左侧组起始位置: x=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>left_group_start<span class="token punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>left_group_start_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"右侧组起始位置: x=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>right_group_start<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"组间距: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>group_spacing<span class="token punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>group_spacing_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 放置图标</span>        placement_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>icon<span class="token punctuation">,</span> app_name<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>icons<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">:</span>                <span class="token comment"># 左侧组</span>                icon_x <span class="token operator">=</span> left_group_start <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token punctuation">(</span>icon_width <span class="token operator">+</span> icon_spacing<span class="token punctuation">)</span>                icon_y <span class="token operator">=</span> start_y                group_name <span class="token operator">=</span> <span class="token string">"左侧组"</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token comment"># 右侧组</span>                icon_x <span class="token operator">=</span> right_group_start <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>icon_width <span class="token operator">+</span> icon_spacing<span class="token punctuation">)</span>                icon_y <span class="token operator">=</span> start_y                group_name <span class="token operator">=</span> <span class="token string">"右侧组"</span>            <span class="token comment"># 放置图标</span>            canvas<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>icon<span class="token punctuation">,</span> <span class="token punctuation">(</span>icon_x<span class="token punctuation">,</span> icon_y<span class="token punctuation">)</span><span class="token punctuation">,</span> icon <span class="token keyword">if</span> icon<span class="token punctuation">.</span>mode <span class="token operator">==</span> <span class="token string">'RGBA'</span> <span class="token keyword">else</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        placement_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> placement_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图标放置完成 (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>placement_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 成功放置 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>icons<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 个图标（左右两组各6个）"</span></span><span class="token punctuation">)</span>        total_step_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> step_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图标排列总耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>total_step_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms"</span></span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"排列图标时出错: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">arrange_icons_layout_2</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> icon_folder<span class="token operator">=</span><span class="token string">'icon'</span><span class="token punctuation">,</span> start_y<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""布局2：左侧3行18个图标，右侧1行6个图标"""</span>    step_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 获取所有图标文件</span>        icon_files <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>icon_folder<span class="token punctuation">,</span> <span class="token string">'*.png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> icon_files<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"没有找到图标文件"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[信息] 找到 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>icon_files<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 个图标文件"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 加载指定的24个图标</span>        icons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        load_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 定义指定的图标文件名 (左侧15个 + 右侧6个 = 21个)</span>        specified_icons <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment"># 左侧第一行 (6个)</span>            <span class="token string">"com_tinnove_mediacenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_car_dialer.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_vehiclecenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_maintenance.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_aispace.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_carshow.png"</span><span class="token punctuation">,</span>            <span class="token comment"># 左侧第二行 (6个)</span>            <span class="token string">"com_wt_airconditioner.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_album.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_incall_apps_personalcenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_filemanager.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_incall_dvr.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_electronicdirections.png"</span><span class="token punctuation">,</span>            <span class="token comment"># 左侧第三行 (3个)</span>            <span class="token string">"com_wt_gamecenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_carcamera.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_smart_sound_effect.png"</span><span class="token punctuation">,</span>            <span class="token comment"># 右侧一行 (6个)</span>            <span class="token string">"com_tinnove_aispace.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_scenemode.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_link_client.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_electronicdirections.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_scene.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_gamezone.png"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        <span class="token comment"># 定义应用名称映射</span>        app_names <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment"># 左侧第一行</span>            <span class="token string">"音效"</span><span class="token punctuation">,</span> <span class="token string">"个人中心"</span><span class="token punctuation">,</span> <span class="token string">"空调"</span><span class="token punctuation">,</span> <span class="token string">"车辆中心"</span><span class="token punctuation">,</span> <span class="token string">"电话"</span><span class="token punctuation">,</span> <span class="token string">"AI空间"</span><span class="token punctuation">,</span>            <span class="token comment"># 左侧第二行</span>            <span class="token string">"场景"</span><span class="token punctuation">,</span> <span class="token string">"导航"</span><span class="token punctuation">,</span> <span class="token string">"情景"</span><span class="token punctuation">,</span> <span class="token string">"游戏"</span><span class="token punctuation">,</span> <span class="token string">"相册"</span><span class="token punctuation">,</span> <span class="token string">"应用市场"</span><span class="token punctuation">,</span>            <span class="token comment"># 左侧第三行</span>            <span class="token string">"健康"</span><span class="token punctuation">,</span> <span class="token string">"记录仪"</span><span class="token punctuation">,</span> <span class="token string">"AI语音"</span><span class="token punctuation">,</span>            <span class="token comment"># 右侧一行</span>            <span class="token string">"云摄像头"</span><span class="token punctuation">,</span> <span class="token string">"客服"</span><span class="token punctuation">,</span> <span class="token string">"连接"</span><span class="token punctuation">,</span> <span class="token string">"媒体"</span><span class="token punctuation">,</span> <span class="token string">"导航"</span><span class="token punctuation">,</span> <span class="token string">"微信"</span>        <span class="token punctuation">]</span>        <span class="token comment"># 查找指定的图标文件</span>        found_icons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> icon_name <span class="token keyword">in</span> specified_icons<span class="token punctuation">:</span>            icon_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>icon_folder<span class="token punctuation">,</span> icon_name<span class="token punctuation">)</span>            <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>icon_path<span class="token punctuation">)</span><span class="token punctuation">:</span>                found_icons<span class="token punctuation">.</span>append<span class="token punctuation">(</span>icon_path<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[失败] 错误: 找不到图标文件 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_name<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token keyword">return</span>        <span class="token comment"># 如果指定的图标不够21个，用其他图标补充</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">21</span><span class="token punctuation">:</span>            remaining_icons <span class="token operator">=</span> <span class="token punctuation">[</span>f <span class="token keyword">for</span> f <span class="token keyword">in</span> icon_files <span class="token keyword">if</span> f <span class="token keyword">not</span> <span class="token keyword">in</span> found_icons<span class="token punctuation">]</span>            found_icons<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>remaining_icons<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[警告] 指定的图标不足21个，补充了 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">21</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 个其他图标"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 获取画布尺寸用于计算图标大小</span>        canvas_width<span class="token punctuation">,</span> canvas_height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>size        icon_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> <span class="token number">3.9</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 3.9%的宽度</span>        icon_height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> <span class="token number">8.33</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 8.33%的高度</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> icon_file <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>found_icons<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                icon <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>icon_file<span class="token punctuation">)</span>                <span class="token comment"># 调整图标大小为相对尺寸</span>                icon <span class="token operator">=</span> icon<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span>icon_width<span class="token punctuation">,</span> icon_height<span class="token punctuation">)</span><span class="token punctuation">,</span> Image<span class="token punctuation">.</span>Resampling<span class="token punctuation">.</span>LANCZOS<span class="token punctuation">)</span>                <span class="token comment"># 使用预定义的应用名称</span>                app_name <span class="token operator">=</span> app_names<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>app_names<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string-interpolation"><span class="token string">f"应用</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                icons<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>icon<span class="token punctuation">,</span> app_name<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[警告] 加载图标失败 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_file<span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        load_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> load_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图标加载完成 (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>load_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> icons<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"没有成功加载任何图标"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token comment"># 尝试加载中文字体，如果失败则使用默认字体</span>        <span class="token comment"># font_start_time = time.time()</span>        <span class="token comment"># try:</span>        <span class="token comment">#     font = ImageFont.truetype("simhei.ttf", 24)  # 黑体，24号字</span>        <span class="token comment">#     print("[成功] 使用中文字体: simhei.ttf")</span>        <span class="token comment"># except:</span>        <span class="token comment">#     try:</span>        <span class="token comment">#         font = ImageFont.truetype("C:/Windows/Fonts/simhei.ttf", 24)</span>        <span class="token comment">#         print("[成功] 使用中文字体: C:/Windows/Fonts/simhei.ttf")</span>        <span class="token comment">#     except:</span>        <span class="token comment">#         font = ImageFont.load_default()</span>        <span class="token comment">#         print("[警告] 使用默认字体")</span>        <span class="token comment"># font_time = (time.time() - font_start_time) * 1000</span>        <span class="token comment"># print(f"[成功] 字体加载完成 (耗时: &#123;font_time:.2f&#125;ms)")</span>        <span class="token comment"># # 创建绘图对象</span>        <span class="token comment"># draw = ImageDraw.Draw(canvas)</span>        <span class="token comment"># 获取画布尺寸</span>        canvas_width<span class="token punctuation">,</span> canvas_height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>size        <span class="token comment"># 布局参数（使用百分比）</span>        icon_width_percent <span class="token operator">=</span> <span class="token number">3.9</span>  <span class="token comment"># 图标宽度占画布宽度的3.9%</span>        icon_height_percent <span class="token operator">=</span> <span class="token number">8.33</span>  <span class="token comment"># 图标高度占画布高度的8.33%</span>        icon_spacing_percent <span class="token operator">=</span> <span class="token number">3.125</span>  <span class="token comment"># 图标间距占画布宽度的3.125%</span>        row_spacing_percent <span class="token operator">=</span> <span class="token number">15.28</span>  <span class="token comment"># 行间距占画布高度的15.28%</span>        left_group_start_percent <span class="token operator">=</span> <span class="token number">5.47</span>  <span class="token comment"># 左侧组起始位置占画布宽度的5.47%</span>        left_group_top_percent <span class="token operator">=</span> <span class="token number">27.78</span>  <span class="token comment"># 左侧组顶部位置占画布高度的27.78%</span>        right_group_top_percent <span class="token operator">=</span> <span class="token number">45.14</span>  <span class="token comment"># 右侧组顶部位置占画布高度的45.14%</span>        group_spacing_percent <span class="token operator">=</span> <span class="token number">11.24</span>  <span class="token comment"># 两组之间的间距占画布宽度的11.24%</span>        <span class="token comment"># 计算实际像素值</span>        icon_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> icon_width_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        icon_height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> icon_height_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        icon_spacing <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> icon_spacing_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        row_spacing <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> row_spacing_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        left_group_start <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> left_group_start_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        left_group_top <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> left_group_top_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        right_group_top <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> right_group_top_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        group_spacing <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_width <span class="token operator">*</span> group_spacing_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment"># 计算右侧组起始位置</span>        right_group_start <span class="token operator">=</span> left_group_start <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>icon_width <span class="token operator">+</span> icon_spacing<span class="token punctuation">)</span> <span class="token operator">-</span> icon_spacing <span class="token operator">+</span> group_spacing        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"画布尺寸: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>canvas_width<span class="token punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>canvas_height<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"图标尺寸: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_width<span class="token punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_height<span class="token punctuation">&#125;</span></span><span class="token string"> (宽度</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_width_percent<span class="token punctuation">&#125;</span></span><span class="token string">%, 高度</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_height_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"图标间距: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_spacing<span class="token punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>icon_spacing_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"行间距: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>row_spacing<span class="token punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>row_spacing_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"左侧组起始位置: x=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>left_group_start<span class="token punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>left_group_start_percent<span class="token punctuation">&#125;</span></span><span class="token string">%), y=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>left_group_top<span class="token punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>left_group_top_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"右侧组起始位置: x=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>right_group_start<span class="token punctuation">&#125;</span></span><span class="token string">, y=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>right_group_top<span class="token punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>right_group_top_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"组间距: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>group_spacing<span class="token punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>group_spacing_percent<span class="token punctuation">&#125;</span></span><span class="token string">%)"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 放置图标</span>        placement_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>icon<span class="token punctuation">,</span> app_name<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>icons<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">:</span>                <span class="token comment"># 左侧组：3行（前两行6列，第三行3列）</span>                <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">:</span>                    <span class="token comment"># 前两行：6列</span>                    row <span class="token operator">=</span> i <span class="token operator">//</span> <span class="token number">6</span>  <span class="token comment"># 计算行号 (0, 1)</span>                    col <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">6</span>   <span class="token comment"># 计算列号 (0-5)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token comment"># 第三行：3列</span>                    row <span class="token operator">=</span> <span class="token number">2</span>                    col <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">12</span>  <span class="token comment"># 计算列号 (0-2)</span>                icon_x <span class="token operator">=</span> left_group_start <span class="token operator">+</span> col <span class="token operator">*</span> <span class="token punctuation">(</span>icon_width <span class="token operator">+</span> icon_spacing<span class="token punctuation">)</span>                icon_y <span class="token operator">=</span> left_group_top <span class="token operator">+</span> row <span class="token operator">*</span> <span class="token punctuation">(</span>icon_height <span class="token operator">+</span> row_spacing<span class="token punctuation">)</span>                group_name <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"左侧组第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">行"</span></span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token comment"># 右侧组：1行6列</span>                icon_x <span class="token operator">=</span> right_group_start <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>icon_width <span class="token operator">+</span> icon_spacing<span class="token punctuation">)</span>                icon_y <span class="token operator">=</span> right_group_top                group_name <span class="token operator">=</span> <span class="token string">"右侧组"</span>            <span class="token comment"># 放置图标</span>            canvas<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>icon<span class="token punctuation">,</span> <span class="token punctuation">(</span>icon_x<span class="token punctuation">,</span> icon_y<span class="token punctuation">)</span><span class="token punctuation">,</span> icon <span class="token keyword">if</span> icon<span class="token punctuation">.</span>mode <span class="token operator">==</span> <span class="token string">'RGBA'</span> <span class="token keyword">else</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        placement_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> placement_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图标放置完成 (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>placement_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 成功放置 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>icons<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 个图标（左侧3行15个，右侧1行6个）"</span></span><span class="token punctuation">)</span>        total_step_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> step_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图标排列总耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>total_step_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms"</span></span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"排列图标时出错: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_layered_image</span><span class="token punctuation">(</span>layout_type<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> canvas_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2560</span><span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">)</span><span class="token punctuation">,</span> black_layer_color<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""创建分层图片：背景+黑色图层+背景图层+图标    Args:        layout_type: 布局类型 (1 或 2)        canvas_size: 画布尺寸 (宽度, 高度)        black_layer_color: 黑色图层转换颜色，格式为16进制字符串 "#RRGGBB" 或 None                          None表示不转换颜色，保持原样    """</span>    total_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 创建画布</span>        canvas_width<span class="token punctuation">,</span> canvas_height <span class="token operator">=</span> canvas_size        canvas <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'RGBA'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>canvas_width<span class="token punctuation">,</span> canvas_height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"创建画布: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>canvas_width<span class="token punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>canvas_height<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 根据布局类型选择不同的图片文件</span>        <span class="token keyword">if</span> layout_type <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            bg_file <span class="token operator">=</span> <span class="token string">'bg.png'</span>            black_file <span class="token operator">=</span> <span class="token string">'black.png'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            bg_file <span class="token operator">=</span> <span class="token string">'bg2.png'</span>            black_file <span class="token operator">=</span> <span class="token string">'black2.png'</span>        <span class="token comment"># 第一层：背景图片</span>        step_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            background_img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'wallpaper_1.png'</span><span class="token punctuation">)</span>            background_img <span class="token operator">=</span> background_img<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span>canvas_width<span class="token punctuation">,</span> canvas_height<span class="token punctuation">)</span><span class="token punctuation">,</span> Image<span class="token punctuation">.</span>Resampling<span class="token punctuation">.</span>LANCZOS<span class="token punctuation">)</span>            canvas<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>background_img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            step_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> step_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 背景图片 wallpaper_1.png 已加载并调整大小 (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>step_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"背景图片加载失败: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token comment"># 使用默认灰色背景</span>            canvas<span class="token punctuation">.</span>paste<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas_width<span class="token punctuation">,</span> canvas_height<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"使用默认灰色背景"</span><span class="token punctuation">)</span>        <span class="token comment"># 第二层：黑色图层</span>        step_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            black_img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>black_file<span class="token punctuation">)</span>            black_img <span class="token operator">=</span> black_img<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span>canvas_width<span class="token punctuation">,</span> canvas_height<span class="token punctuation">)</span><span class="token punctuation">,</span> Image<span class="token punctuation">.</span>Resampling<span class="token punctuation">.</span>LANCZOS<span class="token punctuation">)</span>            <span class="token comment"># 记录开始时间</span>            start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment"># 根据参数决定是否转换颜色</span>            <span class="token keyword">if</span> black_layer_color <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token comment"># 将16进制颜色转换为RGB</span>                    rgb_color <span class="token operator">=</span> hex_to_rgb<span class="token punctuation">(</span>black_layer_color<span class="token punctuation">)</span>                    <span class="token keyword">if</span> rgb_color <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"颜色值不能为空"</span><span class="token punctuation">)</span>                    <span class="token comment"># 转换颜色</span>                    black_array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>black_img<span class="token punctuation">)</span>                    <span class="token comment"># 设置指定的RGB颜色</span>                    black_array<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> rgb_color                    processed_img <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>black_array<span class="token punctuation">)</span>                    <span class="token comment"># 记录耗时</span>                    end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>                    processing_time <span class="token operator">=</span> <span class="token punctuation">(</span>end_time <span class="token operator">-</span> start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>  <span class="token comment"># 转换为毫秒</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 黑色图层已转换为颜色 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>black_layer_color<span class="token punctuation">&#125;</span></span><span class="token string"> (RGB: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>rgb_color<span class="token punctuation">&#125;</span></span><span class="token string">)，耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>processing_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms"</span></span><span class="token punctuation">)</span>                <span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[错误] 颜色格式错误: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token comment"># 如果颜色格式错误，保持原样</span>                    processed_img <span class="token operator">=</span> black_img                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[警告] 黑色图层保持原样"</span></span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token comment"># 不转换颜色，保持原样</span>                processed_img <span class="token operator">=</span> black_img                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 黑色图层保持原样，未进行颜色转换"</span></span><span class="token punctuation">)</span>            canvas<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>processed_img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> processed_img <span class="token keyword">if</span> processed_img<span class="token punctuation">.</span>mode <span class="token operator">==</span> <span class="token string">'RGBA'</span> <span class="token keyword">else</span> <span class="token boolean">None</span><span class="token punctuation">)</span>            step_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> step_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 黑色图层已加载并调整大小 (总耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>step_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"加载黑色图层失败: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 第三层：加载背景图层</span>        step_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            bgbg_img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>bg_file<span class="token punctuation">)</span>            bgbg_img <span class="token operator">=</span> bgbg_img<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span>canvas_width<span class="token punctuation">,</span> canvas_height<span class="token punctuation">)</span><span class="token punctuation">,</span> Image<span class="token punctuation">.</span>Resampling<span class="token punctuation">.</span>LANCZOS<span class="token punctuation">)</span>            canvas<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>bgbg_img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bgbg_img <span class="token keyword">if</span> bgbg_img<span class="token punctuation">.</span>mode <span class="token operator">==</span> <span class="token string">'RGBA'</span> <span class="token keyword">else</span> <span class="token boolean">None</span><span class="token punctuation">)</span>            step_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> step_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 背景图层 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>bg_file<span class="token punctuation">&#125;</span></span><span class="token string"> 已加载并调整大小 (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>step_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"背景图层加载失败: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 第四层：排列图标</span>        step_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 计算图标起始Y位置（相对于画布高度的百分比）</span>        start_y_percent <span class="token operator">=</span> <span class="token number">45.14</span>  <span class="token comment"># 图标起始位置占画布高度的45.14%</span>        start_y <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>canvas_height <span class="token operator">*</span> start_y_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> layout_type <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            arrange_icons_layout_1<span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> icon_folder<span class="token operator">=</span><span class="token string">'icon'</span><span class="token punctuation">,</span> start_y<span class="token operator">=</span>start_y<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            arrange_icons_layout_2<span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> icon_folder<span class="token operator">=</span><span class="token string">'icon'</span><span class="token punctuation">,</span> start_y<span class="token operator">=</span>start_y<span class="token punctuation">)</span>        step_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> step_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图标排列完成 (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>step_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 保存图片</span>        step_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            output_filename <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'preview</span><span class="token interpolation"><span class="token punctuation">&#123;</span>layout_type<span class="token punctuation">&#125;</span></span><span class="token string">.png'</span></span>            canvas<span class="token punctuation">.</span>save<span class="token punctuation">(</span>output_filename<span class="token punctuation">)</span>            step_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> step_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[成功] 图片已保存为: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>output_filename<span class="token punctuation">&#125;</span></span><span class="token string"> (耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>step_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms)"</span></span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"保存图片失败: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"错误类型: </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>__name__<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"当前工作目录: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">None</span>        <span class="token comment"># 总耗时</span>        total_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> total_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n=== 总耗时统计 ==="</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"总耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>total_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> canvas    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"创建分层图片时出错: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">None</span><span class="token keyword">def</span> <span class="token function">analyze_image</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""分析生成的图片信息"""</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"生成图片信息:"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"  尺寸: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>img<span class="token punctuation">.</span>size<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"  模式: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>img<span class="token punctuation">.</span>mode<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"  格式: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>img<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 转换为numpy数组进行进一步分析</span>        img_array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>img<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"  数组形状: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>img_array<span class="token punctuation">.</span>shape<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"  数据类型: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>img_array<span class="token punctuation">.</span>dtype<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>img_array<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"  颜色通道数: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>img_array<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"分析图片时出错: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""主函数：生成两种布局的图片"""</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== 统一图片生成程序 ==="</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"目标: 生成两种不同布局的图片"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    total_start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 黑色图层颜色配置示例</span>    <span class="token comment"># 可以设置为不同的16进制颜色，例如：</span>    <span class="token comment"># "#000000" - 黑色</span>    <span class="token comment"># "#FFFFFF" - 白色</span>    <span class="token comment"># "#808080" - 灰色</span>    <span class="token comment"># "#FF0000" - 红色</span>    <span class="token comment"># "#00FF00" - 绿色</span>    <span class="token comment"># "#0000FF" - 蓝色</span>    <span class="token comment"># None - 保持原样，不转换颜色</span>    black_layer_color <span class="token operator">=</span> <span class="token string">"#000000"</span>  <span class="token comment"># 设置为黑色</span>    <span class="token comment"># 生成布局1的图片</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== 生成布局1图片 ==="</span><span class="token punctuation">)</span>    canvas1 <span class="token operator">=</span> create_layered_image<span class="token punctuation">(</span>layout_type<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> canvas_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2560</span><span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">)</span><span class="token punctuation">,</span> black_layer_color<span class="token operator">=</span>black_layer_color<span class="token punctuation">)</span>    <span class="token keyword">if</span> canvas1<span class="token punctuation">:</span>        analyze_image<span class="token punctuation">(</span><span class="token string">'preview1.png'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[成功] 布局1图片生成完成！"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[失败] 布局1图片生成失败！"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 生成布局2的图片</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== 生成布局2图片 ==="</span><span class="token punctuation">)</span>    canvas2 <span class="token operator">=</span> create_layered_image<span class="token punctuation">(</span>layout_type<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> canvas_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2560</span><span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">)</span><span class="token punctuation">,</span> black_layer_color<span class="token operator">=</span>black_layer_color<span class="token punctuation">)</span>    <span class="token keyword">if</span> canvas2<span class="token punctuation">:</span>        analyze_image<span class="token punctuation">(</span><span class="token string">'preview2.png'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[成功] 布局2图片生成完成！"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[失败] 布局2图片生成失败！"</span><span class="token punctuation">)</span>    <span class="token comment"># 总耗时</span>    total_time <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> total_start_time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n=== 总耗时统计 ==="</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"总耗时: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>total_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">ms"</span></span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * JavaScript版本的图像处理程序 * 功能与Python版本相同，使用Sharp和Node.js实现 */</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> sharp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'sharp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> glob <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'glob'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** * 将16进制颜色字符串转换为RGB对象 * @param &#123;string&#125; hexColor - 16进制颜色字符串，格式为 "#RRGGBB" 或 "RRGGBB" * @returns &#123;Object|null&#125; RGB颜色对象 &#123;r, g, b&#125; 或 null */</span><span class="token keyword">function</span> <span class="token function">hexToRgb</span><span class="token punctuation">(</span><span class="token parameter">hexColor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>hexColor <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> hexColor <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 移除可能的 # 前缀</span>    hexColor <span class="token operator">=</span> hexColor<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^#</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 验证格式</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9A-Fa-f]&#123;6&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>hexColor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">无效的16进制颜色格式: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hexColor<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">，应为6位16进制数</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 转换为RGB</span>    <span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>hexColor<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>hexColor<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>hexColor<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 加载图标并调整大小 * @param &#123;string&#125; iconPath - 图标文件路径 * @param &#123;number&#125; width - 目标宽度 * @param &#123;number&#125; height - 目标高度 * @returns &#123;Promise&lt;Buffer>&#125; - 调整大小后的图标Buffer */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">loadAndResizeIcon</span><span class="token punctuation">(</span><span class="token parameter">iconPath<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">sharp</span><span class="token punctuation">(</span>iconPath<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">fit</span><span class="token operator">:</span> <span class="token string">'contain'</span><span class="token punctuation">,</span>                <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">r</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">g</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[警告] 加载图标失败 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> e<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 布局1：左右两组，各6个图标 * @param &#123;sharp.Sharp&#125; canvas - Sharp实例 * @param &#123;Object&#125; canvasSize - 画布尺寸 &#123;width, height&#125; * @param &#123;string&#125; iconFolder - 图标文件夹路径 * @param &#123;number&#125; startY - 图标起始Y坐标 * @returns &#123;Promise&lt;sharp.Sharp>&#125; - 处理后的Sharp实例 */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">arrangeIconsLayout1</span><span class="token punctuation">(</span>canvasSize<span class="token punctuation">,</span> iconFolder <span class="token operator">=</span> <span class="token string">'icon'</span><span class="token punctuation">,</span> startY <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> stepStartTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">width</span><span class="token operator">:</span> canvasWidth<span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> canvasHeight <span class="token punctuation">&#125;</span> <span class="token operator">=</span> canvasSize<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取所有图标文件</span>        <span class="token keyword">const</span> iconFolderPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iconFolder<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">搜索图标文件，路径: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFolderPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 检查图标文件夹是否存在</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>iconFolderPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">图标文件夹不存在: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFolderPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 直接读取目录内容</span>        <span class="token keyword">let</span> iconFiles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> dirContents <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>iconFolderPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 只保留.png文件</span>            iconFiles <span class="token operator">=</span> dirContents                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> file<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>iconFolderPath<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">找到 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFiles<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个PNG图标文件</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">前5个文件: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFiles<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">f</span> <span class="token operator">=></span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">', '</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">读取目录失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>iconFiles<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"没有找到PNG图标文件，搜索路径: "</span> <span class="token operator">+</span> iconFolderPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[信息] 找到 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFiles<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个图标文件</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 定义指定的图标文件名</span>        <span class="token keyword">const</span> specifiedIcons <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"com_autopai_smart_sound_effect.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_incall_apps_personalcenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_carcamera.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_airconditioner.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_vehiclecenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_car_dialer.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_mediacenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_scenemode.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_scenemode.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_electronicdirections.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_scene.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_gamezone.png"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 定义应用名称映射</span>        <span class="token keyword">const</span> appNames <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"音效"</span><span class="token punctuation">,</span> <span class="token string">"个人中心"</span><span class="token punctuation">,</span> <span class="token string">"空调"</span><span class="token punctuation">,</span> <span class="token string">"车辆中心"</span><span class="token punctuation">,</span> <span class="token string">"电话"</span><span class="token punctuation">,</span> <span class="token string">"AI空间"</span><span class="token punctuation">,</span>            <span class="token string">"情景模式"</span><span class="token punctuation">,</span> <span class="token string">"导航"</span><span class="token punctuation">,</span> <span class="token string">"场景"</span><span class="token punctuation">,</span> <span class="token string">"游戏"</span><span class="token punctuation">,</span> <span class="token string">"空调2"</span><span class="token punctuation">,</span> <span class="token string">"AI空间2"</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 查找指定的图标文件</span>        <span class="token keyword">const</span> foundIcons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> iconName <span class="token keyword">of</span> specifiedIcons<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> iconPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iconFolder<span class="token punctuation">,</span> iconName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>iconPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                foundIcons<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>iconPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[失败] 错误: 找不到图标文件 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">，搜索路径: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 如果指定的图标不够12个，用其他图标补充</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>foundIcons<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> remainingIcons <span class="token operator">=</span> iconFiles<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">f</span> <span class="token operator">=></span> <span class="token operator">!</span>foundIcons<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            foundIcons<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>remainingIcons<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">12</span> <span class="token operator">-</span> foundIcons<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[警告] 指定的图标不足12个，补充了 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token number">12</span> <span class="token operator">-</span> foundIcons<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个其他图标</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 布局参数（使用百分比）</span>        <span class="token keyword">const</span> iconWidthPercent <span class="token operator">=</span> <span class="token number">3.9</span><span class="token punctuation">;</span>  <span class="token comment">// 图标宽度占画布宽度的3.9%</span>        <span class="token keyword">const</span> iconHeightPercent <span class="token operator">=</span> <span class="token number">8.33</span><span class="token punctuation">;</span>  <span class="token comment">// 图标高度占画布高度的8.33%</span>        <span class="token keyword">const</span> iconSpacingPercent <span class="token operator">=</span> <span class="token number">3.125</span><span class="token punctuation">;</span>  <span class="token comment">// 图标间距占画布宽度的3.125%</span>        <span class="token keyword">const</span> leftGroupStartPercent <span class="token operator">=</span> <span class="token number">5.47</span><span class="token punctuation">;</span>  <span class="token comment">// 左侧组起始位置占画布宽度的5.47%</span>        <span class="token keyword">const</span> groupSpacingPercent <span class="token operator">=</span> <span class="token number">10.84</span><span class="token punctuation">;</span>  <span class="token comment">// 两组之间的间距占画布宽度的10.74%</span>        <span class="token comment">// 计算实际像素值</span>        <span class="token keyword">const</span> iconWidth <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> iconWidthPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> iconHeight <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasHeight <span class="token operator">*</span> iconHeightPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> iconSpacing <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> iconSpacingPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> leftGroupStart <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> leftGroupStartPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> groupSpacing <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> groupSpacingPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 计算右侧组起始位置</span>        <span class="token keyword">const</span> rightGroupStart <span class="token operator">=</span> leftGroupStart <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>iconWidth <span class="token operator">+</span> iconSpacing<span class="token punctuation">)</span> <span class="token operator">-</span> iconSpacing <span class="token operator">+</span> groupSpacing<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">画布尺寸: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>canvasWidth<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>canvasHeight<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">图标尺寸: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconWidth<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconHeight<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> (宽度</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconWidthPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%, 高度</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconHeightPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">图标间距: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconSpacing<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconSpacingPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">左侧组起始位置: x=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>leftGroupStart<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>leftGroupStartPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">右侧组起始位置: x=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rightGroupStart<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">组间距: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>groupSpacing<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>groupSpacingPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 加载和放置图标</span>        <span class="token keyword">const</span> placementStartTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> compositeOperations <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>foundIcons<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> iconFile <span class="token operator">=</span> foundIcons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> appName <span class="token operator">=</span> i <span class="token operator">&lt;</span> appNames<span class="token punctuation">.</span>length <span class="token operator">?</span> appNames<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">应用</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                <span class="token comment">// 计算位置</span>                <span class="token keyword">let</span> iconX<span class="token punctuation">,</span> iconY<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 左侧组</span>                    iconX <span class="token operator">=</span> leftGroupStart <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token punctuation">(</span>iconWidth <span class="token operator">+</span> iconSpacing<span class="token punctuation">)</span><span class="token punctuation">;</span>                    iconY <span class="token operator">=</span> startY<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 右侧组</span>                    iconX <span class="token operator">=</span> rightGroupStart <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>iconWidth <span class="token operator">+</span> iconSpacing<span class="token punctuation">)</span><span class="token punctuation">;</span>                    iconY <span class="token operator">=</span> startY<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 加载并调整图标大小</span>                <span class="token keyword">const</span> resizedIcon <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadAndResizeIcon</span><span class="token punctuation">(</span>iconFile<span class="token punctuation">,</span> iconWidth<span class="token punctuation">,</span> iconHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 添加到合成操作列表</span>                compositeOperations<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">input</span><span class="token operator">:</span> resizedIcon<span class="token punctuation">,</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> iconY<span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> iconX                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[警告] 处理图标失败 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>foundIcons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">const</span> placementTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> placementStartTime<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[成功] 图标放置完成 (耗时: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>placementTime<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">ms)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[成功] 成功放置 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>compositeOperations<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个图标（左右两组各6个）</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> totalStepTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> stepStartTime<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[成功] 图标排列总耗时: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>totalStepTime<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">ms</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> compositeOperations<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">排列图标时出错: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 布局2：左侧3行15个图标，右侧1行6个图标 * @param &#123;sharp.Sharp&#125; canvas - Sharp实例 * @param &#123;Object&#125; canvasSize - 画布尺寸 &#123;width, height&#125; * @param &#123;string&#125; iconFolder - 图标文件夹路径 * @param &#123;number&#125; startY - 图标起始Y坐标 * @returns &#123;Promise&lt;sharp.Sharp>&#125; - 处理后的Sharp实例 */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">arrangeIconsLayout2</span><span class="token punctuation">(</span>canvasSize<span class="token punctuation">,</span> iconFolder <span class="token operator">=</span> <span class="token string">'icon'</span><span class="token punctuation">,</span> startY <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> stepStartTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">width</span><span class="token operator">:</span> canvasWidth<span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> canvasHeight <span class="token punctuation">&#125;</span> <span class="token operator">=</span> canvasSize<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取所有图标文件</span>        <span class="token keyword">const</span> iconFolderPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iconFolder<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">搜索图标文件，路径: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFolderPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 检查图标文件夹是否存在</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>iconFolderPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">图标文件夹不存在: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFolderPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 直接读取目录内容</span>        <span class="token keyword">let</span> iconFiles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> dirContents <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>iconFolderPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 只保留.png文件</span>            iconFiles <span class="token operator">=</span> dirContents                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> file<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>iconFolderPath<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">找到 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFiles<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个PNG图标文件</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">前5个文件: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFiles<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">f</span> <span class="token operator">=></span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">', '</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">读取目录失败: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>iconFiles<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"没有找到PNG图标文件，搜索路径: "</span> <span class="token operator">+</span> iconFolderPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[信息] 找到 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconFiles<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个图标文件</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 定义指定的图标文件名 (左侧15个 + 右侧6个 = 21个)</span>        <span class="token keyword">const</span> specifiedIcons <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment">// 左侧第一行 (6个)</span>            <span class="token string">"com_tinnove_mediacenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_car_dialer.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_vehiclecenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_maintenance.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_aispace.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_carshow.png"</span><span class="token punctuation">,</span>            <span class="token comment">// 左侧第二行 (6个)</span>            <span class="token string">"com_wt_airconditioner.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_album.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_incall_apps_personalcenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_filemanager.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_incall_dvr.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_electronicdirections.png"</span><span class="token punctuation">,</span>            <span class="token comment">// 左侧第三行 (3个)</span>            <span class="token string">"com_wt_gamecenter.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_carcamera.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_autopai_smart_sound_effect.png"</span><span class="token punctuation">,</span>            <span class="token comment">// 右侧一行 (6个)</span>            <span class="token string">"com_tinnove_aispace.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_scenemode.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_link_client.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wtcl_electronicdirections.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_wt_scene.png"</span><span class="token punctuation">,</span>            <span class="token string">"com_tinnove_gamezone.png"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 定义应用名称映射</span>        <span class="token keyword">const</span> appNames <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment">// 左侧第一行</span>            <span class="token string">"音效"</span><span class="token punctuation">,</span> <span class="token string">"个人中心"</span><span class="token punctuation">,</span> <span class="token string">"空调"</span><span class="token punctuation">,</span> <span class="token string">"车辆中心"</span><span class="token punctuation">,</span> <span class="token string">"电话"</span><span class="token punctuation">,</span> <span class="token string">"AI空间"</span><span class="token punctuation">,</span>            <span class="token comment">// 左侧第二行</span>            <span class="token string">"场景"</span><span class="token punctuation">,</span> <span class="token string">"导航"</span><span class="token punctuation">,</span> <span class="token string">"情景"</span><span class="token punctuation">,</span> <span class="token string">"游戏"</span><span class="token punctuation">,</span> <span class="token string">"相册"</span><span class="token punctuation">,</span> <span class="token string">"应用市场"</span><span class="token punctuation">,</span>            <span class="token comment">// 左侧第三行</span>            <span class="token string">"健康"</span><span class="token punctuation">,</span> <span class="token string">"记录仪"</span><span class="token punctuation">,</span> <span class="token string">"AI语音"</span><span class="token punctuation">,</span>            <span class="token comment">// 右侧一行</span>            <span class="token string">"云摄像头"</span><span class="token punctuation">,</span> <span class="token string">"客服"</span><span class="token punctuation">,</span> <span class="token string">"连接"</span><span class="token punctuation">,</span> <span class="token string">"媒体"</span><span class="token punctuation">,</span> <span class="token string">"导航"</span><span class="token punctuation">,</span> <span class="token string">"微信"</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 查找指定的图标文件</span>        <span class="token keyword">const</span> foundIcons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> iconName <span class="token keyword">of</span> specifiedIcons<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> iconPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iconFolder<span class="token punctuation">,</span> iconName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>iconPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                foundIcons<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>iconPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[失败] 错误: 找不到图标文件 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">，搜索路径: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 如果指定的图标不够21个，用其他图标补充</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>foundIcons<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">21</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> remainingIcons <span class="token operator">=</span> iconFiles<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">f</span> <span class="token operator">=></span> <span class="token operator">!</span>foundIcons<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            foundIcons<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>remainingIcons<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">21</span> <span class="token operator">-</span> foundIcons<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[警告] 指定的图标不足21个，补充了 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token number">21</span> <span class="token operator">-</span> foundIcons<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个其他图标</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 布局参数（使用百分比）</span>        <span class="token keyword">const</span> iconWidthPercent <span class="token operator">=</span> <span class="token number">3.9</span><span class="token punctuation">;</span>  <span class="token comment">// 图标宽度占画布宽度的3.9%</span>        <span class="token keyword">const</span> iconHeightPercent <span class="token operator">=</span> <span class="token number">8.33</span><span class="token punctuation">;</span>  <span class="token comment">// 图标高度占画布高度的8.33%</span>        <span class="token keyword">const</span> iconSpacingPercent <span class="token operator">=</span> <span class="token number">3.125</span><span class="token punctuation">;</span>  <span class="token comment">// 图标间距占画布宽度的3.125%</span>        <span class="token keyword">const</span> rowSpacingPercent <span class="token operator">=</span> <span class="token number">15.28</span><span class="token punctuation">;</span>  <span class="token comment">// 行间距占画布高度的15.28%</span>        <span class="token keyword">const</span> leftGroupStartPercent <span class="token operator">=</span> <span class="token number">5.47</span><span class="token punctuation">;</span>  <span class="token comment">// 左侧组起始位置占画布宽度的5.47%</span>        <span class="token keyword">const</span> leftGroupTopPercent <span class="token operator">=</span> <span class="token number">27.78</span><span class="token punctuation">;</span>  <span class="token comment">// 左侧组顶部位置占画布高度的27.78%</span>        <span class="token keyword">const</span> rightGroupTopPercent <span class="token operator">=</span> <span class="token number">45.14</span><span class="token punctuation">;</span>  <span class="token comment">// 右侧组顶部位置占画布高度的45.14%</span>        <span class="token keyword">const</span> groupSpacingPercent <span class="token operator">=</span> <span class="token number">11.24</span><span class="token punctuation">;</span>  <span class="token comment">// 两组之间的间距占画布宽度的11.24%</span>        <span class="token comment">// 计算实际像素值</span>        <span class="token keyword">const</span> iconWidth <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> iconWidthPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> iconHeight <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasHeight <span class="token operator">*</span> iconHeightPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> iconSpacing <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> iconSpacingPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> rowSpacing <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasHeight <span class="token operator">*</span> rowSpacingPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> leftGroupStart <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> leftGroupStartPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> leftGroupTop <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasHeight <span class="token operator">*</span> leftGroupTopPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> rightGroupTop <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasHeight <span class="token operator">*</span> rightGroupTopPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> groupSpacing <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasWidth <span class="token operator">*</span> groupSpacingPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 计算右侧组起始位置</span>        <span class="token keyword">const</span> rightGroupStart <span class="token operator">=</span> leftGroupStart <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>iconWidth <span class="token operator">+</span> iconSpacing<span class="token punctuation">)</span> <span class="token operator">-</span> iconSpacing <span class="token operator">+</span> groupSpacing<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">画布尺寸: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>canvasWidth<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>canvasHeight<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">图标尺寸: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconWidth<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconHeight<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> (宽度</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconWidthPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%, 高度</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconHeightPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">图标间距: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconSpacing<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iconSpacingPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">行间距: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rowSpacing<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rowSpacingPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">左侧组起始位置: x=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>leftGroupStart<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>leftGroupStartPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%), y=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>leftGroupTop<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>leftGroupTopPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">右侧组起始位置: x=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rightGroupStart<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, y=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rightGroupTop<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rightGroupTopPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">组间距: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>groupSpacing<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>groupSpacingPercent<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 加载和放置图标</span>        <span class="token keyword">const</span> placementStartTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> compositeOperations <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>foundIcons<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> iconFile <span class="token operator">=</span> foundIcons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> appName <span class="token operator">=</span> i <span class="token operator">&lt;</span> appNames<span class="token punctuation">.</span>length <span class="token operator">?</span> appNames<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">应用</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                <span class="token comment">// 计算位置</span>                <span class="token keyword">let</span> iconX<span class="token punctuation">,</span> iconY<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 左侧组：3行（前两行6列，第三行3列）</span>                    <span class="token keyword">let</span> row<span class="token punctuation">,</span> col<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">// 前两行：6列</span>                        row <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>i <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 计算行号 (0, 1)</span>                        col <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token comment">// 计算列号 (0-5)</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">// 第三行：3列</span>                        row <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>                        col <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">12</span><span class="token punctuation">;</span>  <span class="token comment">// 计算列号 (0-2)</span>                    <span class="token punctuation">&#125;</span>                    iconX <span class="token operator">=</span> leftGroupStart <span class="token operator">+</span> col <span class="token operator">*</span> <span class="token punctuation">(</span>iconWidth <span class="token operator">+</span> iconSpacing<span class="token punctuation">)</span><span class="token punctuation">;</span>                    iconY <span class="token operator">=</span> leftGroupTop <span class="token operator">+</span> row <span class="token operator">*</span> <span class="token punctuation">(</span>iconHeight <span class="token operator">+</span> rowSpacing<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 右侧组：1行6列</span>                    iconX <span class="token operator">=</span> rightGroupStart <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>iconWidth <span class="token operator">+</span> iconSpacing<span class="token punctuation">)</span><span class="token punctuation">;</span>                    iconY <span class="token operator">=</span> rightGroupTop<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 加载并调整图标大小</span>                <span class="token keyword">const</span> resizedIcon <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadAndResizeIcon</span><span class="token punctuation">(</span>iconFile<span class="token punctuation">,</span> iconWidth<span class="token punctuation">,</span> iconHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 添加到合成操作列表</span>                compositeOperations<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">input</span><span class="token operator">:</span> resizedIcon<span class="token punctuation">,</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> iconY<span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> iconX                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[警告] 处理图标失败 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>foundIcons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">const</span> placementTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> placementStartTime<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[成功] 图标放置完成 (耗时: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>placementTime<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">ms)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[成功] 成功放置 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>compositeOperations<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 个图标（左侧3行15个，右侧1行6个）</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> totalStepTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> stepStartTime<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[成功] 图标排列总耗时: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>totalStepTime<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">ms</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> compositeOperations<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">排列图标时出错: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 创建分层图片：背景+黑色图层+背景图层+图标 * @param &#123;number&#125; layoutType - 布局类型 (1 或 2) * @param &#123;Object&#125; canvasSize - 画布尺寸 &#123;width, height&#125; * @param &#123;string|null&#125; blackLayerColor - 黑色图层转换颜色，格式为16进制字符串 "#RRGGBB" 或 null * @returns &#123;Promise&lt;void>&#125; */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createLayeredImage</span><span class="token punctuation">(</span><span class="token parameter">layoutType <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> canvasSize <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2560</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">720</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> blackLayerColor <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> totalStartTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">width</span><span class="token operator">:</span> canvasWidth<span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> canvasHeight <span class="token punctuation">&#125;</span> <span class="token operator">=</span> canvasSize<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 路径</span>        <span class="token keyword">const</span> bgFile <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> layoutType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">'bg.png'</span> <span class="token operator">:</span> <span class="token string">'bg2.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> blackFile <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> layoutType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">'black.png'</span> <span class="token operator">:</span> <span class="token string">'black2.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> wallpaperPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'wallpaper_1.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 读取并resize所有图层</span>        <span class="token keyword">const</span> wallpaperBuffer <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sharp</span><span class="token punctuation">(</span>wallpaperPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>canvasWidth<span class="token punctuation">,</span> canvasHeight<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> blackBuffer <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sharp</span><span class="token punctuation">(</span>blackFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>canvasWidth<span class="token punctuation">,</span> canvasHeight<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>blackLayerColor <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> rgbColor <span class="token operator">=</span> <span class="token function">hexToRgb</span><span class="token punctuation">(</span>blackLayerColor<span class="token punctuation">)</span><span class="token punctuation">;</span>            blackBuffer <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sharp</span><span class="token punctuation">(</span>blackBuffer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span>rgbColor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">png</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">const</span> bgBuffer <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sharp</span><span class="token punctuation">(</span>bgFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>canvasWidth<span class="token punctuation">,</span> canvasHeight<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 图标合成参数</span>        <span class="token keyword">const</span> startYPercent <span class="token operator">=</span> <span class="token number">45.14</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> startY <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>canvasHeight <span class="token operator">*</span> startYPercent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> iconComposites<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>layoutType <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            iconComposites <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">arrangeIconsLayout1</span><span class="token punctuation">(</span>canvasSize<span class="token punctuation">,</span> <span class="token string">'icon'</span><span class="token punctuation">,</span> startY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            iconComposites <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">arrangeIconsLayout2</span><span class="token punctuation">(</span>canvasSize<span class="token punctuation">,</span> <span class="token string">'icon'</span><span class="token punctuation">,</span> startY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 一次性合成所有图层</span>        <span class="token keyword">let</span> canvas <span class="token operator">=</span> <span class="token function">sharp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">width</span><span class="token operator">:</span> canvasWidth<span class="token punctuation">,</span>                <span class="token literal-property property">height</span><span class="token operator">:</span> canvasHeight<span class="token punctuation">,</span>                <span class="token literal-property property">channels</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>                <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">r</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">g</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> allLayers <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">input</span><span class="token operator">:</span> wallpaperBuffer<span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">input</span><span class="token operator">:</span> blackBuffer<span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">input</span><span class="token operator">:</span> bgBuffer<span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token operator">...</span>iconComposites        <span class="token punctuation">]</span><span class="token punctuation">;</span>        canvas <span class="token operator">=</span> <span class="token keyword">await</span> canvas<span class="token punctuation">.</span><span class="token function">composite</span><span class="token punctuation">(</span>allLayers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 保存</span>        <span class="token keyword">const</span> outputFilename <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">preview</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>layoutType<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.png</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>        <span class="token keyword">await</span> canvas<span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span>outputFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> totalTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> totalStartTime<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[成功] 图片已保存为: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>outputFilename<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">总耗时: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>totalTime<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">ms</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> canvas<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">创建分层图片时出错: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 分析生成的图片信息 * @param &#123;string&#125; filename - 图片文件名 */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">analyzeImage</span><span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> metadata <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sharp</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">metadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">生成图片信息:</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">  尺寸: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>metadata<span class="token punctuation">.</span>width<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">x</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>metadata<span class="token punctuation">.</span>height<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">  格式: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>metadata<span class="token punctuation">.</span>format<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">  通道数: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>metadata<span class="token punctuation">.</span>channels<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">  文件路径: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 获取文件大小</span>        <span class="token keyword">const</span> stats <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">  文件大小: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>stats<span class="token punctuation">.</span>size<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 字节</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">分析图片时出错: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 主函数：生成两种布局的图片 */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"=== 统一图片生成程序 ===\n目标: 生成两种不同布局的图片\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> totalStartTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 黑色图层颜色配置示例</span>    <span class="token comment">// 可以设置为不同的16进制颜色，例如：</span>    <span class="token comment">// "#000000" - 黑色</span>    <span class="token comment">// "#FFFFFF" - 白色</span>    <span class="token comment">// "#808080" - 灰色</span>    <span class="token comment">// "#FF0000" - 红色</span>    <span class="token comment">// "#00FF00" - 绿色</span>    <span class="token comment">// "#0000FF" - 蓝色</span>    <span class="token comment">// null - 保持原样，不转换颜色</span>    <span class="token keyword">const</span> blackLayerColor <span class="token operator">=</span> <span class="token string">"#000000"</span><span class="token punctuation">;</span>  <span class="token comment">// 设置为黑色</span>    <span class="token comment">// 生成布局1的图片</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"=== 生成布局1图片 ==="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> canvas1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createLayeredImage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2560</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">720</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> blackLayerColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvas1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">await</span> <span class="token function">analyzeImage</span><span class="token punctuation">(</span><span class="token string">'preview1.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"[成功] 布局1图片生成完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"[失败] 布局1图片生成失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 生成布局2的图片</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"=== 生成布局2图片 ==="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> canvas2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createLayeredImage</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2560</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">720</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> blackLayerColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvas2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">await</span> <span class="token function">analyzeImage</span><span class="token punctuation">(</span><span class="token string">'preview2.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"[成功] 布局2图片生成完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"[失败] 布局2图片生成失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 总耗时</span>    <span class="token keyword">const</span> totalTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> totalStartTime<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n=== 总耗时统计 ===</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">总耗时: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>totalTime<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">ms</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 如果直接运行此文件，则执行main函数</span><span class="token keyword">if</span> <span class="token punctuation">(</span>require<span class="token punctuation">.</span>main <span class="token operator">===</span> module<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"程序执行出错:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 导出函数以便其他模块使用</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    hexToRgb<span class="token punctuation">,</span>    loadAndResizeIcon<span class="token punctuation">,</span>    arrangeIconsLayout1<span class="token punctuation">,</span>    arrangeIconsLayout2<span class="token punctuation">,</span>    createLayeredImage<span class="token punctuation">,</span>    analyzeImage<span class="token punctuation">,</span>    main<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker部署nodejs服务需要注意的问题</title>
      <link href="/2025/07/04/docker-bu-shu-nodejs-fu-wu-xu-yao-zhu-yi-de-wen-ti/"/>
      <url>/2025/07/04/docker-bu-shu-nodejs-fu-wu-xu-yao-zhu-yi-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="无头浏览器完成任务后关闭浏览器"><a href="#无头浏览器完成任务后关闭浏览器" class="headerlink" title="无头浏览器完成任务后关闭浏览器"></a>无头浏览器完成任务后关闭浏览器</h1><hr><h3 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h3><p><code>你希望在任务完成后关闭 Playwright 启动的浏览器。你当前的 a(type) 函数里，浏览器是在函数开头启动的，但在上传图片后没有关闭。正确做法是在上传完成（无论成功或失败）后调用 browser.close()。</code></p><blockquote><ol><li>在 a(type) 函数中，上传图片的 Promise 完成后（resolve 或 reject 前），都调用 await browser.close()。</li><li>可以用 try…finally 保证无论上传成功还是失败都能关闭浏览器。</li></ol></blockquote><p>修改如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ... 省略部分代码 ...</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token comment">// ... 省略页面操作和截图 ...</span><span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>cos<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token comment">// ... 省略参数 ...</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"上传失败"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">"E0002"</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"图片上传失败"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"上传成功"</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>Location<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token string">"200"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>Location<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">图片上传完成</span><span class="token operator">:</span> url <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">"0000"</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> url <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span><span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样可以确保无论上传成功还是失败，浏览器都能被正确关闭，避免资源泄漏。</p><p><strong>问题</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token constant">UID</span>          <span class="token constant">PID</span>    <span class="token constant">PPID</span>  <span class="token constant">C</span> <span class="token constant">STIME</span> <span class="token constant">TTY</span>          <span class="token constant">TIME</span> <span class="token constant">CMD</span>root           <span class="token number">1</span>       <span class="token number">0</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">36</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">01</span> node index<span class="token punctuation">.</span>jsroot         <span class="token number">149</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">150</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">152</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">153</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">256</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">257</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">296</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">43</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">297</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">43</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">299</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">43</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">300</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">43</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">434</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">435</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">437</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">438</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">547</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">575</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">576</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">578</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">579</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">663</span>       <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">46</span> <span class="token operator">?</span>        <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token punctuation">[</span>headless_shell<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">></span>root         <span class="token number">707</span>       <span class="token number">0</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">48</span> pts<span class="token operator">/</span><span class="token number">0</span>    <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> bashroot         <span class="token number">715</span>     <span class="token number">707</span>  <span class="token number">0</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">48</span> pts<span class="token operator">/</span><span class="token number">0</span>    <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> ps <span class="token operator">-</span>ef<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 Docker 部署后，发现有大量 <code>[headless_shell] &lt;defunct&gt;</code> 进程（僵尸进程），这说明 Playwright 启动的 Chromium 浏览器虽然调用了 <code>browser.close()</code>，但其子进程没有被正确回收，导致僵尸进程。</p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><ul><li>这通常是 Node.js 进程作为 PID 1 运行在容器内时（即没有被其他进程如 <code>tini</code> 或 <code>dumb-init</code> 包裹），不会自动回收子进程，导致僵尸进程堆积。</li><li>这不是代码问题，而是 Docker 容器内 Node 进程管理的问题。</li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>修改 dockerfile 文件</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># 安装 tini</span><span class="token instruction"><span class="token keyword">RUN</span> apt-get update &amp;&amp; apt-get install -y tini</span><span class="token comment"># 用 tini 启动你的应用</span><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"/usr/bin/tini"</span>, <span class="token string">"--"</span>]</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"node"</span>, <span class="token string">"index.js"</span>]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>如果不改影响性能吗</strong></p><p><strong>短期内影响不大，长期会有影响。</strong></p><ol><li><p><strong>僵尸进程本身不会占用太多 CPU 和内存</strong><br>僵尸进程只是占用很少的系统资源（主要是进程表项），不会消耗 CPU，也不会占用大量内存。</p></li><li><p><strong>但僵尸进程数量多了会有隐患</strong></p><ul><li>每个僵尸进程会占用一个进程号（PID），Linux 系统的 PID 是有限的（通常最多 32768 或更高）。</li><li>如果僵尸进程持续累积，最终可能导致系统无法分配新的 PID，届时无法再创建新进程（包括新的浏览器、shell、甚至系统服务），这会导致服务异常甚至崩溃。</li><li>进程表项过多，也会让系统管理进程的效率下降，极端情况下影响系统性能。</li></ul></li><li><p><strong>容器重启后会清空僵尸进程</strong><br>但如果你的服务是高并发、长时间运行的，僵尸进程会不断累积，风险会逐渐变大。</p></li></ol><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><ul><li><strong>短时间/低并发下影响不大。</strong></li><li><strong>长期/高并发下，僵尸进程会越来越多，最终影响系统稳定性和性能。</strong></li><li><strong>最佳实践：一开始就用 tini 或 dumb-init，彻底解决僵尸进程问题。</strong></li></ul><h3 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用 Playwright 的官方基础镜像</span>FROM mcr.microsoft.com/playwright:v1.49.0-nobleRUN <span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com<span class="token comment"># 安装 pnpm</span>RUN <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">pnpm</span><span class="token comment"># 安装 tini</span>RUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> tini<span class="token comment"># 设置工作目录</span>WORKDIR /app<span class="token comment"># 复制 package.json 和 pnpm-lock.yaml 文件</span>COPY package.json pnpm-lock.yaml ./<span class="token comment"># 安装项目依赖</span>RUN <span class="token function">pnpm</span> <span class="token function">install</span><span class="token comment"># 复制项目文件</span>COPY <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span><span class="token comment"># 用 tini 启动 node</span>ENTRYPOINT <span class="token punctuation">[</span><span class="token string">"/usr/bin/tini"</span>, <span class="token string">"--"</span><span class="token punctuation">]</span>CMD <span class="token punctuation">[</span><span class="token string">"node"</span>, <span class="token string">"index.js"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python进行视频格式转换</title>
      <link href="/2025/06/10/python-jin-xing-shi-pin-ge-shi-zhuan-huan/"/>
      <url>/2025/06/10/python-jin-xing-shi-pin-ge-shi-zhuan-huan/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> shutil<span class="token keyword">import</span> subprocess<span class="token keyword">import</span> sys<span class="token keyword">import</span> re<span class="token keyword">if</span> <span class="token keyword">not</span> shutil<span class="token punctuation">.</span>which<span class="token punctuation">(</span><span class="token string">"ffmpeg"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'当前系统未安装ffmpeg，请下载变将 ffmpeg.exe 放在当前目录下\n下载地址\nhttps://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.7z'</span><span class="token punctuation">)</span>    <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"按回车退出"</span><span class="token punctuation">)</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>root <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>filepath<span class="token operator">=</span>rootcfg <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token string">'cfg.txt'</span><span class="token punctuation">)</span>sext <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mp3'</span><span class="token punctuation">,</span> <span class="token string">'flac'</span><span class="token punctuation">,</span> <span class="token string">'mp4'</span><span class="token punctuation">,</span> <span class="token string">'mpeg'</span><span class="token punctuation">,</span> <span class="token string">'aac'</span><span class="token punctuation">,</span> <span class="token string">'mkv'</span><span class="token punctuation">,</span> <span class="token string">'avi'</span><span class="token punctuation">,</span><span class="token string">'wmv'</span><span class="token punctuation">,</span><span class="token string">'m3u8'</span><span class="token punctuation">]</span>ext <span class="token operator">=</span> <span class="token string">'mp4'</span><span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>cfg<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>cfg<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            it <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> it<span class="token punctuation">:</span>                it <span class="token operator">=</span> it<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'，'</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span>                length<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span>                <span class="token keyword">if</span> length<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> it<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'source_ext'</span><span class="token punctuation">:</span>                        sext <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> it<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">]</span>                    <span class="token keyword">elif</span> it<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'target_ext'</span><span class="token punctuation">:</span>                        ext <span class="token operator">=</span> it<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token keyword">elif</span> it<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'dir'</span> <span class="token keyword">and</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>it<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span>it<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        filepath<span class="token operator">=</span>it<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"""将把当前目录下 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token string">","</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>sext<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 格式的文件转为 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>ext<span class="token punctuation">&#125;</span></span><span class="token string">格式你也可以修改 cfg.txt 里  source_ext  后的扩展名列表，改变需要被转换的格式修改  target_ext  改变要转换到的格式"""</span></span><span class="token punctuation">)</span>yes<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"如果确认开始转换，请输入y\n或者输入 待转换格式->转换到的格式\n例如输入 avi->mp4  将把 avi 视频转换 mp4 视频: "</span><span class="token punctuation">)</span>yes<span class="token operator">=</span>yes<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token keyword">not</span> yes<span class="token punctuation">:</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>yes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span> <span class="token keyword">and</span> yes<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span><span class="token string">'y'</span><span class="token punctuation">:</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>yes<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">:</span>    m<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r'([a-zA-Z0-9]+)->([a-zA-Z0-9]+)'</span><span class="token punctuation">,</span>yes<span class="token punctuation">,</span>re<span class="token punctuation">.</span>I<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> m <span class="token keyword">or</span> <span class="token builtin">len</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">2</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入错误，如果想输入 旧格式转为新格式，请按照  avi->mp4 格式输入'</span><span class="token punctuation">)</span>        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    m<span class="token operator">=</span>m<span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span>    sext<span class="token operator">=</span>m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>    ext<span class="token operator">=</span>m<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> it <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> it<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> sext<span class="token punctuation">:</span>        files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'\n没有需要转换的文件'</span></span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    ok <span class="token operator">=</span> <span class="token number">0</span>    err <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span>it <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            cmd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'ffmpeg'</span><span class="token punctuation">,</span> <span class="token string">"-hide_banner"</span><span class="token punctuation">,</span> <span class="token string">"-ignore_unknown"</span><span class="token punctuation">,</span> <span class="token string">'-y'</span><span class="token punctuation">,</span> <span class="token string">'-i'</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>normpath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> it<span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token punctuation">]</span>            <span class="token keyword">if</span> ext<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'mp4'</span><span class="token punctuation">:</span>                cmd<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'-c:v'</span><span class="token punctuation">,</span><span class="token string">'libx264'</span><span class="token punctuation">,</span><span class="token string">'-c:a'</span><span class="token punctuation">,</span><span class="token string">'aac'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            cmd<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>normpath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>filepath<span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>it<span class="token punctuation">&#125;</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ext<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'\n[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">]. 开始转换 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>it<span class="token punctuation">&#125;</span></span><span class="token string">\n可能需要一些时间，结束后将有提示，请耐心等待\n'</span></span><span class="token punctuation">)</span>            p<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> check<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>STDOUT<span class="token punctuation">)</span>            <span class="token keyword">if</span> p<span class="token punctuation">.</span>returncode<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>                <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>stderr<span class="token punctuation">)</span><span class="token punctuation">)</span>                sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[OK] </span><span class="token interpolation"><span class="token punctuation">&#123;</span>it<span class="token punctuation">&#125;</span></span><span class="token string"> 转换成功'</span></span><span class="token punctuation">)</span>            ok <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            err<span class="token punctuation">.</span>append<span class="token punctuation">(</span>it<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[Error] </span><span class="token interpolation"><span class="token punctuation">&#123;</span>it<span class="token punctuation">&#125;</span></span><span class="token string"> 转换失败 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n转换完毕，</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ok<span class="token punctuation">&#125;</span></span><span class="token string"> 个成功，</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">len</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> 个失败,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>err <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">''</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span><span class="token punctuation">)</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"\n按回车退出"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python遍历解压</title>
      <link href="/2025/06/10/python-bian-li-jie-ya/"/>
      <url>/2025/06/10/python-bian-li-jie-ya/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> zipfile<span class="token keyword">import</span> tarfile<span class="token keyword">import</span> gzip<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path<span class="token keyword">def</span> <span class="token function">extract_nested_archives</span><span class="token punctuation">(</span>archive_path<span class="token punctuation">,</span> extract_to<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> processed<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    递归解压嵌套的压缩文件（新增对单独.gz文件的支持）    :param archive_path: 要解压的压缩文件路径    :param extract_to: 解压目录（默认为文件所在目录/文件名_extracted）    :param processed: 已处理的文件集合（防止重复处理）    """</span>    <span class="token keyword">if</span> processed <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        processed <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    archive_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span>    <span class="token keyword">if</span> archive_path <span class="token keyword">in</span> processed<span class="token punctuation">:</span>        <span class="token keyword">return</span>    processed<span class="token punctuation">.</span>add<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span>    <span class="token keyword">if</span> extract_to <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        extract_to <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span><span class="token punctuation">,</span>                                Path<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span><span class="token punctuation">.</span>stem <span class="token operator">+</span> <span class="token string">"_extracted"</span><span class="token punctuation">)</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>extract_to<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 处理ZIP文件</span>        <span class="token keyword">if</span> zipfile<span class="token punctuation">.</span>is_zipfile<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">with</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>archive_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> zip_ref<span class="token punctuation">:</span>                zip_ref<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span>extract_to<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"解压ZIP文件: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>archive_path<span class="token punctuation">&#125;</span></span><span class="token string"> -> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>extract_to<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 处理TAR文件（包括tar.gz/tar.bz2）</span>        <span class="token keyword">elif</span> tarfile<span class="token punctuation">.</span>is_tarfile<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            mode <span class="token operator">=</span> <span class="token string">'r'</span>            <span class="token keyword">if</span> archive_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.tar.gz'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                mode <span class="token operator">=</span> <span class="token string">'r:gz'</span>            <span class="token keyword">elif</span> archive_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.tar.bz2'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                mode <span class="token operator">=</span> <span class="token string">'r:bz2'</span>            <span class="token keyword">with</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>archive_path<span class="token punctuation">,</span> mode<span class="token punctuation">)</span> <span class="token keyword">as</span> tar_ref<span class="token punctuation">:</span>                tar_ref<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span>extract_to<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"解压TAR文件: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>archive_path<span class="token punctuation">&#125;</span></span><span class="token string"> -> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>extract_to<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token comment"># 新增：处理单独.gz文件</span>        <span class="token keyword">elif</span> archive_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.gz'</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">not</span> tarfile<span class="token punctuation">.</span>is_tarfile<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            output_name <span class="token operator">=</span> Path<span class="token punctuation">(</span>archive_path<span class="token punctuation">)</span><span class="token punctuation">.</span>stem  <span class="token comment"># 自动去除.gz后缀</span>            output_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>extract_to<span class="token punctuation">,</span> output_name<span class="token punctuation">)</span>            <span class="token keyword">with</span> gzip<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>archive_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f_in<span class="token punctuation">:</span>                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>output_path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f_out<span class="token punctuation">:</span>                    f_out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>f_in<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"解压GZ文件: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>archive_path<span class="token punctuation">&#125;</span></span><span class="token string"> -> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>output_path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token comment"># 递归处理新解压的文件</span>            extract_nested_archives<span class="token punctuation">(</span>output_path<span class="token punctuation">,</span> processed<span class="token operator">=</span>processed<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"不支持的文件格式: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>archive_path<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token comment"># 递归处理解压目录中的所有文件</span>        <span class="token keyword">for</span> root<span class="token punctuation">,</span> _<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>extract_to<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>                file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>                extract_nested_archives<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> processed<span class="token operator">=</span>processed<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"解压失败: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>archive_path<span class="token punctuation">&#125;</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    start_archive <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入要解压的初始压缩文件路径: "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>start_archive<span class="token punctuation">)</span><span class="token punctuation">:</span>        extract_nested_archives<span class="token punctuation">(</span>start_archive<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"解压完成！"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"文件不存在！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python视频分帧</title>
      <link href="/2025/06/10/python-shi-pin-fen-zheng/"/>
      <url>/2025/06/10/python-shi-pin-fen-zheng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> os<span class="token comment"># 设置视频文件路径</span>video_path <span class="token operator">=</span> <span class="token string">'1.mp4'</span><span class="token comment"># 设置保存帧图片的文件夹</span>output_folder <span class="token operator">=</span> <span class="token string">'output_frames'</span><span class="token comment"># 确保输出文件夹存在</span><span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>output_folder<span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>output_folder<span class="token punctuation">)</span><span class="token comment"># 打开视频文件</span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>video_path<span class="token punctuation">)</span><span class="token comment"># 检查视频是否成功打开</span><span class="token keyword">if</span> <span class="token keyword">not</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error: Could not open video."</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token punctuation">)</span>frame_count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 读取一帧</span>    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 如果读取失败（例如视频结束），则退出循环</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> ret<span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token comment"># 生成帧图片的文件名</span>    frame_filename <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_folder<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f'frame_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>frame_count<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">.jpg'</span></span><span class="token punctuation">)</span>    <span class="token comment"># 保存帧图片</span>    cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>frame_filename<span class="token punctuation">,</span> frame<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Saved </span><span class="token interpolation"><span class="token punctuation">&#123;</span>frame_filename<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token comment"># 计数加1</span>    frame_count <span class="token operator">+=</span> <span class="token number">1</span><span class="token comment"># 释放视频捕捉对象</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Video frames have been successfully saved.'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把table转化为div</title>
      <link href="/2025/05/28/ba-table-zhuan-hua-wei-div/"/>
      <url>/2025/05/28/ba-table-zhuan-hua-wei-div/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'table'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">table<span class="token punctuation">,</span> idx</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 创建div容器并插入到表格后面</span>    <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>    div<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'divTableContainer'</span>    <span class="token comment">// div.style.margin = '20px';</span>    <span class="token comment">// div.style.padding = '10px';</span>    <span class="token comment">// div.style.border = '1px solid #ddd';</span>    table<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>div<span class="token punctuation">,</span> table<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span>    <span class="token comment">// 转换表格</span>    <span class="token function">convertTableWithMergedCells</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> div<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">function</span> <span class="token function">convertTableWithMergedCells</span><span class="token punctuation">(</span><span class="token parameter">tableElement<span class="token punctuation">,</span> targetContainer</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    targetContainer<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">const</span> rows <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>tableElement<span class="token punctuation">.</span>rows<span class="token punctuation">)</span>    <span class="token keyword">const</span> colCount <span class="token operator">=</span> <span class="token function">getTheadColCount</span><span class="token punctuation">(</span>tableElement<span class="token punctuation">)</span> <span class="token comment">// 用thead的列数</span>    targetContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'grid'</span>    targetContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>gridTemplateColumns <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">repeat(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>colCount<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, 1fr)</span><span class="token template-punctuation string">`</span></span>    <span class="token keyword">const</span> cellMatrix <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    rows<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tr<span class="token punctuation">,</span> rowIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> colPointer <span class="token operator">=</span> <span class="token number">0</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cellMatrix<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> cellMatrix<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>tr<span class="token punctuation">.</span>cells<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">td</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>cellMatrix<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>colPointer<span class="token punctuation">]</span><span class="token punctuation">)</span> colPointer<span class="token operator">++</span>        <span class="token keyword">const</span> rowspan <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>td<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'rowspan'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token comment">// 这里限制colspan最大不超过colCount</span>        <span class="token keyword">const</span> colspan <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>td<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'colspan'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colCount <span class="token operator">-</span> colPointer<span class="token punctuation">)</span>        <span class="token keyword">const</span> cellDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        cellDiv<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'div-cell'</span>        cellDiv<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> td<span class="token punctuation">.</span>innerHTML        cellDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>gridColumn <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>colPointer <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> / span </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>colspan<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>        cellDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>gridRow <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rowIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> / span </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rowspan<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>        targetContainer<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>cellDiv<span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> r <span class="token operator">&lt;</span> rowspan<span class="token punctuation">;</span> r<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> colspan<span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cellMatrix<span class="token punctuation">[</span>rowIndex <span class="token operator">+</span> r<span class="token punctuation">]</span><span class="token punctuation">)</span> cellMatrix<span class="token punctuation">[</span>rowIndex <span class="token operator">+</span> r<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            cellMatrix<span class="token punctuation">[</span>rowIndex <span class="token operator">+</span> r<span class="token punctuation">]</span><span class="token punctuation">[</span>colPointer <span class="token operator">+</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        colPointer <span class="token operator">+=</span> colspan      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">getTheadColCount</span><span class="token punctuation">(</span><span class="token parameter">tableElement</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> thead <span class="token operator">=</span> tableElement<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'thead'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>thead<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>    <span class="token keyword">const</span> firstRow <span class="token operator">=</span> thead<span class="token punctuation">.</span>rows<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>firstRow<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>    <span class="token keyword">let</span> colCount <span class="token operator">=</span> <span class="token number">0</span>    Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>firstRow<span class="token punctuation">.</span>cells<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">td</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      colCount <span class="token operator">+=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>td<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'colspan'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> colCount  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编辑器插件</title>
      <link href="/2025/05/12/bian-ji-qi-cha-jian/"/>
      <url>/2025/05/12/bian-ji-qi-cha-jian/</url>
      
        <content type="html"><![CDATA[<p><a href="https://code.visualstudio.com/api">vscode插件开发指南</a></p><ol><li>VSCode 插件的主入口在哪里？<br>在 VSCode 插件项目中，通常有一个“主入口”文件，负责注册插件的激活逻辑、命令、事件监听等。<br>在本项目中，主入口一般在 extensions/vscode/src/ 目录下，文件名通常为 extension.ts 或 main.ts。</li><li>如何找到主入口？<br>我来帮你确认一下 extensions/vscode/src/ 目录下的主要文件结构。<br>在 extensions/vscode/src/ 目录下，有一个非常典型的 VSCode 插件主入口文件：<br>extension.ts。</li><li>学习建议与切入点<br>从 extension.ts 入手<br>这个文件是插件的激活入口，负责注册命令、事件、激活/释放生命周期等。<br>你可以先通读这个文件，了解插件是如何被 VSCode 加载和初始化的。<br>理解命令注册与功能实现<br>文件 commands.ts 体量较大，里面实现了插件的各种命令和核心功能。<br>建议先看 extension.ts 如何调用 commands.ts，再逐步深入。<br>Webview 与界面交互<br>文件 ContinueGUIWebviewViewProvider.ts 负责插件侧边栏的 Webview（即图形界面）部分。<br>如果你对插件 UI 感兴趣，可以从这里入手。<br>逐步扩展阅读<br>了解完主流程后，可以根据兴趣，逐步阅读 services/、utils/ 等目录下的辅助功能实现。</li><li>推荐学习顺序<br>extension.ts —— 插件激活与注册<br>commands.ts —— 插件命令与核心逻辑<br>ContinueGUIWebviewViewProvider.ts —— 插件界面与 Webview<br>其他子模块（如 services/、utils/ 等）<br>如果你需要，我可以帮你详细解读 extension.ts 的内容，或者帮你梳理 VSCode 插件开发的基本知识结构。需要深入哪一块，随时告诉我！</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> AICoding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite打包指定目录</title>
      <link href="/2025/04/02/vite-da-bao-zhi-ding-mu-lu/"/>
      <url>/2025/04/02/vite-da-bao-zhi-ding-mu-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h1><h2 id="src"><a href="#src" class="headerlink" title="src/"></a>src/</h2><ul><li><strong>stores/</strong><ul><li>counter.js</li></ul></li><li><strong>router/</strong><ul><li>index.js</li></ul></li><li><strong>views/</strong><ul><li>SIMData.vue</li><li>Index.vue</li><li>off.svg</li><li>detail-page.vue</li><li><strong>detailPageInfo/</strong><ul><li><strong>123/</strong><ul><li>styleModel.js</li><li>css/</li><li>img/</li></ul></li><li><strong>234/</strong><ul><li>styleModel.js</li><li>css/</li><li>img/</li></ul></li><li><strong>345/</strong><ul><li>styleModel.js</li><li>css/</li><li>img/</li></ul></li><li><strong>456/</strong><ul><li>styleModel.js</li><li>css/</li><li>img/</li></ul></li><li><strong>678/</strong><ul><li>styleModel.js</li><li>css/</li><li>img/</li></ul></li><li><strong>789/</strong><ul><li>styleModel.js</li><li>css/</li><li>img/</li></ul></li><li><strong>000/</strong><ul><li>styleModel.js</li><li>css/</li><li>img/</li></ul></li></ul></li></ul></li><li><strong>assets/</strong><ul><li><strong>js/</strong><ul><li><strong>utils/</strong><ul><li>funList.js</li><li>setColorStyle.js</li><li>Native.js</li><li>libs.js</li></ul></li><li><strong>http/</strong><ul><li>httpRequest.js</li><li>post.js</li></ul></li><li>mock.js</li></ul></li><li><strong>css/</strong><ul><li>base.less</li></ul></li><li>zhanwei.png</li><li>cover.png</li></ul></li><li><strong>components/</strong><ul><li>header-layout.vue</li></ul></li><li>main.js</li><li>App.vue</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fileURLToPath<span class="token punctuation">,</span> <span class="token constant">URL</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'node:url'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineConfig<span class="token punctuation">,</span> loadEnv <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vite'</span><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">'@vitejs/plugin-vue'</span><span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">'chalk'</span><span class="token keyword">import</span> topLevelAwait <span class="token keyword">from</span> <span class="token string">'vite-plugin-top-level-await'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'path'</span><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">'fs'</span><span class="token comment">// 从counter.js中读取channelId</span><span class="token keyword">const</span> <span class="token function-variable function">getChannelId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> counterContent <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'src/stores/counter.js'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token comment">// 提取未被注释的window.channelId赋值行</span>    <span class="token keyword">const</span> lines <span class="token operator">=</span> counterContent<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> channelId <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment">// 默认值</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> line <span class="token keyword">of</span> lines<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 匹配未被注释的window.channelId赋值</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'window.channelId ='</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> match <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">window\.channelId\s*=\s*['"]([^'"]+)['"]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          channelId <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>          <span class="token keyword">break</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> channelId  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token string">'读取channelId失败，使用默认值000'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'857'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> channelId <span class="token operator">=</span> <span class="token function">getChannelId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">当前打包渠道ID: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>channelId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> mode <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">'./'</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token function">topLevelAwait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">preprocessorOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">less</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 引入全局 Less 文件</span>          <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@import "./src/assets/css/base.less";</span><span class="token template-punctuation string">`</span></span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">'@'</span><span class="token operator">:</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">'./src'</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">build</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">rollupOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 排除不需要打包的文件</span>        <span class="token function-variable function">external</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 排除detailPageInfo下非当前channelId目录的文件</span>          <span class="token keyword">return</span> id<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'src/views/detailPageInfo/'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                 <span class="token operator">!</span>id<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">src/views/detailPageInfo/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>channelId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 自定义入口文件名</span>          <span class="token literal-property property">entryFileNames</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">assets/[name].[hash].js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token comment">// 自定义块文件名</span>          <span class="token literal-property property">chunkFileNames</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">assets/[name].[hash].js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token comment">// 自定义资源文件名</span>          <span class="token literal-property property">assetFileNames</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">assets/[name].[hash].[ext]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token comment">// 将指定目录下的文件打包在一起</span>          <span class="token function">manualChunks</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 处理当前channelId目录下的文件</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>id<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">src/views/detailPageInfo/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>channelId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">return</span> channelId<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">esbuild</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token literal-property property">sourcesContent</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker命令</title>
      <link href="/2024/12/17/docker-ming-ling/"/>
      <url>/2024/12/17/docker-ming-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="查看服务器上所有的-docker-镜像"><a href="#查看服务器上所有的-docker-镜像" class="headerlink" title="查看服务器上所有的 docker 镜像"></a>查看服务器上所有的 docker 镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会列出所有在本地存在的 Docker 镜像，包括它们的大小和标签信息。如果你想要更详细的信息，可以使用以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> images <span class="token parameter variable">--digests</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会显示每个镜像的摘要信息。如果你想要查看特定仓库的镜像，可以使用–filter 参数来过滤结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> images <span class="token parameter variable">--filter</span> <span class="token string">"reference=&lt;repository-name>"</span><span class="token comment"># 将&lt;repository-name>替换成你想要查看的仓库名称。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="查看正在运行的-Docker-容器"><a href="#查看正在运行的-Docker-容器" class="headerlink" title="查看正在运行的 Docker 容器"></a>查看正在运行的 Docker 容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>可以使用-a或--all参数来显示所有容器，包括未运行的容器：</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="docker-ps-a-和-docker-images-的区别"><a href="#docker-ps-a-和-docker-images-的区别" class="headerlink" title="docker ps -a 和 docker images 的区别"></a>docker ps -a 和 docker images 的区别</h3><blockquote><p>docker ps 和 docker images 是两个不同的 Docker 命令，它们显示的信息也有所不同：<br><code>docker ps</code>：<br>这个命令用于列出容器的信息。<br>docker ps 默认只显示当前正在运行的容器。<br>使用 -a 或 –all 参数可以显示所有容器，包括停止的容器。<br>显示的信息包括容器 ID、创建时间、状态、名称、重启次数、镜像名称等。<br><code>这个命令关注的是容器实例，即镜像的运行实例</code>。<br><code>docker images</code>：<br>这个命令用于列出本地存储的 Docker 镜像。<br>显示的信息包括镜像 ID、创建时间、大小、仓库名称和标签（tag）。<br>docker images 不会显示容器的信息，它只关注镜像本身。<br><code>这个命令可以帮助你管理本地镜像库，比如查看哪些镜像占用了空间，或者确定哪些镜像可以被删除以节省空间</code>。</p></blockquote><h3 id="docker-镜像和容器的区别"><a href="#docker-镜像和容器的区别" class="headerlink" title="docker 镜像和容器的区别"></a>docker 镜像和容器的区别</h3><blockquote><p><code>定义</code>：<br>镜像（Image）：Docker 镜像是一个轻量级、可执行的软件包，包含了运行一个应用所需的所有内容——代码、运行时、系统工具、系统库等。镜像是容器运行的基础，它是一个只读模板，用于创建容器。<br>容器（Container）：Docker 容器是镜像的运行实例。它是独立运行的一个或一组应用。容器使用镜像来创建，并在隔离的环境中运行应用。容器可以被启动、停止、删除等。<br><code>持久性</code>：<br>镜像：镜像是只读的，它们定义了容器的初始状态，但不会随容器的状态改变而改变。<br>容器：容器对文件系统的变化是临时的，容器删除后这些变化也会随之消失，除非使用了数据卷（Volume）来持久化数据。<br><code>隔离性</code>：<br>镜像：镜像本身不提供隔离性，它们是共享的，多个容器可以基于同一个镜像运行。<br>容器：容器提供了隔离性，每个容器都有自己的文件系统和网络配置，它们在宿主机上运行但相互隔离。<br><code>启动和停止</code>：<br>镜像：镜像本身不能被启动或停止，它们只是创建容器的模板。<br>容器：容器可以被启动和停止，它们是镜像的动态实例。<br><code>存储</code>：<br>镜像：镜像存储在 Docker 的镜像库中，可以是本地的，也可以是远程的，如 Docker Hub。<br>容器：容器运行时会使用镜像，并且可能会产生新的层，这些层存储在本地，但不会上传到镜像库。<br><code>版本控制</code>：<br>镜像：镜像可以有标签（tag），用于版本控制，允许用户追踪和管理不同版本的应用。<br>容器：容器没有版本控制，它们是镜像的一个实例，通常不用于追踪版本。<br>可移植性：<br>镜像：镜像是高度可移植的，可以在任何支持 Docker 的环境中运行。<br>容器：容器的可移植性依赖于镜像的可移植性，但由于容器可能会使用特定的数据卷或网络配置，因此可能不如镜像那样完全可移植。</p></blockquote><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><p>要删除特定的 Docker 镜像，你需要使用 docker rmi 命令，后面跟上你想要删除的镜像的 ID 或名称</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> rmi my-playwright-app1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用-f 或–force 参数来强制删除</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> my-playwright-app1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>请注意，如果镜像正在被使用（例如，如果它们正在运行的容器中），你可能需要先停止并删除这些容器，然后才能删除镜像。</code><br>如果你想要一次性删除多个镜像，可以使用以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> rmi <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-q</span> my-playwright-app1 my-playwright-app aithemehtml2img1 aithemehtml2img<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="构建-docker-镜像"><a href="#构建-docker-镜像" class="headerlink" title="构建 docker 镜像"></a>构建 docker 镜像</h3><blockquote><p>构建 Docker 镜像是一个常见的操作，它允许你将应用程序及其依赖打包成一个轻量级、可移植的容器。以下是构建 Docker 镜像的基本步骤：<br>1、编写 Dockerfile<br>2、构建镜像<br>3、运行容器</p></blockquote><h4 id="1、编写-Dockerfile"><a href="#1、编写-Dockerfile" class="headerlink" title="1、编写 Dockerfile"></a>1、编写 Dockerfile</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用 Playwright 的官方基础镜像</span>FROM mcr.microsoft.com/playwright:v1.49.0-noble<span class="token comment"># 安装 pnpm</span><span class="token comment"># RUN npm install -g pnpm</span><span class="token comment"># 设置工作目录</span>WORKDIR /app<span class="token comment"># 复制 package.json 和 package-lock.json 文件</span>COPY package.json ./<span class="token comment"># 安装项目依赖</span>RUN <span class="token function">npm</span> <span class="token function">install</span><span class="token comment"># # 安装 Playwright 和浏览器</span><span class="token comment"># RUN npx playwright install --with-deps</span><span class="token comment"># 复制项目文件</span>COPY <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span><span class="token comment"># 默认运行命令</span>CMD <span class="token punctuation">[</span><span class="token string">"node"</span>, <span class="token string">"index.js"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、构建镜像"><a href="#2、构建镜像" class="headerlink" title="2、构建镜像"></a>2、构建镜像</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> build <span class="token parameter variable">-t</span> my-playwright-app <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3、运行容器"><a href="#3、运行容器" class="headerlink" title="3、运行容器"></a>3、运行容器</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">3000</span>:3000 my-playwright-app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>-p 参数用于映射端口，3000:3000 表示将容器的3000端口映射到宿主机的3000端口。</code><br><code>-d 参数表示在后台运行容器。</code></p><h3 id="查看-Docker-容器的实时日志"><a href="#查看-Docker-容器的实时日志" class="headerlink" title="查看 Docker 容器的实时日志"></a>查看 Docker 容器的实时日志</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> <span class="token operator">&lt;</span>container_id<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="通过名称来引用容器"><a href="#通过名称来引用容器" class="headerlink" title="通过名称来引用容器"></a>通过名称来引用容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> aitheme2img<span class="token punctuation">(</span>容器名<span class="token punctuation">)</span> <span class="token parameter variable">-p</span> <span class="token number">10089</span>:10086 -d<span class="token punctuation">(</span>分离模式”（detached mode）运行容器，即容器会在后台运行，不会占用当前的命令行终端<span class="token punctuation">)</span> aitheme2img<span class="token punctuation">(</span>镜像<span class="token punctuation">)</span>或者<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> aitheme2img<span class="token punctuation">(</span>容器名<span class="token punctuation">)</span> <span class="token parameter variable">-p</span> <span class="token number">10089</span>:10086 aitheme2img<span class="token punctuation">(</span>镜像<span class="token punctuation">)</span>或者<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">10089</span>:10086 <span class="token parameter variable">--name</span> aitheme2img<span class="token punctuation">(</span>容器名<span class="token punctuation">)</span> aitheme2img<span class="token punctuation">(</span>镜像<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置容器随-Docker-服务启动而自动启动"><a href="#设置容器随-Docker-服务启动而自动启动" class="headerlink" title="设置容器随 Docker 服务启动而自动启动"></a>设置容器随 Docker 服务启动而自动启动</h3><p>在 Docker 中，要设置容器随 Docker 服务启动而自动启动，你可以在创建容器时使用–restart 标志。这个标志允许你指定重启策略，以确保容器在退出后自动重启，或者在 Docker 服务重新启动时自动启动容器。</p><blockquote><p>no：容器不会自动重启。<br>always：容器总是在退出后重启。<br>on-failure：容器仅在非正常退出时（退出状态非 0）重启。<br>unless-stopped：容器总是在退出后重启，除非它是被手动停止的。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-d</span> aitheme2img<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>这些命令会创建一个新的容器，并设置其重启策略。如果你想要更新已经存在的容器的重启策略，你需要使用docker update命令：</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token operator">&lt;</span>container_id_or_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看-docker-容器里面的所有文件"><a href="#查看-docker-容器里面的所有文件" class="headerlink" title="查看 docker 容器里面的所有文件"></a>查看 docker 容器里面的所有文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token operator">&lt;</span>container_id_or_name<span class="token operator">></span> /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>/bin/bash换成自己服务器用的终端，然后使用文件系统命令（如ls）来查看文件</code></p><h3 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> stop <span class="token operator">&lt;</span>container_id_or_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token operator">&lt;</span>container_id_or_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取浏览器当前页面可见元素</title>
      <link href="/2024/11/07/huo-qu-liu-lan-qi-dang-qian-ye-mian-ke-jian-yuan-su/"/>
      <url>/2024/11/07/huo-qu-liu-lan-qi-dang-qian-ye-mian-ke-jian-yuan-su/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">isElementVisible</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> style <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 元素本身的可见性判断</span><span class="token keyword">const</span> isDisplayVisible <span class="token operator">=</span> style<span class="token punctuation">.</span>display <span class="token operator">!==</span> <span class="token string">"none"</span><span class="token punctuation">;</span><span class="token keyword">const</span> isVisibilityVisible <span class="token operator">=</span> style<span class="token punctuation">.</span>visibility <span class="token operator">!==</span> <span class="token string">"hidden"</span><span class="token punctuation">;</span><span class="token keyword">const</span> isOpacityVisible <span class="token operator">=</span> style<span class="token punctuation">.</span>opacity <span class="token operator">!==</span> <span class="token string">"0"</span><span class="token punctuation">;</span><span class="token comment">// 检查元素是否在视口内</span><span class="token keyword">const</span> rect <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> isInViewport <span class="token operator">=</span>rect<span class="token punctuation">.</span>top <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>rect<span class="token punctuation">.</span>left <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>rect<span class="token punctuation">.</span>bottom <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>rect<span class="token punctuation">.</span>right <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> isDisplayVisible <span class="token operator">&amp;&amp;</span> isVisibilityVisible <span class="token operator">&amp;&amp;</span> isOpacityVisible <span class="token operator">&amp;&amp;</span> isInViewport<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 检查父元素的可见性</span><span class="token keyword">function</span> <span class="token function">isParentVisible</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> parent <span class="token operator">=</span> element<span class="token punctuation">.</span>parentElement<span class="token punctuation">;</span><span class="token comment">// 递归检查父元素是否可见</span><span class="token keyword">while</span> <span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> style <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 如果父元素的 display、visibility 或 opacity 使其不可见，返回 false</span><span class="token keyword">if</span> <span class="token punctuation">(</span>style<span class="token punctuation">.</span>display <span class="token operator">===</span> <span class="token string">"none"</span> <span class="token operator">||</span> style<span class="token punctuation">.</span>visibility <span class="token operator">===</span> <span class="token string">"hidden"</span> <span class="token operator">||</span> style<span class="token punctuation">.</span>opacity <span class="token operator">===</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>parent <span class="token operator">=</span> parent<span class="token punctuation">.</span>parentElement<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取所有页面上可见的元素，忽略父元素不可见的子元素</span><span class="token keyword">function</span> <span class="token function">getVisibleElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> elements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取所有元素</span><span class="token keyword">const</span> visibleElements <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>elements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">// 如果父元素可见且元素本身可见，则加入可见元素列表</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isParentVisible</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isElementVisible</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>visibleElements<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> visibleElements<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取所有可见的元素</span><span class="token keyword">const</span> visibleElements <span class="token operator">=</span> <span class="token function">getVisibleElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>visibleElements<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>非工程化前端项目打包成apk</title>
      <link href="/2024/09/04/fei-gong-cheng-hua-qian-duan-xiang-mu-da-bao-cheng-apk/"/>
      <url>/2024/09/04/fei-gong-cheng-hua-qian-duan-xiang-mu-da-bao-cheng-apk/</url>
      
        <content type="html"><![CDATA[<p>使用 Cordova 打包 HTML 文件为 APK</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> cordovacordova create MyApp<span class="token builtin class-name">cd</span> MyAppcordova platform <span class="token function">add</span> android<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>将你已有的 HTML 文件复制到 www 目录中，确保 www 目录下有一个 index.html 文件，这是应用的入口文件</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cordova build android<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>构建完成后，你会在 platforms/android/app/build/outputs/apk/debug/ 目录下找到生成的 APK 文件</code><br><code>如果因为gradle环境问题，使用命令</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cordova prepare androidgradle <span class="token parameter variable">-b</span> platforms/android/build.gradle build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 实践 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python遍历解压压缩包</title>
      <link href="/2024/09/03/python-bian-li-jie-ya-ya-suo-bao/"/>
      <url>/2024/09/03/python-bian-li-jie-ya-ya-suo-bao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> zipfile<span class="token keyword">import</span> tarfile<span class="token keyword">import</span> shutil<span class="token keyword">def</span> <span class="token function">ensure_dir_exists</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""确保目录存在，不存在则创建"""</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_extract_path</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""根据压缩包名称生成解压目录路径"""</span>    extract_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 获取压缩包的名字，不带后缀</span>    extract_to <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">,</span> extract_dir<span class="token punctuation">)</span>  <span class="token comment"># 与压缩包同级目录</span>    <span class="token keyword">return</span> extract_to<span class="token keyword">def</span> <span class="token function">unzip_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""解压.zip文件到指定目录下"""</span>    ensure_dir_exists<span class="token punctuation">(</span>extract_to<span class="token punctuation">)</span>    <span class="token keyword">with</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> zip_ref<span class="token punctuation">:</span>        <span class="token keyword">for</span> member <span class="token keyword">in</span> zip_ref<span class="token punctuation">.</span>infolist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> member<span class="token punctuation">.</span>filename<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.log'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># 将 .log 文件直接复制到目标目录，而不解压</span>                log_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>extract_to<span class="token punctuation">,</span> member<span class="token punctuation">.</span>filename<span class="token punctuation">)</span>                ensure_dir_exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>log_path<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">with</span> zip_ref<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span> <span class="token keyword">as</span> source<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span>log_path<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> target<span class="token punctuation">:</span>                    shutil<span class="token punctuation">.</span>copyfileobj<span class="token punctuation">(</span>source<span class="token punctuation">,</span> target<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Copied .log file: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>member<span class="token punctuation">.</span>filename<span class="token punctuation">&#125;</span></span><span class="token string"> to </span><span class="token interpolation"><span class="token punctuation">&#123;</span>log_path<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                zip_ref<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>member<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Extracted: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>member<span class="token punctuation">.</span>filename<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">untar_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""解压.tar, .tar.gz, .tar.bz2文件到指定目录下"""</span>    ensure_dir_exists<span class="token punctuation">(</span>extract_to<span class="token punctuation">)</span>    mode <span class="token operator">=</span> <span class="token string">'r'</span>    <span class="token keyword">if</span> file_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.gz'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        mode <span class="token operator">=</span> <span class="token string">'r:gz'</span>    <span class="token keyword">elif</span> file_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.bz2'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        mode <span class="token operator">=</span> <span class="token string">'r:bz2'</span>    <span class="token keyword">with</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> mode<span class="token punctuation">)</span> <span class="token keyword">as</span> tar_ref<span class="token punctuation">:</span>        <span class="token keyword">for</span> member <span class="token keyword">in</span> tar_ref<span class="token punctuation">.</span>getmembers<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> member<span class="token punctuation">.</span>name<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.log'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># 将 .log 文件直接复制到目标目录，而不解压</span>                log_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>extract_to<span class="token punctuation">,</span> member<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                ensure_dir_exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>log_path<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">with</span> tar_ref<span class="token punctuation">.</span>extractfile<span class="token punctuation">(</span>member<span class="token punctuation">)</span> <span class="token keyword">as</span> source<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span>log_path<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> target<span class="token punctuation">:</span>                    shutil<span class="token punctuation">.</span>copyfileobj<span class="token punctuation">(</span>source<span class="token punctuation">,</span> target<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Copied .log file: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>member<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span></span><span class="token string"> to </span><span class="token interpolation"><span class="token punctuation">&#123;</span>log_path<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                tar_ref<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>member<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Extracted: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>member<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">extract_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""根据文件类型选择解压方式"""</span>    <span class="token keyword">if</span> file_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.zip'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        unzip_file<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span>    <span class="token keyword">elif</span> file_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'.tar'</span><span class="token punctuation">,</span> <span class="token string">'.tar.gz'</span><span class="token punctuation">,</span> <span class="token string">'.tar.bz2'</span><span class="token punctuation">,</span> <span class="token string">'.gz'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        untar_file<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">extract_all_in_archive</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""递归解压压缩包内的压缩包"""</span>    <span class="token comment"># 初次解压到与压缩包同名的目录</span>    extract_dir <span class="token operator">=</span> get_extract_path<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>    extract_all_in_directory<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_dir<span class="token punctuation">)</span>    <span class="token comment"># 再次递归解压</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>extract_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>            nested_file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> nested_file_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'.zip'</span><span class="token punctuation">,</span> <span class="token string">'.tar'</span><span class="token punctuation">,</span> <span class="token string">'.tar.gz'</span><span class="token punctuation">,</span> <span class="token string">'.tar.bz2'</span><span class="token punctuation">,</span> <span class="token string">'.gz'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                nested_extract_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>nested_file_path<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 用文件名生成解压目录</span>                extract_file<span class="token punctuation">(</span>nested_file_path<span class="token punctuation">,</span> nested_extract_dir<span class="token punctuation">)</span>  <span class="token comment"># 解压嵌套压缩包</span>                extract_all_in_archive<span class="token punctuation">(</span>nested_file_path<span class="token punctuation">,</span> nested_extract_dir<span class="token punctuation">)</span>  <span class="token comment"># 递归解压</span><span class="token keyword">def</span> <span class="token function">extract_all_in_directory</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""如果传入的是压缩包，则开始解压"""</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        extract_file<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> extract_to<span class="token punctuation">)</span><span class="token comment"># 示例用法，传入压缩包路径</span>extract_all_in_archive<span class="token punctuation">(</span><span class="token string">r'C:\Users\WTCL\Desktop\解压缩\a.zip'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端实现手写签名并合并到pdf文件内</title>
      <link href="/2024/08/08/qian-duan-shi-xian-shou-xie-qian-ming-bing-he-bing-dao-pdf-wen-jian-nei/"/>
      <url>/2024/08/08/qian-duan-shi-xian-shou-xie-qian-ming-bing-he-bing-dao-pdf-wen-jian-nei/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>合同详情<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./js/size.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loadingPngContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./loading.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loadingPng<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiazaizhong<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>加载中，请稍后...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mainBody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvasContainer_<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvasContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signature-container<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signatureContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SigningContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvasContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>签名区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myCanvas<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signaturePad<span class="token punctuation">"</span></span> <span class="token attr-name">disable-scroll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buttons<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">clearSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>regenerate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>重签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">saveSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>witnessing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确认<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notice<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请在空白区域内横向书写<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_SignatureEntryContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_SignatureEntryContainer_<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SignatureEntryContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Replenishment<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">showSignaturePad</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                    签名(待对方补充)                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgpreviewContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./delete.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteIcon<span class="token punctuation">"</span></span>                         <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">DeleteSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgpreview<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>here<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            请点击此处进行签约        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;div class="total">    共 &lt;span>1&lt;/span> 处签名，已完成 &lt;span>0&lt;/span> 处，剩余 &lt;span>1&lt;/span> 处  &lt;/div> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button-container SignACcontract<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">showSignaturePad</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>签约<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button-container submit<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./js/index.js?t=1723050133640<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./js/jq.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 滚动到底部toast提示</span><span class="token keyword">let</span> <span class="token function-variable function">toast</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> time <span class="token operator">=</span> params<span class="token punctuation">.</span>time<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">==</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> time <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    time <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span> <span class="token string">"web-toast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> params<span class="token punctuation">.</span>message<span class="token punctuation">;</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>  el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"fadeIn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"fadeIn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"fadeOut"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"animationend"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"webkitAnimationEnd"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 解析URL</span><span class="token keyword">let</span> windowUrl <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[?&amp;][^?&amp;]+=[^?&amp;]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span><span class="token keyword">let</span> arr <span class="token operator">=</span> windowUrl<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> tempArr <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> key <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> val <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    params<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> canvasContainer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvasContainer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">scrollBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> scrollTop <span class="token operator">=</span> canvasContainer<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>  <span class="token keyword">const</span> scrollHeight <span class="token operator">=</span> canvasContainer<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>  <span class="token keyword">const</span> clientHeight <span class="token operator">=</span> canvasContainer<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>scrollTop <span class="token operator">+</span> clientHeight <span class="token operator">>=</span> scrollHeight<span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.button-container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> url <span class="token operator">=</span> params<span class="token punctuation">.</span>FilePath<span class="token punctuation">;</span>  <span class="token comment">//真实文件</span><span class="token keyword">let</span> serverURL <span class="token operator">=</span> <span class="token string">'XXX'</span>    <span class="token keyword">let</span> totalPages <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">let</span> pdfDoc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>pdfjsLib<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pdfDoc_</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  pdfDoc <span class="token operator">=</span> pdfDoc_<span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.loadingPngContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'flex'</span>  <span class="token function">renderAllPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 渲染所有的pdf页面</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">renderAllPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> pageNum <span class="token operator">&lt;=</span> pdfDoc<span class="token punctuation">.</span>numPages<span class="token punctuation">;</span> pageNum<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.jiazaizhong'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">总共</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>totalPages<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">页，正在加载第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>pageNum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">页</span><span class="token template-punctuation string">`</span></span>    <span class="token keyword">await</span> <span class="token function">renderPage</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.loadingPngContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>type<span class="token operator">==</span><span class="token string">'sign'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>totalPages <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.button-container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"滑动到底部进行签约"</span><span class="token punctuation">,</span>        <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      canvasContainer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> scrollBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 渲染单页pdf</span><span class="token keyword">function</span> <span class="token function">renderPage</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> pdfDoc<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">scale</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> containerWidth <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvasContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>    <span class="token keyword">let</span> scale <span class="token operator">=</span> containerWidth <span class="token operator">/</span> viewport<span class="token punctuation">.</span>width<span class="token punctuation">;</span>    viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">scale</span><span class="token operator">:</span> scale <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> viewport<span class="token punctuation">.</span>width<span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> viewport<span class="token punctuation">.</span>height<span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">pdfCanvas</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>num<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token keyword">let</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> renderContext <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">canvasContext</span><span class="token operator">:</span> ctx<span class="token punctuation">,</span>      <span class="token literal-property property">viewport</span><span class="token operator">:</span> viewport    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span><span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvasContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 显示canvas签名板</span><span class="token keyword">function</span> <span class="token function">showSignaturePad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.button-container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'._SignatureEntryContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signatureContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'flex'</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signaturePad'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 清除签名</span><span class="token keyword">function</span> <span class="token function">clearSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signaturePad'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> signatureImg_ <span class="token operator">=</span> <span class="token keyword">null</span><span class="token comment">// 生成签名文件为图片</span><span class="token keyword">function</span> <span class="token function">saveSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> signaturePad <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signaturePad'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> signaturePad<span class="token punctuation">.</span>height<span class="token punctuation">;</span>  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> signaturePad<span class="token punctuation">.</span>width<span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>signaturePad<span class="token punctuation">,</span> <span class="token operator">-</span>signaturePad<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span>signaturePad<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> aspectRatio <span class="token operator">=</span> <span class="token number">1.7</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> newWidth<span class="token punctuation">,</span> newHeight<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>width <span class="token operator">></span> img<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      newWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">;</span>      newHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">1</span> <span class="token operator">/</span> aspectRatio<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      newHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">;</span>      newWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">1</span> <span class="token operator">*</span> aspectRatio<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> resizedCanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    resizedCanvas<span class="token punctuation">.</span>width <span class="token operator">=</span> newWidth<span class="token punctuation">;</span>    resizedCanvas<span class="token punctuation">.</span>height <span class="token operator">=</span> newHeight<span class="token punctuation">;</span>    <span class="token keyword">const</span> resizedCtx <span class="token operator">=</span> resizedCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    resizedCtx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> newWidth<span class="token punctuation">,</span> newHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> signatureImg <span class="token operator">=</span> resizedCanvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signatureContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.SignACcontract'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.submit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#canvasContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'calc(100% - 90rem)'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'._SignatureEntryContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.Replenishment'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.here'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.imgpreview'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.deleteIcon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.imgpreview'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> signatureImg<span class="token punctuation">)</span><span class="token punctuation">;</span>    signatureImg_ <span class="token operator">=</span> signatureImg<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span>src <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.loadingPngContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'flex'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.mainBody'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.SignACcontract'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.jiazaizhong'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">上传中，请稍后...</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token function">drawSignatureInRoundedRect</span><span class="token punctuation">(</span>signatureImg_<span class="token punctuation">)</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.SignatureEntryContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">DeleteSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.deleteIcon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'._SignatureEntryContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.Replenishment'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.here'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">'visible'</span><span class="token punctuation">;</span>  signatureImg_ <span class="token operator">=</span> <span class="token keyword">null</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.SignACcontract'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.submit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">drawSignatureInRoundedRect</span><span class="token punctuation">(</span><span class="token parameter">signatureImg</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'myCanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> containerWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> aspectRatio <span class="token operator">=</span> <span class="token number">1.7</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> containerHeight <span class="token operator">=</span> containerWidth <span class="token operator">/</span> aspectRatio<span class="token punctuation">;</span>  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> containerWidth<span class="token punctuation">;</span>  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> containerHeight<span class="token punctuation">;</span>  <span class="token keyword">const</span> rectX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> rectY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> rectWidth <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>  <span class="token keyword">const</span> rectHeight <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>  <span class="token keyword">const</span> radius <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token function">strokeRoundRect</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> rectX<span class="token punctuation">,</span> rectY<span class="token punctuation">,</span> rectWidth<span class="token punctuation">,</span> rectHeight<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'rgba(0,0,0,0)'</span><span class="token punctuation">,</span> <span class="token string">'rgba(0,0,0,0)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> padding <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">*</span> rectWidth<span class="token punctuation">;</span>    <span class="token keyword">const</span> imgX <span class="token operator">=</span> rectX <span class="token operator">+</span> padding<span class="token punctuation">;</span>    <span class="token keyword">const</span> imgY <span class="token operator">=</span> rectY <span class="token operator">+</span> padding<span class="token punctuation">;</span>    <span class="token keyword">const</span> imgWidth <span class="token operator">=</span> rectWidth <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> padding<span class="token punctuation">;</span>    <span class="token keyword">const</span> imgHeight <span class="token operator">=</span> rectHeight <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> padding<span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> imgX<span class="token punctuation">,</span> imgY<span class="token punctuation">,</span> imgWidth<span class="token punctuation">,</span> imgHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> signatureImgData <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">addSignatureToLastPage</span><span class="token punctuation">(</span>signatureImgData<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span>src <span class="token operator">=</span> signatureImg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">drawRoundRectPath</span><span class="token punctuation">(</span><span class="token parameter">cxt<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> radius</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  cxt<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>width <span class="token operator">-</span> radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>width <span class="token operator">-</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height <span class="token operator">-</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>width <span class="token operator">-</span> radius<span class="token punctuation">,</span> height <span class="token operator">-</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> height <span class="token operator">-</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">strokeRoundRect</span><span class="token punctuation">(</span><span class="token parameter">cxt<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> lineWidth<span class="token punctuation">,</span> strokeColor<span class="token punctuation">,</span> fillColor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> radius <span class="token operator">></span> width <span class="token operator">||</span> <span class="token number">2</span> <span class="token operator">*</span> radius <span class="token operator">></span> height<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  cxt<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>fillColor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    cxt<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> fillColor<span class="token punctuation">;</span>    <span class="token function">drawRoundRectPath</span><span class="token punctuation">(</span>cxt<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  cxt<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> lineWidth <span class="token operator">||</span> <span class="token number">2</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> strokeColor <span class="token operator">||</span> <span class="token string">"#000"</span><span class="token punctuation">;</span>  <span class="token function">drawStraightEdges</span><span class="token punctuation">(</span>cxt<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> lineWidth <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> strokeColor <span class="token operator">||</span> <span class="token string">"#000"</span><span class="token punctuation">;</span>  <span class="token function">drawRoundedCorners</span><span class="token punctuation">(</span>cxt<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">drawStraightEdges</span><span class="token punctuation">(</span><span class="token parameter">cxt<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> radius</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  cxt<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>width <span class="token operator">-</span> radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height <span class="token operator">-</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>width <span class="token operator">-</span> radius<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> height <span class="token operator">-</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">drawRoundedCorners</span><span class="token punctuation">(</span><span class="token parameter">cxt<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> radius</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  cxt<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>width <span class="token operator">-</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>width <span class="token operator">-</span> radius<span class="token punctuation">,</span> height <span class="token operator">-</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> height <span class="token operator">-</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  cxt<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 把手写签名绘制到最后一页pdf文件内</span><span class="token keyword">function</span> <span class="token function">addSignatureToLastPage</span><span class="token punctuation">(</span><span class="token parameter">signatureImg</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#pdfCanvas</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>pdfDoc<span class="token punctuation">.</span>numPages<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> x <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">-</span> img<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> y <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">-</span> img<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">downloadPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span>src <span class="token operator">=</span> signatureImg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> isDrawing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">let</span> lastX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">let</span> lastY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">const</span> signaturePad <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signaturePad'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousedown'</span><span class="token punctuation">,</span> startDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span>signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> draw<span class="token punctuation">)</span><span class="token punctuation">;</span>signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseup'</span><span class="token punctuation">,</span> stopDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span>signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseout'</span><span class="token punctuation">,</span> stopDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span>signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span> startDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span>signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> draw<span class="token punctuation">)</span><span class="token punctuation">;</span>signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> stopDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">startDrawing</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  isDrawing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> rect <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> clientX <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">||</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>  <span class="token keyword">const</span> clientY <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">||</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>  lastX <span class="token operator">=</span> clientX <span class="token operator">-</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">;</span>  lastY <span class="token operator">=</span> clientY <span class="token operator">-</span> rect<span class="token punctuation">.</span>top<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isDrawing<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> signaturePad<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span>lineJoin <span class="token operator">=</span> <span class="token string">'round'</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span>lineCap <span class="token operator">=</span> <span class="token string">'round'</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>lastX<span class="token punctuation">,</span> lastY<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> rect <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> clientX <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">||</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>  <span class="token keyword">const</span> clientY <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">||</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>  <span class="token keyword">const</span> newX <span class="token operator">=</span> clientX <span class="token operator">-</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">;</span>  <span class="token keyword">const</span> newY <span class="token operator">=</span> clientY <span class="token operator">-</span> rect<span class="token punctuation">.</span>top<span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>newX<span class="token punctuation">,</span> newY<span class="token punctuation">)</span><span class="token punctuation">;</span>  ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  lastX <span class="token operator">=</span> newX<span class="token punctuation">;</span>  lastY <span class="token operator">=</span> newY<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">stopDrawing</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  isDrawing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">downloadPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> canvasContainer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvasContainer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> canvasElements <span class="token operator">=</span> canvasContainer<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> pdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>jspdf<span class="token punctuation">.</span>jsPDF</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">orientation</span><span class="token operator">:</span> <span class="token string">'p'</span><span class="token punctuation">,</span>    <span class="token literal-property property">unit</span><span class="token operator">:</span> <span class="token string">'pt'</span><span class="token punctuation">,</span>    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">'a4'</span><span class="token punctuation">,</span>    <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 遍历所有 canvas 元素并将其内容添加到 PDF 中</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> canvasElements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> canvas <span class="token operator">=</span> canvasElements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> imgData <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/jpeg'</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pdf<span class="token punctuation">.</span><span class="token function">addPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> pdfWidth <span class="token operator">=</span> pdf<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>pageSize<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> pdfHeight <span class="token operator">=</span> pdf<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>pageSize<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> ratio <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>pdfWidth <span class="token operator">/</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> pdfHeight <span class="token operator">/</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> canvasWidth <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">*</span> ratio<span class="token punctuation">;</span>    <span class="token keyword">const</span> canvasHeight <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">*</span> ratio<span class="token punctuation">;</span>    <span class="token keyword">const</span> marginX <span class="token operator">=</span> <span class="token punctuation">(</span>pdfWidth <span class="token operator">-</span> canvasWidth<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> marginY <span class="token operator">=</span> <span class="token punctuation">(</span>pdfHeight <span class="token operator">-</span> canvasHeight<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>    pdf<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>imgData<span class="token punctuation">,</span> <span class="token string">'JPEG'</span><span class="token punctuation">,</span> marginX<span class="token punctuation">,</span> marginY<span class="token punctuation">,</span> canvasWidth<span class="token punctuation">,</span> canvasHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 获取生成的 PDF 文件 Blob 对象</span>  <span class="token keyword">const</span> pdfBlob <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">output</span><span class="token punctuation">(</span><span class="token string">'blob'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'application/pdf'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 调用分块上传函数</span>  <span class="token function">uploadInChunks</span><span class="token punctuation">(</span>pdfBlob<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">uploadInChunks</span><span class="token punctuation">(</span><span class="token parameter">blob<span class="token punctuation">,</span> chunkSize <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 1MB chunks</span>  <span class="token keyword">const</span> totalChunks <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>blob<span class="token punctuation">.</span>size <span class="token operator">/</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> chunkIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">uploadNextChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> start <span class="token operator">=</span> chunkIndex <span class="token operator">*</span> chunkSize<span class="token punctuation">;</span>    <span class="token keyword">const</span> end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> chunkSize<span class="token punctuation">,</span> blob<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> chunk <span class="token operator">=</span> blob<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> chunk<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">chunk_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chunkIndex<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.pdf</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'chunkIndex'</span><span class="token punctuation">,</span> chunkIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'totalChunks'</span><span class="token punctuation">,</span> totalChunks<span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span>FilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'esign_id'</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span>esign_id<span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'from_user_id'</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span>from_user_id<span class="token punctuation">)</span><span class="token punctuation">;</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'user_id'</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span>user_id<span class="token punctuation">)</span><span class="token punctuation">;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>      <span class="token literal-property property">url</span><span class="token operator">:</span> serverURL<span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>      <span class="token literal-property property">processData</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span>       <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Chunk </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chunkIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>totalChunks<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> uploaded successfully</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.jiazaizhong'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token punctuation">(</span>chunkIndex <span class="token operator">/</span> totalChunks <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">%</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>        chunkIndex<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>chunkIndex <span class="token operator">&lt;</span> totalChunks<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">uploadNextChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'All chunks uploaded successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.loadingPngContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>          document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.submit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>          document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.mainBody'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>          <span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"上传成功"</span><span class="token punctuation">,</span>            <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>          canvasContainer<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> scrollBottom<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span> status<span class="token punctuation">,</span> error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.loadingPngContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'none'</span>        <span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"签约失败，请重新提交"</span><span class="token punctuation">,</span>          <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">3</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>          document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.mainBody'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">uploadNextChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> canvas </tag>
            
            <tag> pdf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pdf预览并手写签名并下载</title>
      <link href="/2024/07/22/pdf-yu-lan-bing-shou-xie-qian-ming-bing-xia-zai/"/>
      <url>/2024/07/22/pdf-yu-lan-bing-shou-xie-qian-ming-bing-xia-zai/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>PDF.js Drawing Example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">canvas</span> <span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.canvasWrapper</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.button-container</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> 1000000000<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.signature-container</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvasContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download-btn<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">downloadPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Download PDF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sign-btn<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">showSignaturePad</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Add Signature<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signature-container<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signatureContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signaturePad<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span>1px solid black<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">clearSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Clear<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">saveSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Save Signature<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// const url = './old.pdf'; // Update with the correct path to your PDF file</span>    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">'http://localhost:3000/'</span><span class="token punctuation">;</span> <span class="token comment">// Update with the correct path to your PDF file</span>    <span class="token keyword">let</span> pdfDoc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> scale <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>    pdfjsLib<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">pdfDoc_</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        pdfDoc <span class="token operator">=</span> pdfDoc_<span class="token punctuation">;</span>        <span class="token function">renderAllPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">renderAllPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> pageNum <span class="token operator">&lt;=</span> pdfDoc<span class="token punctuation">.</span>numPages<span class="token punctuation">;</span> pageNum<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">await</span> <span class="token function">renderPage</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">renderPage</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> pdfDoc<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">scale</span><span class="token operator">:</span> scale <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> viewport<span class="token punctuation">.</span>width<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> viewport<span class="token punctuation">.</span>height<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">pdfCanvas</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>num<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>            <span class="token keyword">let</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> renderContext <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">canvasContext</span><span class="token operator">:</span> ctx<span class="token punctuation">,</span>                <span class="token literal-property property">viewport</span><span class="token operator">:</span> viewport            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span><span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvasContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">showSignaturePad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signatureContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'flex'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">clearSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signaturePad'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">saveSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> signaturePad <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signaturePad'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> signatureImg <span class="token operator">=</span> signaturePad<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signatureContainer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>        <span class="token function">addSignatureToLastPage</span><span class="token punctuation">(</span>signatureImg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">addSignatureToLastPage</span><span class="token punctuation">(</span><span class="token parameter">signatureImg</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#pdfCanvas</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>pdfDoc<span class="token punctuation">.</span>numPages<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> x <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">-</span> img<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 10px padding from right</span>            <span class="token keyword">const</span> y <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">-</span> img<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 10px padding from bottom</span>            ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        img<span class="token punctuation">.</span>src <span class="token operator">=</span> signatureImg<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Drawing functionality on the signature pad</span>    <span class="token keyword">let</span> isDrawing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> lastX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> lastY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> signaturePad <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signaturePad'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousedown'</span><span class="token punctuation">,</span> startDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span>    signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> draw<span class="token punctuation">)</span><span class="token punctuation">;</span>    signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseup'</span><span class="token punctuation">,</span> stopDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span>    signaturePad<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseout'</span><span class="token punctuation">,</span> stopDrawing<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">startDrawing</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        isDrawing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">[</span>lastX<span class="token punctuation">,</span> lastY<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>offsetX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>offsetY<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isDrawing<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> ctx <span class="token operator">=</span> signaturePad<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span>lineJoin <span class="token operator">=</span> <span class="token string">'round'</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span>lineCap <span class="token operator">=</span> <span class="token string">'round'</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>lastX<span class="token punctuation">,</span> lastY<span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>offsetX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>offsetY<span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">[</span>lastX<span class="token punctuation">,</span> lastY<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>offsetX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>offsetY<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">stopDrawing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        isDrawing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Download PDF functionality</span>    <span class="token keyword">function</span> <span class="token function">downloadPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> canvasContainer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvasContainer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> canvasElements <span class="token operator">=</span> canvasContainer<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> pdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>jspdf<span class="token punctuation">.</span>jsPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> canvasElements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> canvas <span class="token operator">=</span> canvasElements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> imgData <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                pdf<span class="token punctuation">.</span><span class="token function">addPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            pdf<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>imgData<span class="token punctuation">,</span> <span class="token string">'PNG'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>pageSize<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>pageSize<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        pdf<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token string">'download.pdf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sse（server-sentEvents）</title>
      <link href="/2024/06/24/sse-server-sentevents/"/>
      <url>/2024/06/24/sse-server-sentevents/</url>
      
        <content type="html"><![CDATA[<h3 id="ChatGPT-选择采用-SSE-协议而非-Websocket-的理由是什么？"><a href="#ChatGPT-选择采用-SSE-协议而非-Websocket-的理由是什么？" class="headerlink" title="ChatGPT 选择采用 SSE 协议而非 Websocket 的理由是什么？"></a>ChatGPT 选择采用 SSE 协议而非 Websocket 的理由是什么？</h3><p><code>深入探讨的SSE（Server-Sent Events）技术</code></p><p>在探索 ChatGPT 的使用过程中，我们发现 GPT 采用了流式数据返回的方式。理论上，这种情况可以通过全双工通信协议实现持久化连接，或者依赖于基于 EventStream 的事件流。然而，ChatGPT 选择了后者，也就是本文即将深入探讨的 SSE（Server-Sent Events）技术。<br>要理解这个选择，我们需要关注 ChatGPT 的使用场景。作为一个基于深度学习的大型语言模型，ChatGPT 需要处理大量的自然语言数据，这无疑需要大量的计算资源和时间。相较于普通的读取数据库操作，其响应速度自然会慢许多。<br>对于这种可能需要长时间等待响应的对话场景，ChatGPT 采用了一种巧妙的策略：它会将已经计算出的数据“推送”给用户，并利用 SSE 技术在计算过程中持续返回数据。这样做可以避免用户因等待时间过长而选择关闭页面。</p><h3 id="什么是-SSE？"><a href="#什么是-SSE？" class="headerlink" title="什么是 SSE？"></a>什么是 SSE？</h3><p>SSE（Server-Sent Events）是一种 Web 技术，它允许服务器实时向客户端推送数据。相比于传统的轮询和长轮询机制，SSE 提供了一种更高效且实时的数据推送方式。这种技术主要应用于构建实时应用，例如实时消息推送、股票行情更新等。<br>SSE 是 HTML5 规范中的一个通信相关 API，它主要包含两个部分：服务端与浏览器端的通信协议（基于 HTTP 协议），以及浏览器端 JavaScript 可使用的 EventSource 对象。<br>SSE 运行在 HTTP 协议之上，它允许服务器以事件流（Event Stream）的形式将数据发送给客户端。客户端通过建立持久化的 HTTP 连接，并监听这个事件流，从而可以实时接收到服务器推送的数据。</p><h3 id="SSE-具有以下几个主要特点："><a href="#SSE-具有以下几个主要特点：" class="headerlink" title="SSE 具有以下几个主要特点："></a>SSE 具有以下几个主要特点：</h3><p><code>简单易用</code>：SSE 使用基于文本的数据格式，如纯文本、JSON 等，这使得数据发送和解析都相对简单直接。<br><code>单向通信</code>：SSE 仅支持从服务器到客户端的单向通信。这意味着服务器可以主动推送数据给客户端，但客户端只能被动接收数据。<br><code>实时性</code>：由于 SSE 能够建立持久化连接，服务器因此可以实时地将数据推送给客户端，无需客户端频繁地发起请求。这大大提高了数据传输的效率和实时性。</p><h3 id="SSE-与-WebSocket-的比较"><a href="#SSE-与-WebSocket-的比较" class="headerlink" title="SSE 与 WebSocket 的比较"></a>SSE 与 WebSocket 的比较</h3><p>WebSocket 是一种 Web 技术，用于实现实时双向通信，它与 SSE（Server-Sent Events）在某些方面存在差异。<br>以下是对两者的比较：</p><blockquote><p>数据推送方向：SSE 主要支持从服务器到客户端的单向通信，这意味着服务器可以主动地向客户端推送数据。而 WebSocket 则支持双向通信，允许服务器和客户端之间进行实时的数据交换。<br>连接建立：SSE 利用基于 HTTP 的长连接，通过常规的 HTTP 请求和响应来建立连接，进而实现数据的实时推送。相反，WebSocket 采用自定义的协议，通过创建 WebSocket 连接来实现双向通信。<br>兼容性：由于 SSE 基于 HTTP 协议，因此它可以在大多数现代浏览器中使用，并且无需进行额外的协议升级。虽然 WebSocket 在绝大多数现代浏览器中也得到了支持，但在某些特定的网络环境下可能会遇到问题。<br>适用场景：SSE 适合于需要服务器向客户端实时推送数据的场景，例如股票价格更新、新闻实时推送等。而 WebSocket 则适合于需要实时双向通信的场景，如聊天应用、多人在线协作编辑等。</p></blockquote><p>选择使用 SSE 还是 WebSocket 主要取决于具体的业务需求和场景。如果你只需要实现从服务器向客户端的单向数据推送，并且希望保持操作简便且兼容性好，那么 SSE 是一个理想的选择。然而，如果你需要实现双向通信，或者需要更高级的功能和控制，那么 WebSocket 可能会更适合你的需求。</p><h3 id="SSE-的实现原理"><a href="#SSE-的实现原理" class="headerlink" title="SSE 的实现原理"></a>SSE 的实现原理</h3><p>以下是 SSE（Server-Sent Events）的实现原理：<br><code>连接建立</code>：通常情况下，客户端（如浏览器）通过发送 HTTP GET 请求到服务器来请求建立一个 SSE 连接。<br><code>服务器响应</code>：一旦服务器接收到请求，它将返回一个 HTTP 响应，该响应的状态码为 200，内容类型（Content-Type）设置为”text/event-stream”。<br><code>数据推送</code>：服务器可以通过已经建立的连接向客户端推送数据。每次推送的数据被称作一个事件（Event）。每个事件由一个或多个以”\n\n”分隔的数据块组成。每个数据块都是一行文本，可能包含一个以”:”开头的注释行、以”data:”开头的数据行，或者以”id:”和”event:”开头的行来指定事件 ID 和事件类型。<br><code>客户端处理</code>：当客户端接收到服务器推送的事件后，它会触发相应的 JavaScript 事件处理器来处理这些事件。<br><code>重连</code>：如果连接断开，客户端会自动尝试重新连接。如果服务器在事件中指定了 ID，那么在重新连接时，客户端会发送一个”Last-Event-ID”的 HTTP 头部信息到服务器，告诉服务器客户端接收到的最后一个事件的 ID。根据这个信息，服务器可以决定从哪个事件开始重新发送数据。</p><p>总结起来，SSE 使用了基于文本和 HTTP 协议的简单机制，使得服务器能够实时地将数据推送到客户端，而无需客户端频繁地发起新的请求。</p><h3 id="使用-SSE-的注意事项"><a href="#使用-SSE-的注意事项" class="headerlink" title="使用 SSE 的注意事项"></a>使用 SSE 的注意事项</h3><p>以下是在使用 SSE（Server-Sent Events）技术进行实时数据推送时需要注意的几个关键点：<br><code>异步处理</code>：由于 SSE 基于长连接的机制，因此数据推送过程可能会持续较长时间。为了防止服务器线程被阻塞，建议采用异步方式处理 SSE 请求。例如，可以在控制器方法中使用@Async 注解或利用 CompletableFuture 等异步编程方式。<br><code>超时处理</code>：SSE 连接可能会因网络中断、客户端关闭等原因而超时。为了避免无效连接占据服务器资源，建议设置超时时间并处理超时情况。例如，可以利用 SseEmitter 对象的 setTimeout()方法设定超时时间，并通过 onTimeout()方法处理超时逻辑。<br><code>异常处理</code>：在实际应用中，可能会遇到网络异常、数据推送失败等问题。这种情况下，可以使用 SseEmitter 对象的 completeWithError()方法将异常信息发送给客户端，并在客户端通过 eventSource.onerror 事件进行处理。<br><code>内存管理</code>：在使用 SseEmitter 时，需要特别注意内存管理问题，尤其是在大量并发连接的场景下。当客户端断开连接后，务必及时释放 SseEmitter 对象，以避免资源泄漏和内存溢出。<br><code>并发性能</code>：SSE 的并发连接数可能对服务器性能产生影响。如果需要处理大量并发连接，可以考虑使用线程池或其他异步处理方式，以最大化服务器资源利用。<br><code>客户端兼容性</code>：虽然大多数现代浏览器都支持 SSE，但一些旧版本的浏览器可能不支持。因此，在使用 SSE 时，需要确保目标客户端对其有良好的支持，或者提供备选的实时数据推送机制。</p><p>以上这些注意事项可以根据具体应用需求进行调整和优化。在实际应用中，确保服务器的稳定性、安全性和性能是非常重要的。同时，在处理 SSE 连接时，可以考虑适当的限流和安全控制措施，以防止滥用和恶意连接的出现。总的来说，使用 SSE 技术时需要全面考虑各个方面的因素，才能实现高效、稳定、安全的实时数据推送服务。</p><h3 id="SpringBoot-集成-SSE-案例"><a href="#SpringBoot-集成-SSE-案例" class="headerlink" title="SpringBoot 集成 SSE 案例"></a>SpringBoot 集成 SSE 案例</h3><p>假设正在开发一个实时股票价格监控应用，需要将股票价格实时推送给客户端。以下为 Spring Boot 中集成 SSE 技术实现的场景示例代码。</p><p>首先，定义一个控制器来处理 SSE 请求和发送实时股票价格：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">MediaType</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SseEmitter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestControllerpublic</span> <span class="token keyword">class</span> <span class="token class-name">StockController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/stock-price"</span><span class="token punctuation">,</span> produces <span class="token operator">=</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">TEXT_EVENT_STREAM_VALUE</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">SseEmitter</span> <span class="token function">streamStockPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SseEmitter</span> emitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SseEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 模拟生成实时股票价格并推送给客户端</span>        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 生成随机的股票价格</span>                    <span class="token keyword">double</span> price <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">+</span> random<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>                    <span class="token comment">// 构造股票价格的消息</span>                    <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.2f"</span><span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 发送消息给客户端</span>                    emitter<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">SseEmitter</span><span class="token punctuation">.</span><span class="token function">event</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 休眠1秒钟</span>                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                emitter<span class="token punctuation">.</span><span class="token function">completeWithError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> emitter<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述代码中，定义了一个 streamStockPrice()方法，该方法使用@GetMapping 注解将/stock-price 路径映射到该方法上，并指定 produces =<br>MediaType.TEXT_EVENT_STREAM_VALUE 以表明该方法将产生 SSE 事件流。</p><p>在方法内部创建了一个 SseEmitter 对象作为事件发射器，并在一个单独的线程中不断生成随机的股票价格，并将价格转换为字符串形式发送给客户端。</p><p>通过 emitter.send()方法发送的数据会被封装为 SSE 事件流的形式，客户端可以通过监听该事件流来实时接收股票价格。</p><p>在前端页面中，创建一个简单的 HTML 页面来展示实时股票价格：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>实时股票价格监控<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>实时股票价格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stock-price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">const</span> eventSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventSource</span><span class="token punctuation">(</span><span class="token string">"/stock-price"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>eventSource<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"stock-price"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码中，通过 new EventSource(‘/stock-price’)创建了一个 EventSource 对象，它与/stock-price 路径建立 SSE 连接。然后，通过 eventSource.onmessage 定义了接收消息的回调函数，在收到新消息时更新页面上的股票价格。</p><p>通过以上代码，可以在浏览器中打开该 HTML 页面，它会建立与服务器的 SSE 连接，并实时接收并展示股票价格。这只是使用 SSE 实现实时数据推送的一个简单示例。在实践中，可以根据具体的业务需求和场景，进行更复杂和丰富的实现。</p><p>小结<br><code>SSE（Server-Sent Events）是一种基于 HTTP 协议的轻量级实时通信技术，具备服务端推送、断线重连和简单轻量等优点。然而，它也存在一些限制，例如无法进行双向通信、连接数受限以及仅支持 GET 请求等。在 Web 应用程序中，SSE 可以实现各种即时数据推送功能，如股票在线数据更新、日志推送、实时显示聊天室人数等。然而，需要注意的是，并非所有的实时推送场景都适合使用 SSE。在需要处理高并发、高吞吐量和低延迟的场景下，WebSocket 可能是更好的选择。而对于那些需要轻量级推送解决方案的场景，SSE 可能会更加适合。</code></p><p>因此，在选择实时更新方案时，我们需要根据具体的需求和应用场景来做出决策。只有这样，我们才能确保选择的技术能够最大程度地满足我们的需求。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>浏览器上的可见即可说</title>
      <link href="/2024/05/28/liu-lan-qi-shang-de-ke-jian-ji-ke-shuo/"/>
      <url>/2024/05/28/liu-lan-qi-shang-de-ke-jian-ji-ke-shuo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1、语音转文字<br>2、在页面上找到对应文字，模拟点击</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">VisibleCanBeSaid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> SpeechRecognition <span class="token operator">=</span> SpeechRecognition <span class="token operator">||</span> webkitSpeechRecognition<span class="token punctuation">;</span>    <span class="token keyword">let</span> recognition<span class="token punctuation">;</span>    <span class="token keyword">let</span> resultDisplay<span class="token punctuation">;</span>    <span class="token keyword">let</span> clearResultTimer<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>SpeechRecognition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 创建语音识别实例</span>        recognition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechRecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        recognition<span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">'zh-CN'</span><span class="token punctuation">;</span> <span class="token comment">// 设置识别语言为简体中文</span>        recognition<span class="token punctuation">.</span>continuous <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 设置为非持续监听</span>        recognition<span class="token punctuation">.</span>interimResults <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 不返回临时结果</span>        <span class="token comment">// 创建一个div元素用于显示语音识别结果</span>        resultDisplay <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultDisplay<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">'position: fixed; top: 0; left: 0; width: 100%; background: #ddd; padding: 10px; z-index: 1000; color: red;'</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>resultDisplay<span class="token punctuation">,</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 插入到body的最前面</span>        <span class="token comment">// 重置结果显示函数</span>        <span class="token keyword">const</span> <span class="token function-variable function">resetResultDisplay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>clearResultTimer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 清除现有的定时器</span>            clearResultTimer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                resultDisplay<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span> <span class="token comment">// 清空显示结果</span>                <span class="token comment">// 清空后不立即开始监听，等待onend事件触发</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置定时器，3秒后清空结果</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 当语音识别开始时触发</span>        recognition<span class="token punctuation">.</span><span class="token function-variable function">onstart</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'语音识别开始'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 当成功识别到语音命令时触发</span>        recognition<span class="token punctuation">.</span><span class="token function-variable function">onresult</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> last <span class="token operator">=</span> event<span class="token punctuation">.</span>results<span class="token punctuation">[</span>event<span class="token punctuation">.</span>results<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> command <span class="token operator">=</span> last<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transcript<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 更新显示结果的div元素</span>            resultDisplay<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">识别结果: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>command<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>            <span class="token function">SimulateClick</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>            <span class="token function">resetResultDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 重置结果显示</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 当语音识别错误时触发</span>        recognition<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'语音识别错误:'</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 当语音识别结束时触发</span>        recognition<span class="token punctuation">.</span><span class="token function-variable function">onend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'语音识别结束'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 清空显示结果后重新开始监听</span>            recognition<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 开始监听语音命令</span>        recognition<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'您的浏览器不支持语音识别！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">SimulateClick</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">'结果'</span><span class="token punctuation">)</span>    <span class="token comment">// 等待页面加载完成</span>    <span class="token comment">// document.addEventListener('DOMContentLoaded', function() &#123;</span>    <span class="token comment">// 获取页面中所有的data-voice-command元素</span>    <span class="token keyword">var</span> voiceCommands <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'[data-voice-command]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 遍历这些元素</span>    voiceCommands<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>textContent<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// 检查元素的文本内容</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>textContent<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果文本内容等于'1'，触发模拟点击事件</span>            element<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// &#125;);</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react父组件获取子组件的值</title>
      <link href="/2024/03/27/react-fu-zu-jian-huo-qu-zi-zu-jian-de-zhi/"/>
      <url>/2024/03/27/react-fu-zu-jian-huo-qu-zi-zu-jian-de-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><h3 id="1-1-事件是在子组件内控制"><a href="#1-1-事件是在子组件内控制" class="headerlink" title="1.1 事件是在子组件内控制"></a>1.1 事件是在子组件内控制</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 子组件</span><span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">'./card.module.scss'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>useRef<span class="token punctuation">,</span> useState<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment">// onValueChange是父组件传递过来的函数</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Card</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>onValueChange<span class="token punctuation">&#125;</span></span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">setN</span><span class="token punctuation">(</span>n <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token function">onValueChange</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">&#123;</span>styles<span class="token punctuation">.</span>card<span class="token punctuation">&#125;</span><span class="token operator">></span>                <span class="token punctuation">&#123;</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">&#123;</span>item<span class="token punctuation">&#125;</span> className<span class="token operator">=</span><span class="token punctuation">&#123;</span>styles<span class="token punctuation">.</span>cardItem<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">&#123;</span>item<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span>setNumber<span class="token punctuation">&#125;</span><span class="token operator">></span>这是<span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父组件</span><span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">'./Home.module.scss'</span><span class="token keyword">import</span> Card <span class="token keyword">from</span> <span class="token string">"../compoments/card"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>useEffect<span class="token punctuation">,</span> useLayoutEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> button <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token keyword">function</span> <span class="token function">handleValue</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            button<span class="token punctuation">.</span>current<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">'red'</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">&#123;</span>styles<span class="token punctuation">.</span>indexContainer<span class="token punctuation">&#125;</span><span class="token operator">></span>            <span class="token operator">&lt;</span>Card onValueChange<span class="token operator">=</span><span class="token punctuation">&#123;</span>handleValue<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Card<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Home<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-事件在父组件内空控制"><a href="#1-2-事件在父组件内空控制" class="headerlink" title="1.2 事件在父组件内空控制"></a>1.2 事件在父组件内空控制</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 子组件  只负责渲染</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Card</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>arr<span class="token punctuation">&#125;</span></span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>            <span class="token punctuation">&#123;</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span><span class="token punctuation">(</span>                <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">&#123;</span>item<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">&#123;</span>item<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父组件  负责传值和事件控制</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> useState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Card <span class="token keyword">from</span> <span class="token string">"../compoments/card"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token constant">ARR</span><span class="token punctuation">,</span> setARR<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token function-variable function">handleArr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">setARR</span><span class="token punctuation">(</span><span class="token parameter">prevARR</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token operator">...</span>prevARR<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span>Card arr<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token constant">ARR</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span>handleArr<span class="token punctuation">&#125;</span><span class="token operator">></span>翻转数组<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Home<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> 父子组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite打包清除缓存并自动压缩</title>
      <link href="/2024/03/27/vite-da-bao-qing-chu-huan-cun-bing-zi-dong-ya-suo/"/>
      <url>/2024/03/27/vite-da-bao-qing-chu-huan-cun-bing-zi-dong-ya-suo/</url>
      
        <content type="html"><![CDATA[<img src="/2024/03/27/vite-da-bao-qing-chu-huan-cun-bing-zi-dong-ya-suo/1.png" class=""><h2 id="1-清除命令"><a href="#1-清除命令" class="headerlink" title="1. 清除命令"></a>1. 清除命令</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"clean"</span><span class="token operator">:</span> <span class="token string">"rm -rf dist/* || rimraf dist/* || echo 'No files to clean.'"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-压缩命令"><a href="#2-压缩命令" class="headerlink" title="2. 压缩命令"></a>2. 压缩命令</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"zip"</span><span class="token operator">:</span> <span class="token string">"node zip.js"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>压缩文件zip.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入所需模块</span><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">'fs'</span><span class="token punctuation">;</span><span class="token keyword">import</span> archiver <span class="token keyword">from</span> <span class="token string">'archiver'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fileURLToPath <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'url'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> dirname <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'path'</span><span class="token punctuation">;</span><span class="token comment">// 获取当前文件的目录</span><span class="token keyword">const</span> __filename <span class="token operator">=</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span>__filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建一个文件以写入压缩包内容</span><span class="token keyword">const</span> output <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>__dirname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/dist.zip</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建archiver实例，并设置压缩格式和压缩级别</span><span class="token keyword">const</span> archive <span class="token operator">=</span> <span class="token function">archiver</span><span class="token punctuation">(</span><span class="token string">'zip'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">zlib</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">9</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 监听输出文件流的'close'事件，表示所有的数据已经被写入到文件中</span>output<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">打包完成，总大小：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>archive<span class="token punctuation">.</span><span class="token function">pointer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> bytes</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 监听archive的错误事件</span>archive<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">throw</span> err<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 管道输出文件流到archive对象</span>archive<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 指定需要压缩的目录，这里是dist目录</span>archive<span class="token punctuation">.</span><span class="token function">directory</span><span class="token punctuation">(</span><span class="token string">'dist/'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 完成文件添加并结束输出流</span>archive<span class="token punctuation">.</span><span class="token function">finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-打包命令"><a href="#3-打包命令" class="headerlink" title="3. 打包命令"></a>3. 打包命令</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//先清除缓存，再打包，最后压缩</span><span class="token comment">// --mode development 是做了环境区分</span><span class="token string-property property">"build:sit"</span><span class="token operator">:</span> <span class="token string">"npm run clean &amp;&amp; vite build --mode development &amp;&amp; npm run zip"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
            <tag> 打包 </tag>
            
            <tag> 压缩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器安装docker</title>
      <link href="/2024/03/20/fu-wu-qi-an-zhuang-docker/"/>
      <url>/2024/03/20/fu-wu-qi-an-zhuang-docker/</url>
      
        <content type="html"><![CDATA[<img src="/2024/03/20/fu-wu-qi-an-zhuang-docker/1.png" class="" title="服务器安装docker"><p>以centos服务器为例，安装docker</p><h2 id="1、-检查内核版本"><a href="#1、-检查内核版本" class="headerlink" title="1、 检查内核版本"></a>1、 检查内核版本</h2><p>通常需要Linux内核版本3.10以上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> <span class="token parameter variable">-r</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、-移除旧版本的Docker（如果有）"><a href="#2、-移除旧版本的Docker（如果有）" class="headerlink" title="2、 移除旧版本的Docker（如果有）"></a>2、 移除旧版本的Docker（如果有）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum remove <span class="token function">docker</span> <span class="token punctuation">\</span>    docker-client <span class="token punctuation">\</span>    docker-client-latest <span class="token punctuation">\</span>    docker-common <span class="token punctuation">\</span>    docker-latest <span class="token punctuation">\</span>    docker-latest-logrotate <span class="token punctuation">\</span>    docker-logrotate <span class="token punctuation">\</span>    docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、-安装依赖包"><a href="#3、-安装依赖包" class="headerlink" title="3、 安装依赖包"></a>3、 安装依赖包</h2><p>安装yum-utils、device-mapper-persistent-data和lvm2，这些是Docker安装的依赖包：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils <span class="token punctuation">\</span>    device-mapper-persistent-data <span class="token punctuation">\</span>    lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4、-设置稳定的仓库"><a href="#4、-设置稳定的仓库" class="headerlink" title="4、 设置稳定的仓库"></a>4、 设置稳定的仓库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 官方源</span>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<span class="token comment"># 阿里云镜像源</span>yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、-安装Docker-Engine"><a href="#5、-安装Docker-Engine" class="headerlink" title="5、 安装Docker Engine"></a>5、 安装Docker Engine</h2><p>列出所有可用的Docker版本，并选择一个稳定版本进行安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出所有可用的Docker版本</span>yum list docker-ce <span class="token parameter variable">--showduplicates</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-r</span><span class="token comment"># 安装指定版本</span>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> docker-ce-18.03.1.ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6、-启动Docker"><a href="#6、-启动Docker" class="headerlink" title="6、 启动Docker"></a>6、 启动Docker</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、-设置开机启动"><a href="#7、-设置开机启动" class="headerlink" title="7、 设置开机启动"></a>7、 设置开机启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8、-验证安装"><a href="#8、-验证安装" class="headerlink" title="8、 验证安装"></a>8、 验证安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite配置</title>
      <link href="/2024/03/08/vite-pei-zhi/"/>
      <url>/2024/03/08/vite-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="vite环境配置"><a href="#vite环境配置" class="headerlink" title="vite环境配置"></a>vite环境配置</h2><img src="/2024/03/08/vite-pei-zhi/1.png" class=""><img src="/2024/03/08/vite-pei-zhi/2.png" class=""><img src="/2024/03/08/vite-pei-zhi/3.png" class=""><p>上面的是代码配置和运行效果，供我们打包发布<br>如果在运行或打包时需要看下配置的环境，则需要在vite.config.js中配置</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fileURLToPath<span class="token punctuation">,</span> <span class="token constant">URL</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'node:url'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineConfig<span class="token punctuation">,</span>loadEnv <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vite'</span><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">'@vitejs/plugin-vue'</span><span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">'chalk'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> command<span class="token punctuation">,</span> mode <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">//   需要加载loadEnv</span>  <span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">loadEnv</span><span class="token punctuation">(</span>mode<span class="token punctuation">,</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">本次打包的环境是：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">VITE_ENV</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//chalk是一个颜色插件</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">本次打包使用的baseURL是：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span>bold<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">VITE_BASE_URL</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">'./'</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span>      <span class="token punctuation">[</span>        <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">css</span><span class="token operator">:</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">preprocessorOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">less</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 引入全局 Less 文件</span>            <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@import "./src/assets/css/base.less";</span><span class="token template-punctuation string">`</span></span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">'@'</span><span class="token operator">:</span>          <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">'./src'</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    <span class="token literal-property property">build</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">rollupOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 自定义入口文件名</span>          <span class="token literal-property property">entryFileNames</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">assets/[name]_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>          <span class="token comment">// 自定义块文件名</span>          <span class="token literal-property property">chunkFileNames</span><span class="token operator">:</span>            <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">assets/[name]-[hash]_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.js</span><span class="token template-punctuation string">`</span></span>          <span class="token comment">// 自定义资源文件名</span>          <span class="token comment">// assetFileNames: `assets/[name]-[hash].[ext]_$&#123;new Date().getTime()&#125;`</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css字体颜色继承</title>
      <link href="/2024/02/27/css-zi-ti-yan-se-ji-cheng/"/>
      <url>/2024/02/27/css-zi-ti-yan-se-ji-cheng/</url>
      
        <content type="html"><![CDATA[<p><code>默认情况下，css color是不继承的</code><br>但是在项目中，尤其是 v-html 加载的<code>富文本</code>项目内，当我们需要将返回的富文本设置成我们给父元素设置的字体颜色时，由于富文本是行内样式，如<code>&lt;span style=&quot;color: #000000;&quot;&gt;展销区讲解员和购物需另外付费。&lt;/span&gt;</code>，优先级高，会覆盖掉我们在 css 文件内设置的样式，此时我们<code>无需对接口返回的富文本元素数据进行处理</code>，只需要在 css 文件内找到富文本元素的父元素，设置</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">//父元素.tcbuyNotice</span> <span class="token punctuation">&#123;</span><span class="token selector">//富文本中带行内样式的元素span</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> inherit <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就可以保持<code>富文本元素内 span 的 color 与父元素一致</code></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python遍历检测git更改是否都已提交</title>
      <link href="/2024/01/19/python-bian-li-jian-ce-git-geng-gai-shi-fou-du-yi-ti-jiao/"/>
      <url>/2024/01/19/python-bian-li-jian-ce-git-geng-gai-shi-fou-du-yi-ti-jiao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> subprocess<span class="token keyword">def</span> <span class="token function">check_git_status</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 执行`git status --porcelain`命令，如果所有的更改都已提交，则输出应为空</span>    result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'git'</span><span class="token punctuation">,</span> <span class="token string">'status'</span><span class="token punctuation">,</span> <span class="token string">'--porcelain'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cwd<span class="token operator">=</span>folder<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">walk_and_check</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> _ <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> <span class="token builtin">dir</span> <span class="token keyword">in</span> dirs<span class="token punctuation">:</span>            dir_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">dir</span><span class="token punctuation">)</span>            <span class="token comment"># 检查文件夹是否包含.git目录，如果是，则视为Git仓库</span>            <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dir_path<span class="token punctuation">,</span> <span class="token string">'.git'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                status <span class="token operator">=</span> check_git_status<span class="token punctuation">(</span>dir_path<span class="token punctuation">)</span>                <span class="token keyword">if</span> status<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'未提交的更改在 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dir_path<span class="token punctuation">&#125;</span></span><span class="token string">:'</span></span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    walk_and_check<span class="token punctuation">(</span><span class="token string">'E:\WT\gerritCode'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>addEventListener第三个参数</title>
      <link href="/2024/01/12/addeventlistener-di-san-ge-can-shu/"/>
      <url>/2024/01/12/addeventlistener-di-san-ge-can-shu/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener">addEventListener第三个参数</a></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 事件监听 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js检测屏幕横竖屏</title>
      <link href="/2024/01/12/js-jian-ce-ping-mu-heng-shu-ping/"/>
      <url>/2024/01/12/js-jian-ce-ping-mu-heng-shu-ping/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token comment">// 页面加载进来的时候检测屏幕方向</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 在这里检测屏幕方向</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'屏幕方向:'</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>orientation<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">showOrHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 监听屏幕方向变化</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"orientationchange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">showOrHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">showOrHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>orientation<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">'100%'</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'100%'</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">'#fff'</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'fixed'</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zIndex <span class="token operator">=</span> <span class="token number">10000000000</span>        dom<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'请使用横屏进行游戏'</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>textAlign <span class="token operator">=</span> <span class="token string">'center'</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingTop <span class="token operator">=</span> <span class="token string">'45vh'</span>        dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">'#000'</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">'visible'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'横屏'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// document.body.style.display = 'block'</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">'visible'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 横竖屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端ios适配安全区域</title>
      <link href="/2024/01/11/yi-dong-duan-ios-gua-pei-an-quan-qu-yu/"/>
      <url>/2024/01/11/yi-dong-duan-ios-gua-pei-an-quan-qu-yu/</url>
      
        <content type="html"><![CDATA[<p>安全区域横屏适配</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,initial-scale=1,user-scalable=no,viewport-fit=cover<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果不加<code>viewport-fit=cover</code>这个属性，H5页面在iPhone上会出现不能铺满全屏的情况，加上这个属性后，页面会自动填充到全屏幕。但是横屏展示时，状态栏部分会被遮挡，所以需要做一些适配。由于页面是会旋转的，所有left和right都要适配。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - <span class="token function">constant</span><span class="token punctuation">(</span>safe-area-inset-left<span class="token punctuation">)</span> - <span class="token function">constant</span><span class="token punctuation">(</span>safe-area-inset-right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-left<span class="token punctuation">)</span> - <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 移动端 </tag>
            
            <tag> ios </tag>
            
            <tag> 安全区域 </tag>
            
            <tag> 适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echart纵轴y数据值问题</title>
      <link href="/2023/12/29/echart-zong-zhou-y-shu-ju-zhi-wen-ti/"/>
      <url>/2023/12/29/echart-zong-zhou-y-shu-ju-zhi-wen-ti/</url>
      
        <content type="html"><![CDATA[<p><code>y周数据值过小，折线走势不明显</code></p><p><strong>解决方案</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">yAxis</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"value"</span><span class="token punctuation">,</span>          <span class="token literal-property property">splitNumber</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>          <span class="token comment">// 关键代码，将y轴最小值作为底值</span>          <span class="token function-variable function">min</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> value<span class="token punctuation">.</span>min<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> echart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鸿蒙弹窗</title>
      <link href="/2023/12/14/hong-meng-dan-chuang/"/>
      <url>/2023/12/14/hong-meng-dan-chuang/</url>
      
        <content type="html"><![CDATA[<h3 id="1-警告弹窗"><a href="#1-警告弹窗" class="headerlink" title="1. 警告弹窗"></a>1. 警告弹窗</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">AlertDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token comment">// title:"密码错误",</span><span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"是否需要重新输入"</span><span class="token punctuation">,</span><span class="token comment">// 取消按钮</span><span class="token literal-property property">primaryButton</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">"取消"</span><span class="token punctuation">,</span><span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"取消了输入"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 确定按钮</span><span class="token literal-property property">secondaryButton</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">"确定"</span><span class="token punctuation">,</span><span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"确认需要"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 弹窗位置</span><span class="token literal-property property">alignment</span><span class="token operator">:</span> DialogAlignment<span class="token punctuation">.</span>Bottom<span class="token punctuation">,</span><span class="token comment">// 相对偏移量</span><span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">dx</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">dy</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">100</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-选择类弹窗"><a href="#2-选择类弹窗" class="headerlink" title="2. 选择类弹窗"></a>2. 选择类弹窗</h3><h4 id="2-1-日期"><a href="#2-1-日期" class="headerlink" title="2.1 日期"></a>2.1 日期</h4><img src="/2023/12/14/hong-meng-dan-chuang/%E6%97%A5%E6%9C%9F%E5%BC%B9%E7%AA%97.png" class="" title="日期弹窗"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">DatePickerDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2023-01-01"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">selected</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 是否是农历</span><span class="token literal-property property">lunar</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token function-variable function">onAccept</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> DatePickerResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> year <span class="token operator">=</span> value<span class="token punctuation">.</span>year<span class="token punctuation">;</span><span class="token keyword">let</span> month <span class="token operator">=</span> value<span class="token punctuation">.</span>month <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">let</span> day <span class="token operator">=</span> value<span class="token punctuation">.</span>day<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>year<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>month<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>day<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-文本选择"><a href="#2-2-文本选择" class="headerlink" title="2.2 文本选择"></a>2.2 文本选择</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">TextPickerDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">range</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">selected</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token function-variable function">onAccept</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">result</span><span class="token operator">:</span> TextPickerResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">onCancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"取消"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>线性激活函数</title>
      <link href="/2023/12/13/xian-xing-ji-huo-han-shu/"/>
      <url>/2023/12/13/xian-xing-ji-huo-han-shu/</url>
      
        <content type="html"><![CDATA[<p>在深度学习中，线性激活函数是一种特殊的激活函数，它不引入非线性。它只是<code>简单地通过一个权重因子将输入值传递给输出值</code>。线性激活函数的数学公式如下：<br><code>f(x) = wx</code><br>其中，f(x) 是线性激活函数的输出值，x 是输入值，w 是权重因子。线性激活函数通常用于线性层，即权重矩阵是线性变换的层。线性激活函数的优点是它简单且易于理解。然而，线性激活函数的一个主要缺点是它不能引入非线性，这可能会限制模型在复杂数据集上的性能。在深度学习模型中，非线性激活函数（如ReLU、sigmoid和tanh）通常用于隐藏层，以增加模型的表达能力。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>损失函数</title>
      <link href="/2023/12/13/sun-shi-han-shu/"/>
      <url>/2023/12/13/sun-shi-han-shu/</url>
      
        <content type="html"><![CDATA[<p>损失函数<br>在深度学习和机器学习领域，通常使用损失函数来衡量模型预测结果与实际结果之间的差距。在嵌入模型中，<code>损失函数用于衡量模型预测的嵌入向量与实际嵌入向量之间的差距</code>。以下是一些常用的损失函数：</p><blockquote><ol><li>均方误差（Mean Squared Error, MSE）：MSE 是衡量两个向量之间差距的一种常用方法，计算方法是两个向量的点积除以它们的维数。MSE 对于异常值和噪声较为敏感，但计算相对简单。</li><li>余弦相似度（Cosine Similarity）：余弦相似度是一种衡量两个向量夹角的方法，范围在 -1 到 1 之间。余弦相似度越高，表示两个向量越相似。在嵌入模型中，可以使用余弦相似度来计算预测嵌入向量与实际嵌入向量之间的差距。</li><li>交叉熵损失（Cross-Entropy Loss）：交叉熵损失是一种常用的损失函数，用于衡量两个概率分布之间的差距。在嵌入模型中，可以将预测嵌入向量看作是一个概率分布，而实际嵌入向量看作是另一个概率分布，然后使用交叉熵损失来计算它们之间的差距。</li><li>对比损失（Contrastive Loss）：对比损失是一种在嵌入空间中衡量两个样本之间相似性的方法。在嵌入模型中，可以将预测嵌入向量看作是一个样本，而实际嵌入向量看作是另一个样本，然后使用对比损失来计算它们之间的差距。</li></ol></blockquote><p>在训练嵌入模型时，需要根据具体的任务和数据集选择合适的损失函数。同时，还需要注意损失函数的可导性，以便在训练过程中使用梯度下降法进行优化。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入模型</title>
      <link href="/2023/12/13/qian-ru-mo-xing/"/>
      <url>/2023/12/13/qian-ru-mo-xing/</url>
      
        <content type="html"><![CDATA[<h3 id="1-什么是嵌入模型？"><a href="#1-什么是嵌入模型？" class="headerlink" title="1. 什么是嵌入模型？"></a>1. 什么是嵌入模型？</h3><p>嵌入模型是一种<code>机器学习模型</code>，它将非结构化数据（如文本、图像、音频等）编码为向量，以便于计算机进行处理。嵌入模型通常由两部分组成：<code>编码器和解码器</code>。编码器将非结构化数据编码为向量，解码器将向量解码为非结构化数据。嵌入模型可以用于各种机器学习任务，如文本分类、图像分类、语音识别等。</p><p>嵌入模型是一种机器学习模型，<code>用于在低维空间中表示高维数据</code>。这种模型通常用于降维、特征学习、数据压缩和数据可视化等任务。嵌入模型的目标是在保持数据结构和信息的情况下，将数据从高维空间映射到低维空间。这使得处理大规模数据集变得更加高效，同时也降低了计算复杂度</p><p>嵌入模型通常使用神经网络或深度学习方法来训练。在训练过程中，模型通过最小化一个<code>损失函数</code>来调整其参数，以便更好地表示输入数据。训练完成后，模型可以用于预测新数据或评估数据集中的潜在结构。</p><h3 id="2-嵌入模型的编码器"><a href="#2-嵌入模型的编码器" class="headerlink" title="2. 嵌入模型的编码器"></a>2. 嵌入模型的编码器</h3><p>通常由多个隐藏层组成，每个隐藏层都包含多个神经元。<code>编码器的输入是原始数据，输出是向量表示</code>。编码器的隐藏层可以使用不同的激活函数，如ReLU、Sigmoid、Tanh 等。编码器的输出层通常使用<code>线性激活函数</code>，如 Softmax、Sigmoid、Tanh 等。</p><p>嵌入模型的编码器是一种用于将输入数据（如图像、文本或音频）转换为固定大小的向量表示的神经网络模型。机器学习领域通常使用的嵌入模型是一种深度学习模型，使用<code>循环神经网络（RNN）</code>或<code>卷积神经网络（CNN）</code>等架构。<br>嵌入模型的编码器通常包括多个层，每一层都负责将输入数据转换为更高级别的特征表示。这些层可以包括卷积层、循环层、池化层等，具体取决于输入数据的类型和模型的设计。</p><p><code>编码器的主要目标是从输入数据中提取有用的信息，并将这些信息存储在一个固定大小的向量中表示</code>。这个向量被称为嵌入向量或嵌入表示，它可以用于各种机器学习任务，如分类、聚类或回归。</p><p>编码器的输出通常被称为<code>嵌入向量或嵌入表示</code>，它<code>捕捉了输入数据中的重要特征和模式</code>。嵌入表示可以用于各种机器学习任务，如分类、聚类或回归。</p><p>在训练过程中，嵌入模型的编码器使用大量标注数据进行学习，以便更好地捕捉输入数据中的有用信息。通过学习，编码器能够生成更准确和有效的嵌入表示，从而提高模型在各种任务上的性能。</p><h3 id="3-嵌入模型的解码器"><a href="#3-嵌入模型的解码器" class="headerlink" title="3. 嵌入模型的解码器"></a>3. 嵌入模型的解码器</h3><p>嵌入模型的解码器通常由多个隐藏层组成，每个隐藏层都包含多个神经元。<code>解码器的输入是嵌入向量，输出是原始数据</code>。解码器的隐藏层可以使用不同的激活函数，如ReLU、Sigmoid、Tanh 等。解码器的输出层通常使用线性激活函数，如 Softmax、Sigmoid、Tanh 等。</p><p>嵌入模型是一种用于处理自然语言处理的机器学习模型，它可以提取文本数据中的语义信息，并将其转换为计算机可以理解的数字表示形式。嵌入模型通常包括一个编码器和一个解码器。</p><p>编码器：编码器的主要任务是读取输入的文本数据，并将其转换为固定长度的向量表示。编码器通常使用循环神经网络（RNN）或者长短时记忆网络（LSTM）等深度学习技术实现。<code>输入的文本数据会经过一系列的隐藏层，每一层都会提取不同的语义信息，最后得到一个向量表示。这个向量被称为“词嵌入”或“嵌入向量”，它包含了输入文本的所有语义信息</code>。</p><p>解码器：<code>解码器的主要任务是使用编码器生成的嵌入向量来生成输出文本</code>。解码器通常也是一个循环神经网络（RNN）或者长短时记忆网络（LSTM）等深度学习模型。<code>解码器会根据编码器生成的嵌入向量生成一系列的隐藏状态，然后通过这些隐藏状态来生成输出文本。解码器会逐个生成输出单词，直到生成一个特殊的结束符或者达到预设的最大输出长度</code>。</p><p>在实际应用中，嵌入模型可以用于各种自然语言处理任务，如文本分类、情感分析、机器翻译、问答系统等。通过训练嵌入模型，可以使模型学会理解文本数据的语义信息，并生成高质量的输出文本。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机中的鲁棒性</title>
      <link href="/2023/11/25/ji-suan-ji-zhong-de-lu-bang-xing/"/>
      <url>/2023/11/25/ji-suan-ji-zhong-de-lu-bang-xing/</url>
      
        <content type="html"><![CDATA[<p>计算机科学中的鲁棒性（Robustness）是指一个系统或算法在面对错误、异常输入或攻击时，仍能保持稳定、正常运行的能力。鲁棒性强调的是系统在不确定性和噪声环境中的稳定性和可靠性。<br>在计算机科学中，鲁棒性通常应用于以下几个方面：</p><blockquote><ol><li>数据鲁棒性（Data Robustness）：数据鲁棒性是指数据在遭受攻击、篡改或丢失时，仍能保留其有效性和完整性的能力。例如，哈希函数可以实现数据的鲁棒性，即使数据被篡改，哈希值仍然能够识别出这种篡改。</li><li>算法鲁棒性（Algorithm Robustness）：算法鲁棒性是指算法在处理错误或异常输入时，仍能得出正确结果的能力。例如，鲁棒性优化算法可以在目标函数存在噪声或异常值时，仍能找到一个较好的解。</li><li>系统鲁棒性（System Robustness）：系统鲁棒性是指整个计算机系统在面对硬件故障、软件错误或网络攻击时，仍能保持稳定运行的能力。例如，冗余设计和容错机制可以提高系统的鲁棒性。</li><li>网络安全鲁棒性（Security</li><li>Robustness）：网络安全鲁棒性是指计算机系统在面对网络攻击（如拒绝服务攻击、恶意软件等）时，仍能保护用户数据和系统资源的能力。例如，防火墙、入侵检测系统和加密技术可以提高网络安全的鲁棒性。</li></ol></blockquote><p>总之，鲁棒性是计算机科学中一个重要的概念，它对于确保计算机系统的安全、可靠和稳定运行具有重要意义。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 鲁棒性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型压力测试</title>
      <link href="/2023/11/20/da-mo-xing-ya-li-ce-shi/"/>
      <url>/2023/11/20/da-mo-xing-ya-li-ce-shi/</url>
      
        <content type="html"><![CDATA[<p>大模型压力测试是一种评估人工智能模型在面临大量数据、复杂计算和多种输入情况下的性能表现和稳定性的过程。以下是大模型压力测试的一些建议方法：</p><blockquote><ol><li>数据量测试：通过向模型输入大量数据，观察模型在处理不同数据量时的性能变化。这可以帮助我们了解模型在大规模数据集上的表现。</li><li>计算资源测试：在有限的计算资源下测试模型的性能，以评估模型在不同硬件和软件环境下的适应性。</li><li>并发测试：模拟多个用户或设备同时访问模型的情况，以评估模型在处理并发请求时的性能和稳定性。</li><li>输入多样性测试：向模型输入各种类型的数据，包括正常情况下的输入、异常值、噪声数据等，以评估模型在处理不同类型数据时的<code>鲁棒性</code>。</li><li>长时间运行测试：让模型在长时间内运行，以评估其在稳定性和资源占用方面的表现。</li><li>错误处理测试：模拟模型可能出现的错误情况，如输入参数错误、计算错误等，以评估模型在出错情况下的稳定性和容错能力。</li><li>压力循环测试：通过快速重复地输入大量数据，模拟模型在持续高压下的性能表现。</li><li><code>模型更新测试</code>：在模型更新后，通过对比新旧模型的性能表现，以评估更新后的模型是否满足预期。</li><li>安全性测试：评估模型在面对恶意输入或攻击时的安全性，如对抗性样本攻击、重放攻击等。</li></ol></blockquote><p>通过以上测试，我们可以全面了解大模型在不同场景下的性能表现和稳定性，从而为模型的优化和部署提供有力支持。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型L1、L2正则化</title>
      <link href="/2023/11/19/da-mo-xing-l1-l2-zheng-ze-hua/"/>
      <url>/2023/11/19/da-mo-xing-l1-l2-zheng-ze-hua/</url>
      
        <content type="html"><![CDATA[<p>大模型的L1和L2正则化是<code>一种用于防止过拟合</code>的技术，它通过在损失函数中添加一个额外的惩罚项来限制模型的复杂度。这个额外的惩罚项通常与模型参数的大小有关，可以是模型参数的<code>绝对值之和（L1正则化）</code>或<code>平方和（L2正则化）</code>。</p><blockquote><p>L1正则化：在损失函数中添加模型参数的绝对值之和作为惩罚项。这可以导致模型参数的大值变为0，从而产生稀疏的权重矩阵，有助于特征选择。L1正则化有助于模型在特征空间中进行稀疏表示，从而提高模型的泛化能力。</p></blockquote><blockquote><p>L2正则化：在损失函数中添加模型参数的平方和作为惩罚项。这可以导致模型参数的值变小，但不会变为0，从而产生更平滑的权重矩阵。L2正则化有助于防止模型过拟合，提高模型在训练集和测试集上的性能。</p></blockquote><p>在大模型中，可以通过在损失函数中添加L1或L2正则化项来限制模型的复杂度，从而提高模型的泛化能力。例如，在神经网络中，可以在每层的权重后面添加L2正则化项，或者在全连接层之间添加L1正则化项。通过调整正则化项的系数，可以在模型复杂度和泛化能力之间找到一个平衡点。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
            <tag> 正则化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型的泛化能力</title>
      <link href="/2023/11/05/da-mo-xing-de-fan-hua-neng-li/"/>
      <url>/2023/11/05/da-mo-xing-de-fan-hua-neng-li/</url>
      
        <content type="html"><![CDATA[<p>大模型的泛化能力是指模型在应对新数据、新任务时的表现。简单来说，大模型的泛化能力就是其在未知数据上的预测能力。一个具有良好泛化能力的大模型可以在各种不同的任务和数据集上表现良好，能够适应各种不同的场景。<br>提高大模型的泛化能力主要依赖于以下几个方面：</p><blockquote><ol><li>更多的训练数据：通过增加训练数据量，可以帮助模型学习到更多的特征和规律，从而提高其泛化能力。</li><li>更复杂的模型：选择更复杂的模型可以帮助模型捕捉到更多的特征和规律，但同时也可能导致<code>过拟合</code>。因此，需要在模型复杂度和过拟合之间找到平衡。</li><li>正则化技术：通过正则化技术（如<code>L1、L2正则化</code>）可以限制模型的复杂度，防止过拟合，从而提高模型的泛化能力。</li><li>数据增强：通过对训练数据进行变换（如旋转、缩放、翻转等），可以生成更多的训练样本，从而提高模型的泛化能力。</li><li>模型集成：通过将多个模型的预测结果进行组合，可以提高模型的泛化能力。常见的模型集成方法有Bagging、Boosting和Stacking等。</li><li>迁移学习：通过在预训练模型的基础上进行微调，可以利用预训练模型学到的通用特征，从而提高模型在目标任务上的泛化能力。</li></ol></blockquote><p>总之，提高大模型的泛化能力需要综合考虑数据、模型、技术和方法等多个方面，以实现模型在各类任务和数据集上的优秀表现。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
            <tag> 泛化能力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型欠拟合</title>
      <link href="/2023/11/05/da-mo-xing-qian-ni-he/"/>
      <url>/2023/11/05/da-mo-xing-qian-ni-he/</url>
      
        <content type="html"><![CDATA[<p>大模型欠拟合是指在大规模机器学习模型中，模型在训练数据集上表现不佳，不能很好地解释数据的现象。这通常是因为模型过于简单，无法捕捉到数据中的复杂关系。为了解决大模型欠拟合的问题，可以尝试以下方法：</p><blockquote><ol><li>增加模型复杂度：通过增加模型的层数、神经元数量或者参数数量，可以提高模型的拟合能力。</li><li>增加训练数据：更多的训练数据可以帮助模型更好地学习数据中的复杂关系。</li><li>特征工程：对输入数据进行预处理，提取更多的有意义的特征，可以帮助模型更好地理解数据。</li><li>使用正则化方法：正则化是一种防止过拟合的技术，可以在模型训练过程中引入一定的噪声，防止模型过于复杂。</li><li>调整模型参数：通过调整模型的超参数，如学习率、批次大小等，可以优化模型的性能。</li><li>使用集成方法：集成方法如随机森林、梯度提升等，可以提高模型的泛化能力，减轻欠拟合现象。</li><li>使用交叉验证：通过将训练数据分为多个子集，并在不同子集上训练和验证模型，可以更准确地评估模型的性能，从而找到更合适的模型。</li></ol></blockquote><p>总之，解决大模型欠拟合问题需要综合考虑模型的复杂度、训练数据的数量和特征工程等多个方面，以提高模型的泛化能力。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型过拟合</title>
      <link href="/2023/11/05/da-mo-xing-guo-ni-he/"/>
      <url>/2023/11/05/da-mo-xing-guo-ni-he/</url>
      
        <content type="html"><![CDATA[<p>在大模型微调过程中，需要注意避免过拟合。过拟合是指模型在训练数据上表现良好，但在测试数据上表现较差的现象。这通常是因为模型过于复杂，以至于它学习了训练数据中的噪声，而非真正的潜在规律。为了避免过拟合，可以采取以下策略：</p><blockquote><ol><li>使用更多的训练数据：更多的数据可以帮助模型学习到更多的潜在规律，从而提高泛化能力。</li><li>数据增强：通过对训练数据进行变换（如旋转、缩放、翻转等），可以生成更多的训练样本，从而提高模型的泛化能力。</li><li>正则化：在损失函数中添加正则化项（如L1或L2正则化），可以限制模型的复杂度，从而降低过拟合的风险。</li><li>早停：在训练过程中，当验证集上的性能不再提高时，提前终止训练，以防止模型过度拟合训练数据。</li><li>Dropout：在训练过程中，以一定的概率随机丢弃部分神经元，可以防止模型过度依赖某些特征，从而降低过拟合的风险。</li><li>使用更简单的模型：选择一个更简单的模型，以减少模型的复杂度，从而降低过拟合的风险。</li><li>使用集成方法：通过组合多个模型的预测结果，可以提高模型的泛化能力，从而降低过拟合的风险。</li><li>交叉验证：通过将训练数据分成多个子集，并在不同子集上进行训练和验证，可以更准确地评估模型的泛化能力，从而有助于选择合适的模型和参数。</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型微调需要注意的事项</title>
      <link href="/2023/11/05/da-mo-xing-wei-diao-xu-yao-zhu-yi-de-shi-xiang/"/>
      <url>/2023/11/05/da-mo-xing-wei-diao-xu-yao-zhu-yi-de-shi-xiang/</url>
      
        <content type="html"><![CDATA[<p>在进行大模型微调时，需要注意以下几点：</p><blockquote><ol><li>数据预处理：确保输入数据的质量，对文本进行清洗、去除停用词、标点符号等，以提高模型的准确性和效果。</li><li>数据集划分：将数据集划分为训练集、验证集和测试集，以便在微调过程中监控模型性能并进行调整。</li><li>模型选择：根据任务需求选择合适的预训练模型，如GPT-2、GPT-3、BERT等，并确保模型的版本和参数设置与预训练时一致。</li><li>学习率设置：根据模型的复杂度和数据集的大小选择合适的学习率，以防止<code>过拟合</code>或<code>欠拟合</code>。</li><li>训练时长：合理设置训练时长，避免过长时间训练导致模型过拟合，同时保证模型充分学习。</li><li>正则化：使用正则化技术（如Dropout、L1/L2正则化等）来防止模型过拟合。</li><li>评估指标：选择合适的评估指标，如准确率、F1分数、AUC-ROC曲线等，以衡量模型性能。</li><li>模型保存：在训练过程中定期保存模型权重，以便在意外中断的情况下恢复训练。</li><li>模型微调：根据实际需求对模型进行微调，如添加自定义的层、调整学习率、优化器等。</li><li>模型部署：将微调后的模型部署到实际应用场景中，如聊天机器人、文本分类、情感分析等。</li></ol></blockquote><p>总之，在进行大模型微调时，需要关注数据预处理、模型选择、学习率设置、训练时长、正则化、评估指标、模型保存、模型微调和模型部署等方面，以确保模型的性能和稳定性。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
            <tag> 微调 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型微调</title>
      <link href="/2023/11/05/da-mo-xing-wei-diao/"/>
      <url>/2023/11/05/da-mo-xing-wei-diao/</url>
      
        <content type="html"><![CDATA[<p>大模型微调是指对预训练的大模型进行调整，以便更好地适应特定的任务或领域。这个过程通常包括以下几个步骤：</p><blockquote><ol><li>数据预处理：根据任务需求，对输入数据进行适当的预处理，例如文本数据的分词、去除停用词、词干提取等。</li><li>选择微调层：预训练的大模型通常包含多个层次，需要确定哪些层次需要进行微调。通常，可以选择靠近输出层的前几个层次进行微调，因为这些都是与任务最相关的层次。</li><li>冻结非微调层：为了减少计算量和内存需求，可以选择冻结预训练大模型中除微调层之外的其他层次，这样在训练过程中它们就不会再更新。</li><li>训练微调模型：使用特定的任务数据集对微调层进行训练，通常使用有监督学习方法，通过对比预测结果和真实标签来更新模型参数。训练过程中，可以使用交叉验证来调整超参数，以获得最佳性能。</li><li>评估和优化：在训练完成后，使用测试数据集对微调后的模型进行评估，以确定其在特定任务上的性能。如果性能不佳，可以尝试调整预处理步骤、微调层选择、学习率等超参数，以优化模型性能。</li></ol></blockquote><p>通过这种方式，大模型微调可以使其更好地适应特定的任务或领域，从而提高模型在实际应用中的性能。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
            <tag> 微调 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型是如何分析数据的</title>
      <link href="/2023/11/01/da-mo-xing-shi-ru-he-fen-xi-shu-ju-de/"/>
      <url>/2023/11/01/da-mo-xing-shi-ru-he-fen-xi-shu-ju-de/</url>
      
        <content type="html"><![CDATA[<p>大模型通过一系列复杂的算法和神经网络来分析数据。以下是分析数据的一般过程：</p><blockquote><ol><li>数据预处理：大模型首先需要对原始数据进行预处理，包括清洗、转换和标准化等操作，以便于后续的分析和建模。</li><li>特征提取：大模型会从预处理后的数据中提取出有用的特征，这些特征可以帮助模型更好地理解数据的内容和结构。特征提取可以通过各种技术实现，如主成分分析（PCA）、自动编码器等。</li><li>模型训练：大模型会使用提取出的特征和相应的标签（如果可用）来训练神经网络或其他机器学习模型。训练过程中，模型会调整其参数以最小化预测误差。训练过程可能需要大量的计算资源和时间。</li><li>模型评估：训练完成后，大模型需要评估模型的性能。这通常通过将模型应用于一组独立的测试数据并计算预测误差来实现。评估结果可以帮助我们了解模型在实际应用中的表现。</li><li>模型优化：如果模型的性能不佳，大模型可能需要对模型进行调整，如更改神经网络的结构、调整学习率等。优化过程可能需要多次迭代。</li><li>预测与解释：一旦模型训练完成并符合预期的性能，大模型可以将其应用于新的数据并进行预测。此外，大模型还可以解释模型的预测结果，帮助我们理解模型是如何做出决策的。</li><li>部署与应用：最后，大模型将分析结果应用于实际问题，如推荐系统、自动驾驶汽车等。在整个过程中，大模型会不断收集反馈并更新模型，以提高其性能和适应性。</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>检测元素是否在页面内展示</title>
      <link href="/2023/10/27/jian-ce-yuan-su-shi-fou-zai-ye-mian-nei-zhan-shi/"/>
      <url>/2023/10/27/jian-ce-yuan-su-shi-fou-zai-ye-mian-nei-zhan-shi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 解决当wtListScrollColumn元素隐藏且此时更改分辨率后，再次显示wtListScrollColumn时布局没有更新的问题</span><span class="token keyword">const</span> elementToWatch <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"wtListScrollColumn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> intersectionObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entries</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 页面展示</span><span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SetDynamicLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token comment">// 页面隐藏</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> elementToWatch<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>intersectionObserver<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>elementToWatch<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//  设置动态布局</span> <span class="token function">SetDynamicLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 获取屏幕宽度</span>      <span class="token comment">// 屏幕宽度卡片取余</span>      <span class="token comment">// 取余后看一行能放下几个卡片</span>      <span class="token comment">// 将余数平均分配到每个卡片</span>      <span class="token comment">// 如果余数平分后不会造成拥挤到下一行</span>      <span class="token comment">// 余数平分后拥挤到下一行</span>      <span class="token comment">// 给卡片设置最后宽度</span>      <span class="token keyword">let</span> containerWidth<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">/*       如果wtListScrollColumn元素在页面上没有显示，就使用自己传入的listWidth值，       使用场景：业务代码内，使用v-show根据接口返回的数据 控制wtListScrollColumn元素的显示隐藏      */</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.wtListScrollColumn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          containerWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 其他场景</span>        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          containerWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.wtListScrollColumn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>containerWidth<span class="token punctuation">,</span> <span class="token string">'containerWidth'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> yushu <span class="token operator">=</span> containerWidth <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cardMinWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> geshu <span class="token operator">=</span> <span class="token punctuation">(</span>containerWidth <span class="token operator">-</span> yushu<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cardMinWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> pingjun <span class="token operator">=</span> <span class="token punctuation">(</span>yushu <span class="token operator">/</span> geshu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cardWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cardMinWidth <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>pingjun<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// console.log(this.cardWidth, 'this.cardWidth');</span>        <span class="token comment">// 将当前卡片宽度传递给父组件，用于根据UI要求完成其他元素布局</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'cardWidthBoundary'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cardWidth<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue插槽组件</title>
      <link href="/2023/10/25/vue-cha-cao-zu-jian/"/>
      <url>/2023/10/25/vue-cha-cao-zu-jian/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 滚动组件</span><span class="token operator">&lt;</span>view <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: '100%', width: '100%' &#125;"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>scroll<span class="token operator">-</span>view <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"['wtListScrollColumn', isScroll ? '' : 'clsScroll']"</span>      <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; height: '100%', width: '100%', gap: about + 'Px', gridRowGap: cardDown + 'Px' &#125;"</span> <span class="token operator">:</span>scroll<span class="token operator">-</span>y<span class="token operator">=</span><span class="token string">"isScroll"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>block v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in listData"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"scroll-list-card"</span> <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; width: cardWidth + 'Px', &#125;"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"cardContent"</span> <span class="token operator">:</span>cardData<span class="token operator">=</span><span class="token string">"item"</span> <span class="token operator">:</span>cardWidth<span class="token operator">=</span><span class="token string">"cardWidth"</span> ref<span class="token operator">=</span><span class="token string">"scroll-list-card"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>block<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>scroll<span class="token operator">-</span>view<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"store-scroll"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"isShowH5ScrollView &amp;&amp; storeList.length > 0"</span> style<span class="token operator">=</span><span class="token string">"width: 1622Px;"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>wt<span class="token operator">-</span>list<span class="token operator">-</span>scroll<span class="token operator">-</span>column <span class="token operator">:</span>list<span class="token operator">-</span>data<span class="token operator">=</span><span class="token string">"storeList"</span> <span class="token operator">:</span>cardWidth<span class="token operator">=</span><span class="token string">"731"</span> <span class="token operator">:</span>cardDown<span class="token operator">=</span><span class="token string">"32"</span> <span class="token operator">:</span>about<span class="token operator">=</span><span class="token string">"32"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 关键点在这两行代码 cardContent是具名插槽的名称 cardData是插槽声明时的变量 sitem是card卡片里的props<span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>template #cardContent<span class="token operator">=</span><span class="token string">"&#123; cardData &#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>card <span class="token operator">:</span>sitem<span class="token operator">=</span><span class="token string">"cardData"</span> <span class="token operator">/</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>wt<span class="token operator">-</span>list<span class="token operator">-</span>scroll<span class="token operator">-</span>column<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// card组件</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"store-item-wrap"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"store-item"</span> @tap<span class="token operator">=</span><span class="token string">"handleStoreItem(sitem)"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-name"</span><span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> sitem<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>      <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-detail-info"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 店铺大图 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-photo-wrap"</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 营业状态 <span class="token operator">--</span><span class="token operator">></span>          <span class="token operator">&lt;</span>view v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"sitem.openinfo"</span> <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span>"sitem<span class="token punctuation">.</span>openinfo <span class="token operator">===</span> <span class="token string">'休息中'</span>            <span class="token operator">?</span> <span class="token string">'index-store-status-close'</span>            <span class="token operator">:</span> <span class="token string">'index-store-status-open'</span>            <span class="token string">" class="</span>index<span class="token operator">-</span>store<span class="token operator">-</span>status"<span class="token operator">></span>            <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> sitem<span class="token punctuation">.</span>openinfo <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>          <span class="token operator">&lt;</span>image <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-front-img"</span> <span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"sitem.frontimg"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 门店信息 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-info-wrap"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>view v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"sitem.avgscore &amp;&amp; sitem.avgscore !== 0"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-price-wrap"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-price"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> sitem<span class="token punctuation">.</span>avgscore <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>分            <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>            <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-score-wrap"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>image v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"i in Math.floor(sitem.avgscore) || 0"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"i * 0.01"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"star-common"</span>                src<span class="token operator">=</span><span class="token string">"@/static/images/full-star.png"</span> <span class="token operator">/</span><span class="token operator">></span>              <span class="token operator">&lt;</span>image                v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"Math.round((parseFloat(sitem.avgscore) - parseFloat(Math.floor(sitem.avgscore))) * 100) / 100 &lt; 0.6 &amp;&amp; Math.round((parseFloat(sitem.avgscore) - parseFloat(Math.floor(sitem.avgscore))) * 100) / 100 > 0"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"star-common"</span> src<span class="token operator">=</span><span class="token string">"@/static/images/half-star.png"</span> <span class="token operator">/</span><span class="token operator">></span>              <span class="token operator">&lt;</span>image                v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"Math.round((parseFloat(sitem.avgscore) - parseFloat(Math.floor(sitem.avgscore))) * 100) / 100 > 0.5"</span>                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"star-common"</span> src<span class="token operator">=</span><span class="token string">"@/static/images/full-star.png"</span> <span class="token operator">/</span><span class="token operator">></span>              <span class="token operator">&lt;</span>image v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"i in Math.floor(5 - sitem.avgscore) || 0"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"i * 0.1"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"star-common"</span>                src<span class="token operator">=</span><span class="token string">"@/static/images/common-star.png"</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>          <span class="token operator">&lt;</span>view v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"sitem.avgprice || sitem.avgprice === 0"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"avgprice"</span><span class="token operator">></span>            ￥<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> sitem<span class="token punctuation">.</span>avgprice <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">/</span>人          <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>          <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-tag"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-tag-item"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> sitem<span class="token punctuation">.</span>area <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>            <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-tag-item"</span><span class="token operator">></span>              <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> sitem<span class="token punctuation">.</span>subcate <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>          <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"index-store-detail-btn-wrap"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn-item"</span> hover<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pressbtnCut"</span> @tap<span class="token punctuation">.</span>stop<span class="token operator">=</span><span class="token string">"navToStore(sitem)"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>image <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn-img"</span> <span class="token operator">:</span>src<span class="token operator">=</span>"<span class="token constant">THEME</span><span class="token punctuation">.</span>colorStyle <span class="token operator">==</span> <span class="token string">'light'</span> <span class="token operator">?</span> navImgLight <span class="token operator">:</span> navImgDark                " <span class="token operator">/</span><span class="token operator">></span>              <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn-text"</span><span class="token operator">></span> 导航 <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>              <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn-text-mile"</span><span class="token operator">></span>                <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> sitem<span class="token punctuation">.</span>distasnce <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>taro3.2.0环境env</title>
      <link href="/2023/10/25/taro3.2.0-huan-jing-env/"/>
      <url>/2023/10/25/taro3.2.0-huan-jing-env/</url>
      
        <content type="html"><![CDATA[<img src="/2023/10/25/taro3.2.0-huan-jing-env/1.png" class=""><p><code>在taro3.2.0项目中config文件夹内的dev.js、index.js、prod.js不能改变NODE环境变量的process.env.NODE_ENV的值，必须使用插件[taro-plugin-environment](https://github.com/bigmeow/taro-plugin-environment)</code></p><img src="/2023/10/25/taro3.2.0-huan-jing-env/2.png" class=""><p><code>只有 TARO_APP_ 开头的环境变量会被注入进去</code></p><img src="/2023/10/25/taro3.2.0-huan-jing-env/3.png" class=""><p>示例：</p><img src="/2023/10/25/taro3.2.0-huan-jing-env/4.png" class="" title="创建.env.c236文件、更改package.json"><img src="/2023/10/25/taro3.2.0-huan-jing-env/5.png" class="" title=".env.c236文件">]]></content>
      
      
      <categories>
          
          <category> 库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机中的向量</title>
      <link href="/2023/10/20/ji-suan-ji-zhong-de-xiang-liang/"/>
      <url>/2023/10/20/ji-suan-ji-zhong-de-xiang-liang/</url>
      
        <content type="html"><![CDATA[<p>在计算机科学中，向量是一个可以存储多个数据元素的集合，这些数据元素可以是数字、字符、布尔值等。向量通常用于表示空间中的点、方向或遵循特定顺序的一组值。在数学中，向量具有大小（magnitude）和方向（direction），但在计算机科学中，向量通常仅指其方向。<br>在计算机中，向量通常作为数据结构或数据类型来处理。向量在计算机科学中的应用非常广泛，包括图形学、数据科学、机器学习、人工智能等领域。<br>向量可以用一维数组、二维数组或其他多维数组表示</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>向量数据库</title>
      <link href="/2023/10/18/xiang-liang-shu-ju-ku/"/>
      <url>/2023/10/18/xiang-liang-shu-ju-ku/</url>
      
        <content type="html"><![CDATA[<p>向量数据库是一种用于存储、检索和管理向量数据的数据库。向量数据是一种数值型数据，通常用于表示文本、图像、音频等非数值型数据的特征。在向量数据库中，这些特征被转换为数值向量，以便于进行高效的存储和检索。<br>向量数据库的主要特点如下：</p><blockquote><ol><li>高性能：向量数据库通常使用高效的数据结构和算法来处理大量向量数据，如倒排索引、KD 树、球树等。这使得向量数据库在处理向量数据查询和搜索时具有很高的性能。</li><li>低内存占用：由于向量数据库可以有效地压缩和存储向量数据，因此它可以降低内存占用，提高数据库的扩展性。</li><li>灵活的数据模型：向量数据库可以处理各种类型的向量数据，如文本、图像、音频等。此外，向量数据库还可以根据应用需求进行扩展，以支持更多的数据类型和场景。</li><li>支持复杂的查询和聚合操作：向量数据库通常提供一些高级功能，如相似度计算、聚类分析、异常检测等，以支持用户对向量数据进行分析和处理。</li></ol></blockquote><p>向量数据库的应用场景包括：</p><blockquote><ol><li>文本信息检索：向量数据库可以用于存储文本数据的特征向量，从而实现对文本的快速检索和相似度计算。</li><li>图像和视频分析：向量数据库可以用于存储图像和视频数据的特征向量，从而实现对图像和视频的快速检索、分类和比对。</li><li>语音识别和音频分析：向量数据库可以用于存储音频数据的特征向量，从而实现对音频的快速检索、分类和比对。</li><li>生物信息学：向量数据库可以用于存储生物数据的特征向量，从而实现对生物数据的快速检索、分类和比对。</li><li>推荐系统：向量数据库可以用于存储用户和物品的特征向量，从而实现对用户和物品的快速检索、分类和推荐。</li></ol></blockquote><h3 id="1-什么是向量数据库？"><a href="#1-什么是向量数据库？" class="headerlink" title="1. 什么是向量数据库？"></a>1. 什么是向量数据库？</h3><p>信息有多种形式。有些信息是非结构化的，例如文本文档、富媒体和音频，有些则是结构化的，例如应用程序日志、表格和图表。人工智能和机器学习（AI/ML）的创新使我们能够创建一种机器学习模型，即<code>嵌入模型</code>。嵌入模型将所有类型的数据编码为向量，以捕获资产的含义和上下文。这样我们就能够通过搜索相邻的数据点找到相似的资产。向量搜索方法可提供独特的体验，例如用智能手机拍照，然后搜索相似的图像。</p><p>向量数据库能够将向量存储为高维点并进行检索。这些数据库增加了额外的功能，可以高效、快速地查找 N 维空间中的最近邻。这些功能通常由<br>k 最近邻（k-NN）索引提供支持，并使用分层可导航小世界（HNSW）和倒排文件索引（IVF）算法等算法构建。向量数据库提供了其他功能，例如数据管理、容错、身份验证和访问控制以及查询引擎。</p><h3 id="2-为什么向量数据库十分重要？"><a href="#2-为什么向量数据库十分重要？" class="headerlink" title="2. 为什么向量数据库十分重要？"></a>2. 为什么向量数据库十分重要？</h3><p>开发人员可以将嵌入生成的向量索引到向量数据库中。这样的话，他们便可通过查询相邻向量来找到相似的资产。</p><p>向量数据库提供了一种使嵌入模型有效运行的方法。通过复杂的查询语言，利用资源管理、安全控制、可扩展性、容错能力和高效信息检索等数据库功能，可以提高应用程序开发效率。</p><p>向量数据库最终助力开发人员研发出独有的应用程序体验。例如，您的用户可以在智能手机上拍摄照片以搜索相似的图像。</p><p>开发人员可以使用其他类型的机器学习模型自动从图像和扫描文档等内容中提取元数据。他们可以将元数据与向量一起编入索引，以实现对关键字和向量的混合搜索。开发人员还可以将语义理解融入相关性排名中，以改善搜索结果。</p><p>例如 ChatGPT 这样的新模型是对生成式人工智能（AI）的创新，这些模型可以生成文本并管理与人类的复杂对话。有些模型可以在多种模式下运行；例如，有些模型可以根据用户描述的景观生成符合描述内容的图像。</p><p>但是，生成式模型容易产生幻觉，这可能会导致聊天机器人对用户造成误导。<br>向量数据库可以弥补生成式人工智能模型的这一缺陷。向量数据库为生成式人工智能聊天机器人提供外部知识库，确保它们提供值得信赖的信息。</p><h3 id="3-向量数据库的使用方式是什么？"><a href="#3-向量数据库的使用方式是什么？" class="headerlink" title="3. 向量数据库的使用方式是什么？"></a>3. 向量数据库的使用方式是什么？</h3><p>向量数据库通常为视觉、语义和多模态搜索等向量搜索使用案例提供支持。最近，它们与生成式人工智能（AI）文本模型配对，创建了提供对话式搜索体验的智能代理。</p><p>开发过程从构建嵌入模型开始，该模型将类似产品图像的语料库编码为向量。数据导入过程也称为<code>数据融合</code>。应用程序开发人员现在可以使用该数据库搜索相似产品，方法是对产品图像进行编码并利用向量查询相似的图片。</p><p>在此模型中，k 最近邻（k-NN）索引实现了高效的向量检索，并应用距离函数（如余弦）按相似度对结果进行排序。</p><h3 id="4-向量数据库的使用者是谁？"><a href="#4-向量数据库的使用者是谁？" class="headerlink" title="4. 向量数据库的使用者是谁？"></a>4. 向量数据库的使用者是谁？</h3><p>对于希望创建基于向量搜索操作的开发人员，可以使用向量数据库。应用程序开发人员可以使用开源模型、自动机器学习（ML）工具和基础模型服务来生成嵌入内容并补充向量数据库。这需要具备基本的机器学习专业知识。</p><p>由数据科学家和工程师构成的团队可以创建经过专业调整的嵌入内容，并通过向量数据库运行这些嵌入。这有助于他们加速提供人工智能（AI）解决方案。</p><p>运营团队可以按照对常见数据库工作负载的管理方式来管理这些解决方案。他们可以使用现有的工具和手册。</p><h3 id="5-向量数据库具有哪些优势？"><a href="#5-向量数据库具有哪些优势？" class="headerlink" title="5. 向量数据库具有哪些优势？"></a>5. 向量数据库具有哪些优势？</h3><p>借助向量数据库，开发人员可通过向量搜索进行创新并研发出独有的体验。向量数据库可加速人工智能（AI）应用程序的开发，并简化由人工智能驱动的应用程序工作负载的运作。</p><p>向量数据库提供了在裸式 k 最近邻（k-NN）索引之上进行构建的替代方案。这类索引需要大量额外的专业知识和工程才能使用、调整和运行。</p><p>良好的向量数据库通过数据管理、容错、关键安全功能和查询引擎等功能为应用程序提供坚实的基础。这些功能使用户能够操作他们的工作负载以简化扩展，保持高可扩展性，并满足安全要求。</p><p>查询引擎和 SDK 等工具让应用程序开发工作变得更加轻松。借助这些工具，开发人员可以对元数据执行更高级的查询（例如搜索和筛选），这类查询也属于<br>k-NN 搜索。他们还可以选择使用混合相关性评分模型，将传统的术语频率模型（例如 BM25）与向量评分相结合，以增强信息检索。</p><h3 id="6-矢量数据库面临哪些挑战？"><a href="#6-矢量数据库面临哪些挑战？" class="headerlink" title="6. 矢量数据库面临哪些挑战？"></a>6. 矢量数据库面临哪些挑战？</h3><p>矢量数据库也面临着许多与其他数据库技术相同的挑战。将继续努力提高可扩展性、近似精度、延迟性能和经济性。</p><p>作为一项相对较新的技术，许多矢量数据库在核心数据库能力方面需要提升，例如安全性、弹性、运营支持和工作负载支持的多样化。随着人工智能（AI）应用程序的成熟，这一点将非常重要，未来需要的不仅仅只限于矢量搜索功能。</p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型训练</title>
      <link href="/2023/10/13/da-mo-xing-xun-lian/"/>
      <url>/2023/10/13/da-mo-xing-xun-lian/</url>
      
        <content type="html"><![CDATA[<p>模型训练通常包括以下几个步骤：</p><blockquote><ol><li>数据收集：首先需要收集大量的文本、图像或其他类型的数据。这些数据通常需要经过预处理，例如清洗、去除噪声、分词等，以便模型能够更好地理解和学习。</li><li>数据标注：对于需要标注的数据，例如图像、文本等，需要人工或自动的方式进行标注，为每个数据项分配相应的标签。</li><li>模型选择：根据任务的需求，选择合适的模型架构。例如，对于自然语言处理任务，可以选择Transformer、BERT等模型；对于计算机视觉任务，可以选择ResNet、VGG等模型。</li><li>模型训练：使用收集到的数据和标签训练模型。这通常涉及到设置合适的超参数，例如学习率、批次大小、迭代次数等。训练过程中，模型会不断调整其内部参数以最小化预测误差。</li><li>模型评估：在训练过程中或训练完成后，需要使用<code>验证集</code>或<code>测试集</code>评估模型的性能。这可以帮助我们了解模型是否过拟合或欠拟合，以及模型的泛化能力如何。</li><li>模型优化：根据评估结果，可以对模型进行调整，例如更改模型架构、调整超参数、使用正则化技术等，以提高模型的性能。</li><li>模型部署：当模型训练完成并达到满意的性能后，可以将模型部署到实际应用中，例如智能对话系统、图像识别应用等。</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大模型合集</title>
      <link href="/2023/10/11/da-mo-xing-he-ji/"/>
      <url>/2023/10/11/da-mo-xing-he-ji/</url>
      
        <content type="html"><![CDATA[<h5 id="1"><a href="#1" class="headerlink" title="1. "></a>1. <a href="/2023/10/13/da-mo-xing-xun-lian/" title="大模型训练">大模型训练</a></h5><h5 id="2"><a href="#2" class="headerlink" title="2. "></a>2. <a href="/2023/10/18/xiang-liang-shu-ju-ku/" title="向量数据库">向量数据库</a></h5><h5 id="3"><a href="#3" class="headerlink" title="3. "></a>3. <a href="/2023/10/20/ji-suan-ji-zhong-de-xiang-liang/" title="计算机中的向量">计算机中的向量</a></h5><h5 id="4"><a href="#4" class="headerlink" title="4. "></a>4. <a href="/2023/11/01/da-mo-xing-shi-ru-he-fen-xi-shu-ju-de/" title="大模型是如何分析数据的">大模型是如何分析数据的</a></h5><h5 id="5"><a href="#5" class="headerlink" title="5. "></a>5. <a href="/2023/11/05/da-mo-xing-wei-diao/" title="大模型微调">大模型微调</a></h5><h5 id="6"><a href="#6" class="headerlink" title="6. "></a>6. <a href="/2023/11/05/da-mo-xing-wei-diao-xu-yao-zhu-yi-de-shi-xiang/" title="大模型微调需要注意的事项">大模型微调需要注意的事项</a></h5><h5 id="7"><a href="#7" class="headerlink" title="7. "></a>7. <a href="/2023/11/05/da-mo-xing-guo-ni-he/" title="大模型过拟合">大模型过拟合</a></h5><h5 id="8"><a href="#8" class="headerlink" title="8. "></a>8. <a href="/2023/11/05/da-mo-xing-qian-ni-he/" title="大模型欠拟合">大模型欠拟合</a></h5><h5 id="9"><a href="#9" class="headerlink" title="9. "></a>9. <a href="/2023/11/05/da-mo-xing-de-fan-hua-neng-li/" title="大模型的泛化能力">大模型的泛化能力</a></h5><h5 id="10"><a href="#10" class="headerlink" title="10. "></a>10. <a href="/2023/11/19/da-mo-xing-l1-l2-zheng-ze-hua/" title="大模型L1、L2正则化">大模型L1、L2正则化</a></h5><h5 id="11"><a href="#11" class="headerlink" title="11. "></a>11. <a href="/2023/11/20/da-mo-xing-ya-li-ce-shi/" title="大模型压力测试">大模型压力测试</a></h5><h5 id="12"><a href="#12" class="headerlink" title="12. "></a>12. <a href="/2023/11/25/ji-suan-ji-zhong-de-lu-bang-xing/" title="计算机中的鲁棒性">计算机中的鲁棒性</a></h5><h5 id="13"><a href="#13" class="headerlink" title="13. "></a>13. <a href="/2023/12/13/qian-ru-mo-xing/" title="嵌入模型">嵌入模型</a></h5><h5 id="14"><a href="#14" class="headerlink" title="14. "></a>14. <a href="/2023/12/13/sun-shi-han-shu/" title="损失函数">损失函数</a></h5><h5 id="15"><a href="#15" class="headerlink" title="15. "></a>15. <a href="/2023/12/13/xian-xing-ji-huo-han-shu/" title="线性激活函数">线性激活函数</a></h5>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次taro项目安装问题</title>
      <link href="/2023/10/08/ji-lu-yi-ci-taro-xiang-mu-an-zhuang-wen-ti/"/>
      <url>/2023/10/08/ji-lu-yi-ci-taro-xiang-mu-an-zhuang-wen-ti/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"abcd"</span><span class="token punctuation">,</span><span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span><span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"templateInfo"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span><span class="token property">"typescript"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"css"</span><span class="token operator">:</span> <span class="token string">"less"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"build:weapp"</span><span class="token operator">:</span> <span class="token string">"taro build --type weapp"</span><span class="token punctuation">,</span><span class="token property">"build:h5"</span><span class="token operator">:</span> <span class="token string">"taro build --type h5"</span><span class="token punctuation">,</span><span class="token property">"dev:weapp"</span><span class="token operator">:</span> <span class="token string">"npm run build:weapp -- --watch"</span><span class="token punctuation">,</span><span class="token property">"dev:h5"</span><span class="token operator">:</span> <span class="token string">"npm run build:h5 -- --watch"</span><span class="token punctuation">,</span><span class="token property">"lint-staged"</span><span class="token operator">:</span> <span class="token string">"lint-staged"</span><span class="token punctuation">,</span><span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"eslint --fix **/*&#123;.js,.vue,.ts&#125;"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"last 3 versions"</span><span class="token punctuation">,</span> <span class="token string">"Android >= 4.1"</span><span class="token punctuation">,</span> <span class="token string">"ios >= 8"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"FE"</span><span class="token punctuation">,</span><span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"@babel/runtime"</span><span class="token operator">:</span> <span class="token string">"^7.7.7"</span><span class="token punctuation">,</span><span class="token property">"@tarojs/cli"</span><span class="token operator">:</span> <span class="token string">"^3.2.0"</span><span class="token punctuation">,</span><span class="token property">"@tarojs/components"</span><span class="token operator">:</span> <span class="token string">"3.2.0"</span><span class="token punctuation">,</span><span class="token property">"@tarojs/runtime"</span><span class="token operator">:</span> <span class="token string">"3.2.0"</span><span class="token punctuation">,</span><span class="token property">"@tarojs/taro"</span><span class="token operator">:</span> <span class="token string">"3.2.0"</span><span class="token punctuation">,</span><span class="token property">"@tarojs/webpack-runner"</span><span class="token operator">:</span> <span class="token string">"^3.3.14"</span><span class="token punctuation">,</span><span class="token property">"vue"</span><span class="token operator">:</span> <span class="token string">"^2.5.0"</span><span class="token punctuation">,</span><span class="token property">"vue-template-compiler"</span><span class="token operator">:</span> <span class="token string">"^2.5.0"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"@babel/core"</span><span class="token operator">:</span> <span class="token string">"^7.8.0"</span><span class="token punctuation">,</span><span class="token property">"@commitlint/cli"</span><span class="token operator">:</span> <span class="token string">"^13.1.0"</span><span class="token punctuation">,</span><span class="token property">"@commitlint/config-conventional"</span><span class="token operator">:</span> <span class="token string">"^13.1.0"</span><span class="token punctuation">,</span><span class="token property">"@tarojs/mini-runner"</span><span class="token operator">:</span> <span class="token string">"3.2.0"</span><span class="token punctuation">,</span><span class="token property">"@tarojs/webpack-runner"</span><span class="token operator">:</span> <span class="token string">"^3.3.14"</span><span class="token punctuation">,</span><span class="token property">"@types/webpack-env"</span><span class="token operator">:</span> <span class="token string">"^1.13.6"</span><span class="token punctuation">,</span><span class="token property">"babel-preset-taro"</span><span class="token operator">:</span> <span class="token string">"3.2.0"</span><span class="token punctuation">,</span><span class="token property">"eslint"</span><span class="token operator">:</span> <span class="token string">"^6.8.0"</span><span class="token punctuation">,</span><span class="token property">"eslint-config-taro"</span><span class="token operator">:</span> <span class="token string">"3.2.0"</span><span class="token punctuation">,</span><span class="token property">"eslint-plugin-vue"</span><span class="token operator">:</span> <span class="token string">"7.0.0"</span><span class="token punctuation">,</span><span class="token property">"husky"</span><span class="token operator">:</span> <span class="token string">"^7.0.1"</span><span class="token punctuation">,</span><span class="token property">"lint-staged"</span><span class="token operator">:</span> <span class="token string">"^11.1.2"</span><span class="token punctuation">,</span><span class="token property">"prettier"</span><span class="token operator">:</span> <span class="token string">"^2.3.2"</span><span class="token punctuation">,</span><span class="token property">"stylelint"</span><span class="token operator">:</span> <span class="token string">"9.3.0"</span><span class="token punctuation">,</span><span class="token property">"vue-loader"</span><span class="token operator">:</span> <span class="token string">"^15.9.2"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"husky"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"hooks"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"pre-commit"</span><span class="token operator">:</span> <span class="token string">"lint-staged"</span><span class="token punctuation">,</span><span class="token property">"commit-msg"</span><span class="token operator">:</span> <span class="token string">"commitlint -e HUSKY_GIT_PARAMS"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"lint-staged"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"&#123;packages,libs&#125;/**"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"eslint --fix"</span><span class="token punctuation">,</span> <span class="token string">"git add ."</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本项目依赖 taro3.2.0 版本运行，使用 npm 安装后，报错</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">.</span><span class="token operator">/</span>examples<span class="token operator">/</span>app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>jsModule build <span class="token function">failed</span> <span class="token punctuation">(</span>from <span class="token punctuation">.</span><span class="token operator">/</span>node_modules<span class="token operator">/</span>@tarojs<span class="token operator">/</span>webpack<span class="token operator">-</span>runner<span class="token operator">/</span>node_modules<span class="token operator">/</span>@tarojs<span class="token operator">/</span>taro<span class="token operator">-</span>loader<span class="token operator">/</span>lib<span class="token operator">/</span>h5<span class="token punctuation">.</span>js<span class="token punctuation">)</span><span class="token operator">:</span><span class="token literal-property property">TypeError</span><span class="token operator">:</span> Cannot read property <span class="token string">'creator'</span> <span class="token keyword">of</span> <span class="token keyword">undefined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>根据报错进入文件内查看显示<code>import &#123; $&#123;options.loaderMeta.creator&#125; &#125; from &#39;$&#123;options.loaderMeta.creatorLocation&#125;&#39;</code>，判断是版本错误。<br>运行<code>taro doctor</code>显示<img src="/2023/10/08/ji-lu-yi-ci-taro-xiang-mu-an-zhuang-wen-ti/1.png" class="" title="taro doctor结果">安装的@tarojs/webpack-runner 版本是 3.6.16，而实际项目中需要的是^3.3.14，重新 npm install @tarojs/<a href="mailto:&#x77;&#x65;&#x62;&#112;&#97;&#x63;&#107;&#x2d;&#114;&#x75;&#110;&#110;&#101;&#x72;&#x40;&#x33;&#x2e;&#x33;&#46;&#49;&#52;">&#x77;&#x65;&#x62;&#112;&#97;&#x63;&#107;&#x2d;&#114;&#x75;&#110;&#110;&#101;&#x72;&#x40;&#x33;&#x2e;&#x33;&#46;&#49;&#52;</a>，完美运行</p>]]></content>
      
      
      <categories>
          
          <category> 库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm/cnpm/yarn的区别</title>
      <link href="/2023/10/08/npm-cnpm-yarn-de-qu-bie/"/>
      <url>/2023/10/08/npm-cnpm-yarn-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<blockquote><p>npm 会根据 package.lock.json 文件进行包安装<br>cnpm 只会根据 package.json 文件进行包安装</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flex自适应布局</title>
      <link href="/2023/10/08/flex-zi-gua-ying-bu-ju/"/>
      <url>/2023/10/08/flex-zi-gua-ying-bu-ju/</url>
      
        <content type="html"><![CDATA[<p><em><code>先看下效果</code></em><br><video width="100%" height="auto" controls></p><source src="/2023/10/08/flex-zi-gua-ying-bu-ju/动态flex.mp4" type="video/mp4"></video><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">SetDynamicLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#123;</span><span class="token comment">// 获取屏幕宽度</span><span class="token comment">// 屏幕宽度卡片取余</span><span class="token comment">// 取余后看一行能放下几个卡片</span><span class="token comment">// 将余数平均分配到每个卡片</span><span class="token comment">// 如果余数平分后不会造成拥挤到下一行</span><span class="token comment">// 余数平分后拥挤到下一行</span><span class="token comment">// 给卡片设置最后宽度</span><span class="token keyword">let</span> containerWidth<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">/*             如果wtListScrollColumn元素在页面上没有显示，就使用自己传入的listWidth值，             使用场景：业务代码内，使用v-show根据接口返回的数据 控制wtListScrollColumn元素的显示隐藏            */</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".wtListScrollColumn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"未获取到父元素宽度:"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".wtListScrollColumn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>containerWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 其他场景</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取到父元素宽度:"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".wtListScrollColumn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>containerWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".wtListScrollColumn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixedWidth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>containerWidth<span class="token punctuation">,</span> <span class="token string">"containerWidth"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> remainder <span class="token operator">=</span> containerWidth <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cardMinWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//计算后得出的余数</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>remainder<span class="token punctuation">,</span> <span class="token string">"remainder"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> numberCard <span class="token operator">=</span> <span class="token punctuation">(</span>containerWidth <span class="token operator">-</span> remainder<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cardMinWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numberCard<span class="token punctuation">,</span> <span class="token string">"numberCard"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>numberCard <span class="token operator">=</span> numberCard<span class="token punctuation">;</span><span class="token keyword">let</span> average <span class="token operator">=</span> <span class="token punctuation">(</span>remainder <span class="token operator">/</span> numberCard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>cardWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cardMinWidth <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>average<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cardWidth<span class="token punctuation">,</span> <span class="token string">"this.cardWidth"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将当前卡片宽度传递给父组件，用于根据UI要求完成其他元素布局</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"cardWidthBoundary"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cardWidth<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>cardWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fixedWidth<span class="token punctuation">;</span><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>containerWidth <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixedWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">=</span> n<span class="token punctuation">;</span><span class="token keyword">let</span> p <span class="token operator">=</span> containerWidth <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixedWidth <span class="token operator">*</span> n <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>about <span class="token operator">*</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> d <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".wtListScrollColumn_"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isCenter<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>d<span class="token punctuation">.</span>style<span class="token punctuation">.</span>paddingLeft <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>p <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"Px"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token string">"np"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取浏览器js代码运行时间</title>
      <link href="/2023/09/26/huo-qu-liu-lan-qi-js-dai-ma-yun-xing-shi-jian/"/>
      <url>/2023/09/26/huo-qu-liu-lan-qi-js-dai-ma-yun-xing-shi-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="1-console-time"><a href="#1-console-time" class="headerlink" title="1. console.time"></a>1. console.time</h3><p><code>console.time只会测量js代码执行时间</code></p><blockquote><p>console.time(‘运行时间’)<br>console.timeEnd(‘运行时间’)</p></blockquote><p><code>保证上面的console里面的参数一致即可，在控制台搜索对应的参数，就能看到运行时间</code></p><img src="/2023/09/26/huo-qu-liu-lan-qi-js-dai-ma-yun-xing-shi-jian/1.png" class="" title="获取浏览器js代码运行时间"><img src="/2023/09/26/huo-qu-liu-lan-qi-js-dai-ma-yun-xing-shi-jian/2.png" class="" title="获取浏览器js代码运行时间"><p>在 JavaScript 中，console.time() 方法用于创建一个计时器，你可以使用它来测量代码执行的时间。当你调用 console.time() 方法时，它会生成一个计时器标签，你可以在后续的代码中通过 console.timeEnd() 方法来结束计时，并输出经过的时间。</p><p>这是一个简单的例子来展示如何使用 console.time() 和 console.timeEnd()：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">"myTimer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 开始计时，并给计时器命名为 "myTimer"</span><span class="token comment">// 这里是你想要测量执行时间的代码</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 一些重复的操作</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">"myTimer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 结束计时，并输出 "myTimer" 计时器的耗时</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的代码中，console.time(“myTimer”) 开始了一个名为 “myTimer” 的计时器，然后执行了一些重复的操作。当 console.timeEnd(“myTimer”) 被调用时，计时器停止，并且控制台会输出 “myTimer” 计时器所经过的时间。</p><p>这种方法对于性能分析和调试非常有用，因为它可以帮助开发者识别代码中的性能瓶颈。通过测量不同部分的代码执行时间，开发者可以优化那些耗时较长的操作，从而提高程序的整体性能。</p><hr><h3 id="2-测量浏览器渲染时间"><a href="#2-测量浏览器渲染时间" class="headerlink" title="2. 测量浏览器渲染时间"></a>2. 测量浏览器渲染时间</h3><p>console.time() 和 console.timeEnd() 方法主要用于测量 JavaScript 代码的执行时间，它们并不直接测量页面渲染的时间。页面渲染是一个复杂的过程，涉及浏览器的多个组件，包括 HTML 解析、CSS 计算、JavaScript 执行、布局（layout）、绘制（paint）等步骤。</p><p>如果你想要测量页面渲染的时间，你应该关注的是浏览器提供的其他性能 API，如 Performance API。Performance API 提供了更细粒度的计时信息，包括页面加载的各个阶段。</p><p>例如，你可以使用 window.performance 对象来访问这些信息。下面是一些常用的性能指标：</p><p>navigationStart：浏览器开始加载页面的时间（包括连接和获取资源的时间）。<br>fetchStart：浏览器发起请求去获取资源的时间。<br>domLoading：DOM 树开始加载的时间。<br>domInteractive：DOM 树完全解析完成，并且 JavaScript 脚本已经加载完毕，但是样式、图片和子框架可能还在加载的时间。<br>domContentLoadedEventStart：所有 DOM 核心处理完毕，不需要等待样式表、图片和子框架完成加载的时间。<br>loadEventStart：当所有资源加载完毕，页面的 load 事件被触发的时间。<br>你可以使用 console.time()和 console.timeEnd()来测量 JavaScript 代码的执行时间，同时使用 Performance API 来获取页面加载的各个阶段的时间。这样，你可以更全面地了解页面加载和渲染的性能表现。</p><p>例如，你可以这样使用 Performance API 来测量页面的渲染时间：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> loadTime <span class="token operator">=</span> performance<span class="token punctuation">.</span>timing<span class="token punctuation">.</span>loadEventEnd <span class="token operator">-</span> performance<span class="token punctuation">.</span>timing<span class="token punctuation">.</span>navigationStart<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"页面加载和渲染完成所用时间："</span> <span class="token operator">+</span> loadTime <span class="token operator">+</span> <span class="token string">"毫秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，loadEventEnd 和 navigationStart 是 Performance API 提供的时间戳，它们分别代表页面加载和渲染完成的时间以及页面开始加载的时间。通过计算这两个时间戳之间的差值，你可以得到页面从开始加载到完全渲染完成所需的时间。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css自定义滚动条</title>
      <link href="/2023/08/15/css-zi-ding-yi-gun-dong-tiao/"/>
      <url>/2023/08/15/css-zi-ding-yi-gun-dong-tiao/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::-webkit-scrollbar">参考链接</a></p><blockquote><p>::-webkit-scrollbar——整个滚动条。<br>::-webkit-scrollbar-button——滚动条上的按钮（上下箭头）。<br>::-webkit-scrollbar-thumb——滚动条上的滚动滑块。<br>::-webkit-scrollbar-track——滚动条轨道。<br>::-webkit-scrollbar-track-piece——滚动条没有滑块的轨道部分。<br>::-webkit-scrollbar-corner——当同时有垂直滚动条和水平滚动条时交汇的部分。通常是浏览器窗口的右下角。<br>::-webkit-resizer——出现在某些元素底角的可拖动调整大小的滑块。</p></blockquote><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.look-more-content</span> <span class="token punctuation">&#123;</span><span class="token property">overflow-y</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.look-more-content::-webkit-scrollbar</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.look-more-content::-webkit-scrollbar-thumb</span> <span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>由于该css特性是非标准的，所以pc端需慎用，但移动端都是基于webkit内核，所以可以使用</code></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次粗心造成的bug</title>
      <link href="/2023/08/09/ji-lu-yi-ci-cu-xin-zao-cheng-de-bug/"/>
      <url>/2023/08/09/ji-lu-yi-ci-cu-xin-zao-cheng-de-bug/</url>
      
        <content type="html"><![CDATA[<h3 id="v-if-与-v-show"><a href="#v-if-与-v-show" class="headerlink" title="v-if 与 v-show"></a>v-if 与 v-show</h3><p>有一个列表和弹窗的 UI，v-if 进行控制，</p><p>列表内每条 item 数据上有个按钮，按钮点击后列表消失，弹窗出现。点击弹窗内 X 号后，弹窗消失，列表出现。</p><p><code>bug：无论列表滚动到哪，弹窗消失后，列表都会回到顶部</code></p><p><strong>原因：v-if每次显示的时候都是重新渲染，当然会从头开始，此处应该用v-show</strong></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sass变量不能在calc里面使用</title>
      <link href="/2023/08/03/sass-bian-liang-bu-neng-zai-calc-li-mian-shi-yong/"/>
      <url>/2023/08/03/sass-bian-liang-bu-neng-zai-calc-li-mian-shi-yong/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-css" data-language="css"><code class="language-css">$<span class="token property">fontSize</span><span class="token punctuation">:</span> 1.4rem<span class="token punctuation">;</span><span class="token selector">.scroll</span><span class="token punctuation">&#123;</span>  <span class="token comment">/* 必须要用 #&#123;&#125;把变量包起来 */</span>  <span class="token selector">calc(100% - #</span><span class="token punctuation">&#123;</span>$fontSize<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> css </tag>
            
            <tag> scss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js中load事件</title>
      <link href="/2023/08/02/js-zhong-load-shi-jian/"/>
      <url>/2023/08/02/js-zhong-load-shi-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="1、-DOMContentLoaded"><a href="#1、-DOMContentLoaded" class="headerlink" title="1、 DOMContentLoaded"></a>1、 DOMContentLoaded</h3><p>在 JavaScript 中，<code>DOMContentLoaded</code> 是一个事件，用于表示当网页的 DOM（文档对象模型） 已经完全加载并且解析完成时触发的事件。简单来说，它标志着网页的 HTML 结构已经可以通过 JavaScript 来访问和操作。</p><p>当浏览器加载一个网页时，它会逐步解析 HTML 代码并构建 DOM 树，这是表示网页结构和内容的内部数据结构。有时，您可能希望在 DOM 完全加载后执行一些 JavaScript 代码，以确保您操作的元素和内容已经存在于 DOM 中。这就是使用<code>DOMContentLoaded</code>事件的情况。</p><p>例如，如果您在<code>DOMContentLoaded</code>事件的处理程序中放置了一些修改 DOM 的代码，那么您可以确保这些修改不会在 DOM 还没有加载完成时执行，从而避免出现错误。</p><p>总之，<code>DOMContentLoaded</code>事件在网页加载过程中的一个关键时间点，它表示网页的结构已经准备好进行 JavaScript 操作。</p><p><strong>注意：DOMContentLoaded 只监听 html 结构</strong></p><p>对于监控 CSS 结构加载完成并且浏览器已经绘制完毕的情况，<code>DOMContentLoaded</code>事件并不足够，因为它只表示 HTML 结构加载完成，而不包括 CSS 的加载和浏览器的绘制。</p><h3 id="2、-window-onload"><a href="#2、-window-onload" class="headerlink" title="2、 window.onload"></a>2、 window.onload</h3><p>要实现监控 CSS 加载和浏览器绘制完毕的需求，您可能需要使用<code>window.onload</code>事件以及<code>requestAnimationFrame</code>方法的结合。这样可以确保在整个页面的所有资源加载完成并且浏览器完成绘制后执行您的代码。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 此处的代码将在所有资源加载完成后执行</span><span class="token comment">// 包括HTML、CSS、图片等</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 此处的代码将在浏览器完成绘制后执行</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>window.onload</code>事件会在整个页面（包括 CSS 和图片等资源）加载完成后触发，而<code>requestAnimationFrame</code>会在浏览器下一次绘制时调用传入的回调函数，这样可以确保在浏览器已经完成页面绘制后再执行相关代码。</p><p><code>window.onload</code> 是一个标准的 JavaScript 事件，因此可以在 Vue.js 代码内使用，但需要注意一些细节。</p><p>在 Vue.js 中，通常会使用 Vue 的生命周期钩子来处理组件的初始化和渲染过程，比如 <code>created</code>、<code>mounted</code> 等。这些钩子可以更好地与 Vue 的响应式数据和组件生命周期进行交互。而 <code>window.onload</code> 则是在整个页面（包括图片、CSS 等资源）都加载完成后触发，与 Vue 的生命周期可能有一些不同步。</p><p>如果您需要在 Vue 组件内部等待页面加载完成后执行某些操作，您可以结合使用 <code>mounted</code> 钩子和 <code>window.onload</code> 事件，例如：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 组件的内容 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 在整个页面加载完成后执行的操作</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是请注意，如果您使用了多个组件，每个组件都在 <code>window.onload</code> 内添加了操作，可能会导致这些操作被重复执行。</p><p>在一个公共的 Vue 组件内使用 <code>window.onload</code> 并且希望避免在其他页面引入时重复执行，您可以考虑使用一个标志来判断是否已经执行过相应的操作。这样可以确保在整个应用中只执行一次该操作。以下是一个示例：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 组件的内容 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 使用一个标志来判断是否已经执行过操作</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>onloadExecuted<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 在整个页面加载完成后执行的操作</span>        window<span class="token punctuation">.</span>onloadExecuted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们在组件的 <code>mounted</code> 钩子中判断 <code>window.onloadExecuted</code> 标志是否已经为 <code>true</code>，如果不是，则添加 <code>window.onload</code> 事件处理程序，并在其中执行操作，并将 <code>window.onloadExecuted</code> 设置为 <code>true</code>，表示已经执行过操作。这样，在其他页面引入这个组件时，由于 <code>window.onloadExecuted</code> 已经为 <code>true</code>，操作就不会再次执行。</p><p>请注意，这种方法仍然具有一定的局限性，因为如果应用中有多个公共组件都采用了类似的方法，可能会造成多次绑定事件处理程序，从而可能导致问题。在实际应用中，您可能需要更加细致地控制这些事件绑定，以确保不会出现重复执行的情况。</p><h4 id="2-1-window-onload-事件会在-img-标签渲染完执行吗，还是在-img-onload-之前"><a href="#2-1-window-onload-事件会在-img-标签渲染完执行吗，还是在-img-onload-之前" class="headerlink" title="2.1 window.onload 事件会在 img 标签渲染完执行吗，还是在 img.onload 之前"></a>2.1 window.onload 事件会在 img 标签渲染完执行吗，还是在 img.onload 之前</h4><p><code>window.onload</code> <code>事件是在整个页面（包括图片等资源）都加载完成后触发的，而不仅仅是在 </code>img<code> 标签渲染完成后触发。</code></p><p>当浏览器解析 HTML 代码时，遇到 <code>img</code> 标签会开始加载图像资源。<code>img</code> 标签有一个 <code>onload</code> 事件，该事件会在图像加载完成后触发。因此，<code>img.onload</code> 事件可以用于检测单个图像是否加载完毕。</p><p>而 <code>window.onload</code> 事件是在整个页面的所有资源，包括 HTML、CSS、图片等，都加载完成之后触发的。因此，<code>window.onload</code> 事件的触发时间会在所有 <code>img.onload</code> 事件之后。</p><p>如果您需要在所有图像加载完成后执行某些操作，您可以在每个图像的 <code>onload</code> 事件中计数，然后当计数达到图像数量时再触发您的操作。这可以保证所有图像都已经加载完毕。</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&lt;template&gt;  &lt;div class&#x3D;&quot;about&quot;&gt;    &lt;div v-for&#x3D;&quot;(item,index) in imgList&quot; :key&#x3D;&quot;index&quot;&gt;      &lt;img :src&#x3D;&quot;item&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;img&quot; @load&#x3D;&quot;imgLoad(item)&quot; @error&#x3D;&quot;imgError(item)&quot;&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script setup&gt;import &#123;onMounted&#125; from &quot;vue&quot;;const imgList &#x3D; [  &quot;http:&#x2F;&#x2F;baicu.jpg&quot;,  &quot;http:&#x2F;&#x2F;c.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;30adcbef76094b36de8a2fe5a1cc7cd98d109d99.jpg&quot;,  &quot;http:&#x2F;&#x2F;h.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;7c1ed21b0ef41bd5f2c2a9e953da81cb39db3d1d.jpg&quot;,  &quot;http:&#x2F;&#x2F;g.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;55e736d12f2eb938d5277fd5d0628535e5dd6f4a.jpg&quot;,  &quot;http:&#x2F;&#x2F;e.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;4e4a20a4462309f7e41f5cfe760e0cf3d6cad6ee.jpg&quot;,  &quot;http:&#x2F;&#x2F;b.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;9d82d158ccbf6c81b94575cfb93eb13533fa40a2.jpg&quot;,  &quot;http:&#x2F;&#x2F;e.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;4bed2e738bd4b31c1badd5a685d6277f9e2ff81e.jpg&quot;,  &quot;http:&#x2F;&#x2F;g.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;0d338744ebf81a4c87a3add4d52a6059252da61e.jpg&quot;,  &quot;http:&#x2F;&#x2F;a.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;f2deb48f8c5494ee5080c8142ff5e0fe99257e19.jpg&quot;,  &quot;http:&#x2F;&#x2F;f.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;4034970a304e251f503521f5a586c9177e3e53f9.jpg&quot;,  &quot;http:&#x2F;&#x2F;b.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;279759ee3d6d55fbb3586c0168224f4a20a4dd7e.jpg&quot;,  &quot;http:&#x2F;&#x2F;a.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;e824b899a9014c087eb617650e7b02087af4f464.jpg&quot;,  &quot;http:&#x2F;&#x2F;c.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;9c16fdfaaf51f3de1e296fa390eef01f3b29795a.jpg&quot;,  &quot;http:&#x2F;&#x2F;d.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;b58f8c5494eef01f119945cbe2fe9925bc317d2a.jpg&quot;,  &quot;http:&#x2F;&#x2F;h.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;902397dda144ad340668b847d4a20cf430ad851e.jpg&quot;,  &quot;http:&#x2F;&#x2F;b.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;359b033b5bb5c9ea5c0e3c23d139b6003bf3b374.jpg&quot;,  &quot;http:&#x2F;&#x2F;a.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;8d5494eef01f3a292d2472199d25bc315d607c7c.jpg&quot;,  &quot;http:&#x2F;&#x2F;b.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;e824b899a9014c08878b2c4c0e7b02087af4f4a3.jpg&quot;,  &quot;http:&#x2F;&#x2F;g.hiphotos.baidu.com&#x2F;image&#x2F;pic&#x2F;item&#x2F;6d81800a19d8bc3e770bd00d868ba61ea9d345f2.jpg&quot;,]onMounted(function () &#123;  console.log(&#39;mounted&#39;)  window.onload &#x3D; function ()&#123;    &#x2F;&#x2F; 这句话会在所有img标签的回调函数执行后再输出    console.log(&#39;所有图片加载完毕&#39;)  &#125;&#125;, undefined)function imgLoad(item)&#123;  console.log(&#96;这张图片加载成功$&#123;item&#125;&#96;)&#125;function imgError(item)&#123;  console.log(&#96;这张图片加载失败$&#123;item&#125;&#96;)&#125;&lt;&#x2F;script&gt;&lt;style scoped&gt;.about &#123;  display: flex;  flex-wrap: wrap;&#125;.img &#123;  width: 100px;  height: 100px;&#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-如果有异步请求的数据，window-onload-还能监听吗"><a href="#2-2-如果有异步请求的数据，window-onload-还能监听吗" class="headerlink" title="2.2 如果有异步请求的数据，window.onload 还能监听吗"></a>2.2 如果有异步请求的数据，window.onload 还能监听吗</h4><p><code>window.onload</code> 事件在整个页面及其所有资源（包括图片、脚本、样式表等）都加载完成后才会触发。如果您的页面中存在异步请求的数据，这些数据的加载不会影响 <code>window.onload</code> 事件的触发。换句话说，<code>window.onload</code> <code>事件不会等待异步请求完成后再触发</code>。</p><p>如果您希望在异步请求的数据加载完成后执行一些操作，可以使用异步回调、Promise、async/await 或其他方式来处理。</p><h3 id="3、和-DOMContentLoaded-同级的事件"><a href="#3、和-DOMContentLoaded-同级的事件" class="headerlink" title="3、和 DOMContentLoaded 同级的事件"></a>3、和 DOMContentLoaded 同级的事件</h3><p>除了 <code>DOMContentLoaded</code> 事件，还有其他一些与之类似的事件，它们也是页面加载和文档解析过程中的重要时间点。以下是一些与 <code>DOMContentLoaded</code> 事件同级的事件：</p><ol><li><p><strong>load 事件</strong>：<br><code>load</code> 事件在整个页面及其所有资源（包括图片、样式表、脚本等）都加载完成后触发。与 <code>DOMContentLoaded</code> 不同，<code>load</code> 事件等待所有资源都加载完成后才触发。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>beforeunload 事件</strong>：<br><code>beforeunload</code> 事件在用户即将离开页面（关闭页面、刷新页面、导航到其他页面等）时触发，可以用于执行一些清理操作或弹出确认提示框。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"beforeunload"</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>readystatechange 事件</strong>：<br><code>readystatechange</code> 事件在文档的 <code>readyState</code> 属性发生变化时触发。<code>readyState</code> 表示文档的加载状态，可能的值有 <code>&quot;loading&quot;</code>、<code>&quot;interactive&quot;</code> 和 <code>&quot;complete&quot;</code>。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"readystatechange"</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>这些事件在不同的加载和文档状态下提供了不同的钩子，让您可以在适当的时候执行特定的操作。根据您的需求，选择适合的事件来监听，以便在页面加载和文档解析过程中执行您希望的操作。</p><h4 id="3-1-readystatechange-会等到-css-执行完成后再执行吗"><a href="#3-1-readystatechange-会等到-css-执行完成后再执行吗" class="headerlink" title="3.1 readystatechange 会等到 css 执行完成后再执行吗"></a>3.1 readystatechange 会等到 css 执行完成后再执行吗</h4><p><code>readystatechange</code> 事件会在文档的 <code>readyState</code> 发生变化时触发，但并不保证会等待 CSS 执行完成。它主要针对文档加载的各个阶段，包括以下几种 <code>readyState</code> 值：</p><ul><li><code>&quot;loading&quot;</code>：文档正在加载。</li><li><code>&quot;interactive&quot;</code>：文档已经解析完成，但仍在加载子资源（例如图片、样式表等）。</li><li><code>&quot;complete&quot;</code>：文档及其所有资源已加载完成。</li></ul><p>在 <code>&quot;interactive&quot;</code> 阶段，通常表示 HTML 结构已经可以被访问，但是某些外部资源可能还在加载中，包括 CSS。因此，在此阶段监听 <code>readystatechange</code> 事件并不等同于等待 CSS 执行完成。</p><p>如果您想等待 CSS 执行完成后执行操作，您可能需要考虑其他方法，如在 <code>window.onload</code> 或具体 CSS 加载完成的事件（例如 <code>link.onload</code>）中执行操作。这些方法会等待所有资源，包括 CSS，都加载和执行完毕后再执行相关代码。</p><h3 id="4、-js-中有多少-onload-事件，或者说-html-有哪些标签带-onload-事件"><a href="#4、-js-中有多少-onload-事件，或者说-html-有哪些标签带-onload-事件" class="headerlink" title="4、 js 中有多少 onload 事件，或者说 html 有哪些标签带 onload 事件"></a>4、 js 中有多少 onload 事件，或者说 html 有哪些标签带 onload 事件</h3><p>在 HTML 和 JavaScript 中，<code>onload</code> 是一个常见的事件处理程序属性，它可以附加到许多不同的 HTML 元素以及 <code>window</code> 和 <code>document</code> 对象上。这个事件在相关元素或资源加载完成后触发。以下是一些常见的使用 <code>onload</code> 事件的 HTML 元素和对象：</p><ol><li><p><strong>window 对象和 document 对象</strong>：<code>window.onload</code> 和 <code>document.onload</code> 事件可以用来指示整个窗口或文档的加载状态。<code>window.onload</code> 会在整个页面（包括资源如图像、样式表等）加载完成后触发，而 <code>document.onload</code> 则是在文档结构加载完毕后触发。</p></li><li><p><strong>img 标签</strong>：<code>img.onload</code> 事件会在图片加载完成后触发。</p></li><li><p><strong>iframe 标签</strong>：<code>iframe.onload</code> 事件会在内嵌框架加载完毕后触发。</p></li><li><p><strong>script 标签</strong>：<code>script.onload</code> 事件会在外部脚本加载并执行完毕后触发。</p></li><li><p><strong>link 标签</strong>：<code>link.onload</code> 事件会在外部样式表加载完毕后触发。</p></li><li><p><strong>audio 和 video 标签</strong>：<code>audio.onload</code> 和 <code>video.onload</code> 事件会在音频和视频元素加载完毕后触发。</p></li><li><p><strong>XMLHttpRequest 对象</strong>：虽然不是 HTML 元素，但是 <code>XMLHttpRequest</code> 对象也有 <code>onload</code> 事件，它在请求完成后触发，表示响应已经加载完毕。</p></li><li><p><strong>其他标签和元素</strong>：实际上，许多 HTML 元素都可以使用 <code>onload</code> 事件，尤其是那些涉及加载外部资源的元素。</p></li></ol><p>需要注意的是，一些事件可能具有不同的命名规范，如 <code>onload</code>、<code>onLoad</code>、<code>onLoad</code> 等，这取决于不同的 HTML 规范和浏览器实现。通常，建议使用全部小写的 <code>onload</code> 标记来指定事件处理程序属性。</p><p>每个元素的 <code>onload</code> 事件都在相应资源加载完成后触发，所以它们可以用于执行与资源加载相关的操作。</p>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>submodule</title>
      <link href="/2023/08/02/submodule/"/>
      <url>/2023/08/02/submodule/</url>
      
        <content type="html"><![CDATA[<p>Git 子模块（submodule）是 Git 中用于管理项目依赖的一种机制。它允许将一个 Git 仓库作为另一个仓库的子目录，使得一个仓库可以引用另一个仓库的特定版本，而不是将其完整地复制到主仓库中。</p><p>使用子模块，可以轻松地将外部项目或库集成到主项目中，同时保持各个项目的独立性和版本控制。</p><p>在添加子模块时，可以使用 <code>git submodule add</code> 命令指定子模块的远程仓库地址和在主项目中的存放路径。例如：</p><pre class="line-numbers language-none"><code class="language-none">git submodule add https:&#x2F;&#x2F;github.com&#x2F;example&#x2F;submodule.git path&#x2F;to&#x2F;submodule<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后，主项目会记录子模块的信息，并在主项目的提交中包含子模块的快照。其他人在克隆主项目时，可以通过 <code>git submodule update --init</code> 命令初始化并下载子模块的内容。</p><p>要更新子模块到最新版本，可以使用 <code>git submodule update --remote</code> 命令。</p><p>子模块虽然提供了便利的依赖管理机制，但也需要注意一些注意事项。主要包括：</p><ol><li>注意及时更新子模块，以确保使用最新版本。</li><li>如果主项目依赖的子模块有更新，需要在主项目中提交子模块的更新，并通知其他开发者及时更新子模块。</li><li>子模块指向的是特定版本，不会自动跟随子模块的远程仓库更新，需要手动同步。</li></ol><p>总之，Git 子模块是一个有用的工具，可以帮助项目管理复杂的依赖关系，并在合适的情况下使用它来使项目组织更加清晰和模块化。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsBridge和dsBridge</title>
      <link href="/2023/08/01/jsbridge-he-dsbridge/"/>
      <url>/2023/08/01/jsbridge-he-dsbridge/</url>
      
        <content type="html"><![CDATA[<p>JS Bridge（JavaScript Bridge）是指在移动应用开发中，通过在原生代码（如Android或iOS）和JavaScript代码之间建立桥梁，实现它们之间的相互通信。这样，原生代码和JavaScript代码就能够互相调用对方的方法和获取对方的数据，从而实现混合开发。</p><p>在移动应用中使用JS Bridge有很多好处。首先，它允许开发者使用熟悉的Web技术（如HTML、CSS和JavaScript）来构建应用的用户界面，同时还能使用原生代码来处理一些性能要求较高或需要访问底层设备功能的部分。其次，使用JS Bridge可以降低开发的难度，因为可以利用Web技术开发部分功能，而无需完全掌握原生开发技术。此外，JS Bridge还可以使得跨平台开发更加容易，因为可以共用一部分代码，从而减少重复劳动。</p><p>在Android中，通常使用WebView来实现JS Bridge。WebView是一个能够显示网页内容的控件，通过WebView提供的addJavascriptInterface()方法，可以将Java对象注入到JavaScript中，从而使得JavaScript可以调用Java对象的方法和访问Java对象的属性。</p><p>在iOS中，通常使用UIWebView或WKWebView来实现JS Bridge。类似于Android中的做法，可以通过WKWebView提供的addScriptMessageHandler()方法将Objective-C对象注入到JavaScript中，从而实现JavaScript调用Objective-C方法的功能。</p><p>总体来说，JS Bridge是移动应用开发中非常有用的技术，它允许开发者充分利用原生代码和Web技术的优势，从而构建出功能丰富且性能良好的混合应用程序。</p>]]></content>
      
      
      <categories>
          
          <category> 规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓音频焦点</title>
      <link href="/2023/08/01/an-zhuo-yin-pin-jiao-dian/"/>
      <url>/2023/08/01/an-zhuo-yin-pin-jiao-dian/</url>
      
        <content type="html"><![CDATA[<p>安卓音频焦点是指在 Android 操作系统中，控制应用程序之间音频播放权的机制。当多个应用程序同时请求播放音频时，Android 会根据优先级和焦点类型来决定哪个应用程序将获得音频焦点。</p><p>音频焦点分为以下四种类型：</p><h3 id="1-安卓焦点分类"><a href="#1-安卓焦点分类" class="headerlink" title="1. 安卓焦点分类"></a>1. 安卓焦点分类</h3><ol><li><p><strong>短暂焦点（Transient Focus）：</strong> 当其他应用程序需要播放一段短暂的声音，例如通知音或短信提示音时，当前应用程序会暂时失去焦点，但在声音播放完毕后会自动恢复焦点。</p></li><li><p><strong>短期焦点（Transient May Duck）：</strong> 当其他应用程序需要播放短暂声音时，当前应用程序也会暂时失去焦点，但是与短暂焦点不同的是，当前应用程序可能会在后台以低音量继续播放。</p></li><li><p><strong>长期焦点（Permanent Focus）：</strong> 当其他应用程序需要长时间持续播放音频时，例如播放音乐或视频，当前应用程序会失去焦点，直到其他应用释放焦点为止。</p></li><li><p><strong>导航焦点（Navigation Focus）：</strong> 这种焦点通常用于提供导航指示时，例如使用导航应用。导航焦点的优先级较高，会中断其他所有类型的焦点。</p></li></ol><p>通过控制音频焦点，Android 可以协调不同应用程序之间的音频播放，确保用户体验更加无缝和可控。开发者可以通过 AudioManager 类和相关接口来请求、监听和处理音频焦点的变化。</p><h3 id="2-安卓音频焦点机制"><a href="#2-安卓音频焦点机制" class="headerlink" title="2. 安卓音频焦点机制"></a>2. 安卓音频焦点机制</h3><p>安卓音频焦点是指在 Android 设备上，多个应用程序同时请求播放音频时，系统会根据优先级和音频焦点规则来决定哪个应用程序可以独占音频播放权。这个机制的目的是确保用户在使用设备时能够有一个良好的音频体验，避免多个应用程序同时播放声音产生的冲突和混乱。</p><p>安卓系统定义了四种不同的音频焦点，它们按优先级从高到低分别是：</p><ol><li><p>FOCUS_GAIN：表示某个应用程序已经获得了音频焦点，可以独占式地播放音频。</p></li><li><p>FOCUS_GAIN_TRANSIENT：表示某个应用程序暂时获得了音频焦点，其他应用程序可以在焦点失去后恢复播放。</p></li><li><p>FOCUS_GAIN_TRANSIENT_MAY_DUCK：表示某个应用程序暂时获得了音频焦点，但是其他应用程序可以继续播放，但需要降低音量。</p></li><li><p>FOCUS_LOSS：表示应用程序失去了音频焦点，需要停止音频播放。</p></li></ol><p>当多个应用程序同时请求音频焦点时，系统会根据这些焦点类型来判断哪个应用程序能够获得焦点。一般情况下，具有更高优先级焦点的应用程序会抢占其他应用程序的焦点。</p><p>例如，当一个正在播放音乐的应用程序获得焦点时，如果有一个电话呼叫进来（具有更高优先级焦点），音乐应用程序会收到 FOCUS_LOSS 焦点丢失的通知，从而停止播放音乐。当电话呼叫结束后，音乐应用程序可以选择恢复播放，此时可能会收到 FOCUS_GAIN_TRANSIENT 焦点暂时获得的通知。</p><p>这样的机制确保了音频资源的合理分配，避免了应用程序之间的声音冲突，为用户提供更好的体验。开发者可以根据自己应用程序的需求和特点来处理音频焦点变化，从而提供更加友好和合理的用户体验。</p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flex布局</title>
      <link href="/2023/08/01/flex-bu-ju/"/>
      <url>/2023/08/01/flex-bu-ju/</url>
      
        <content type="html"><![CDATA[<h3 id="1-align-items和align-content的区别"><a href="#1-align-items和align-content的区别" class="headerlink" title="1. align-items和align-content的区别"></a>1. align-items和align-content的区别</h3><p><code>align-items</code>和<code>align-content</code>都是CSS中用于控制flex容器内部项目对齐的属性，它们之间有一些区别。</p><ol><li><p><code>align-items</code>：</p><ul><li><code>align-items</code>是用来控制flex容器内部所有项目在交叉轴上的对齐方式。</li><li>它可以接受的值包括：<ul><li><code>flex-start</code>：将项目对齐到交叉轴的起始位置。</li><li><code>flex-end</code>：将项目对齐到交叉轴的结束位置。</li><li><code>center</code>：将项目在交叉轴上居中对齐。</li><li><code>baseline</code>：将项目的基线对齐。</li><li><code>stretch</code>：如果项目未设置固定的尺寸，将会拉伸以填充整个交叉轴空间。</li></ul></li></ul></li><li><p><code>align-content</code>：</p><ul><li><code>align-content</code>是用来控制flex容器内部多行项目在交叉轴上的对齐方式。</li><li>它只有在容器内有多行项目时才会生效，而当只有一行项目时，<code>align-items</code>会控制该行项目的对齐方式。</li><li>它可以接受的值包括：<ul><li><code>flex-start</code>：将多行项目对齐到交叉轴的起始位置。</li><li><code>flex-end</code>：将多行项目对齐到交叉轴的结束位置。</li><li><code>center</code>：将多行项目在交叉轴上居中对齐。</li><li><code>space-between</code>：在每行项目之间均匀分布额外的空间。</li><li><code>space-around</code>：在每行项目周围均匀分布额外的空间。</li><li><code>stretch</code>：如果项目未设置固定的尺寸，将会拉伸以填充整个交叉轴空间。</li></ul></li></ul></li></ol><p>简而言之，<code>align-items</code>用于控制flex容器内部单行项目的对齐方式，而<code>align-content</code>用于控制flex容器内部多行项目的对齐方式。如果只有一行项目，两者之间的区别将不会显现。</p><h3 id="2-flex布局里面的margin"><a href="#2-flex布局里面的margin" class="headerlink" title="2. flex布局里面的margin"></a>2. flex布局里面的margin</h3>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片基础知识及不同格式的特点介绍</title>
      <link href="/2023/08/01/tu-pian-ji-chu-zhi-shi-ji-bu-tong-ge-shi-de-te-dian-jie-shao/"/>
      <url>/2023/08/01/tu-pian-ji-chu-zhi-shi-ji-bu-tong-ge-shi-de-te-dian-jie-shao/</url>
      
        <content type="html"><![CDATA[<p><code>本文转自掘金和github</code></p><h3 id="1、掘金"><a href="#1、掘金" class="headerlink" title="1、掘金"></a>1、掘金</h3><p><a href="https://juejin.cn/post/7167182050724675614">参考链接</a></p><img src="/2023/08/01/tu-pian-ji-chu-zhi-shi-ji-bu-tong-ge-shi-de-te-dian-jie-shao/1.png" class="" title="图片基础知识及不同格式的特点介绍"><h3 id="2、github"><a href="#2、github" class="headerlink" title="2、github"></a>2、github</h3><p><a href="https://github.com/Bulandent/blog/issues/17">参考链接</a></p><img src="/2023/08/01/tu-pian-ji-chu-zhi-shi-ji-bu-tong-ge-shi-de-te-dian-jie-shao/2.png" class="" title="图片基础知识及不同格式的特点介绍">]]></content>
      
      
      <categories>
          
          <category> 图片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>audio标签所有事件</title>
      <link href="/2023/08/01/audio-biao-qian-suo-you-shi-jian/"/>
      <url>/2023/08/01/audio-biao-qian-suo-you-shi-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>onplay：当音频开始播放时触发此事件。<br>onpause：当音频暂停时触发此事件。<br>onended：当音频播放完成时触发此事件。<br>onvolumechange：当音量调整时触发此事件。<br>ontimeupdate：当音频播放位置改变时触发此事件。<br>onseeking：当音频正在寻找（跳转）特定的播放位置时触发此事件。<br>onseeked：当音频完成寻找（跳转）特定的播放位置时触发此事件。<br>oncanplay：当浏览器可以开始播放音频时触发此事件。<br>oncanplaythrough：当浏览器预计可以播放整个音频时触发此事件。<br>ondurationchange：当音频的时长信息可用时触发此事件。<br>onloadedmetadata：当音频的元数据（如时长和尺寸）加载后触发此事件。<br>onloadeddata：当当前帧的数据加载后触发此事件。<br>onwaiting：当音频因缓冲不足而需要停止或重新缓冲时触发此事件。<br>onerror：当加载音频时发生错误时触发此事件。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> 音频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>video标签所有事件</title>
      <link href="/2023/07/28/video-biao-qian-suo-you-shi-jian/"/>
      <url>/2023/07/28/video-biao-qian-suo-you-shi-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>onabort: 当视频加载被中止时触发。<br>oncanplay: 当视频可以播放时触发。<br>oncanplaythrough: 当视频可以连续播放且无需停顿时触发。<br>ondurationchange: 当视频的时长发生改变时触发。<br>onemptied: 当当前视频被清空（资源被释放）时触发。<br>onended: 当视频播放结束时触发。<br>onerror: 当视频加载发生错误时触发。<br>onloadeddata: 当视频的第一帧已加载时触发。<br>onloadedmetadata: 当视频的元数据（比如尺寸和时长）加载完毕时触发。<br>onloadstart: 当视频开始加载时触发。<br>onpause: 当视频暂停时触发。<br>onplay: 当视频开始播放时触发。<br>onplaying: 当视频正在播放时触发。<br>onprogress: 当视频正在下载时，会定期触发，以报告下载进度。<br>onratechange: 当视频播放速率发生改变时触发。<br>onseeked: 当用户完成对视频的跳转（seek）时触发。<br>onseeking: 当用户开始对视频进行跳转（seek）时触发。<br>onstalled: 当浏览器尝试获取媒体数据，但数据不可用时触发。<br>onsuspend: 当浏览器暂停下载媒体数据时触发。<br>ontimeupdate: 当视频的播放位置发生改变时触发。<br>onvolumechange: 当视频音量发生改变时触发。<br>onwaiting: 当视频暂停以缓冲下一帧时触发。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断设备是否支持touchstart</title>
      <link href="/2023/07/26/pan-duan-she-bei-shi-fou-zhi-chi-touchstart/"/>
      <url>/2023/07/26/pan-duan-she-bei-shi-fou-zhi-chi-touchstart/</url>
      
        <content type="html"><![CDATA[<p>在项目中，遇到一段代码，同一个元素同时绑定了 touchstart 和 click 两种事件，且同时指向了同一个函数，示例代码如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"go('click')"</span> @touchstart<span class="token operator">=</span><span class="token string">"go('touch')"</span><span class="token operator">></span>go<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"App"</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">go</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于是历史代码，不知道当初为什么将两种事件同时绑定，也不敢删除，所以添加了一个判断，判断当前设备是否支持touchstart，如果支持，就用touchstart，反之使用click</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"go('click')"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"isTouchSupported"</span><span class="token operator">></span>goclick<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button @touchstart<span class="token operator">=</span><span class="token string">"go('touch')"</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">></span>gotouch<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"App"</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">isTouchSupported</span><span class="token operator">:</span><span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> isTouchSupported <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'ontouchstart'</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>maxTouchPoints <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>msMaxTouchPoints <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>isTouchSupported<span class="token operator">?</span><span class="token string">'支持touchstart'</span><span class="token operator">:</span><span class="token string">'不支持touchstart'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>isTouchSupported <span class="token operator">=</span> <span class="token operator">!</span>isTouchSupported  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">go</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style<span class="token operator">></span>#app <span class="token punctuation">&#123;</span>  font<span class="token operator">-</span>family<span class="token operator">:</span> Avenir<span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans<span class="token operator">-</span>serif<span class="token punctuation">;</span>  <span class="token operator">-</span>webkit<span class="token operator">-</span>font<span class="token operator">-</span>smoothing<span class="token operator">:</span> antialiased<span class="token punctuation">;</span>  <span class="token operator">-</span>moz<span class="token operator">-</span>osx<span class="token operator">-</span>font<span class="token operator">-</span>smoothing<span class="token operator">:</span> grayscale<span class="token punctuation">;</span>  text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> #2c3e50<span class="token punctuation">;</span>  margin<span class="token operator">-</span>top<span class="token operator">:</span> 60px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态引入less</title>
      <link href="/2023/07/25/dong-tai-yin-ru-less/"/>
      <url>/2023/07/25/dong-tai-yin-ru-less/</url>
      
        <content type="html"><![CDATA[<p>动态引入css（less/sass）文件，在保证功能不变的前提下，适配不同的UI。</p><img src="/2023/07/25/dong-tai-yin-ru-less/1.png" class="" title="动态引入css（less&#x2F;sass）文件"><p>代码结构如图所示，我们可以根据配置文件(config.js)内的变量值，动态添加不同文件名的css(less/sass)文件即可</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 核心代码</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> a <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"../../config"</span><span class="token punctuation">;</span><span class="token keyword">let</span> p <span class="token operator">=</span> a<span class="token punctuation">.</span>project<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>project <span class="token operator">===</span> <span class="token string">"236"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"./index_.less"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> <span class="token keyword">default</span><span class="token operator">:</span> style <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"加载 less 成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"加载less失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"./index2.less"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> <span class="token keyword">default</span><span class="token operator">:</span> style <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"加载 less 成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"加载less失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./index_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>p<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.less</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> <span class="token keyword">default</span><span class="token operator">:</span> style <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"加载 less 成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"加载less失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>车机系统前端应用播放音视频焦点问题</title>
      <link href="/2023/07/14/che-ji-xi-tong-qian-duan-ying-yong-bo-fang-yin-shi-pin-jiao-dian-wen-ti/"/>
      <url>/2023/07/14/che-ji-xi-tong-qian-duan-ying-yong-bo-fang-yin-shi-pin-jiao-dian-wen-ti/</url>
      
        <content type="html"><![CDATA[<img src="/2023/07/14/che-ji-xi-tong-qian-duan-ying-yong-bo-fang-yin-shi-pin-jiao-dian-wen-ti/1.png" class="" title="车机系统前端应用播放音视频焦点问题"><p><code>背景</code></p><p>车机系统前端应用需要在程序进入后台 或者 被蓝牙打断时暂停播放，<br>进入前台 或者 蓝牙结束时，保持暂停状态</p><p><code>现状</code></p><p>车机前端应用进入后台时，手动调用暂停功能，视频暂停，车机进入前台后，保持暂停状态。√<br>车机前端应用视频播放中，此时蓝牙电话进入，视频会自动暂停播放（<code>注意 是自动暂停，不是手动，原因不明</code><br>），蓝牙电话结束后，会自动续播，且没有声音（<code>要求保持暂停状态，恢复播放后有声音</code>）</p><p><strong>解决方案</strong></p><blockquote><ol><li>去掉video组件控制条提供的播放、暂停功能，一律手动控制</li><li>自定义变量，记录播放状态，false代表暂停，true代表播放</li><li>监听视频播放状态，在onpause事件中，将自定义变量改为false</li><li>在onplay事件中，检测自定义变量的状态，如果是暂停状态，则暂停播放</li><li>手动触发播放、暂停时，将自定义变量改为对应状态</li></ol></blockquote><h3 id="1-为什么去掉系统controls提供的播放、暂停按钮"><a href="#1-为什么去掉系统controls提供的播放、暂停按钮" class="headerlink" title="1. 为什么去掉系统controls提供的播放、暂停按钮"></a>1. 为什么去掉系统controls提供的播放、暂停按钮</h3><p>因为系统提供的播放、暂停按钮，不会触发自定义事件，不能手动改变自定义变量的状态，后续的播放、暂停功能都是通过自定义变量控制的</p><h3 id="2-为什么要监听视频播放、暂停状态"><a href="#2-为什么要监听视频播放、暂停状态" class="headerlink" title="2. 为什么要监听视频播放、暂停状态"></a>2. 为什么要监听视频播放、暂停状态</h3><p>其实主要是监听暂停状态，因为在蓝牙电话进入时，视频会自动暂停，此时将自定义变量改为false</p><h3 id="3-已经监听了状态，为什么还要自定义变量，接收状态"><a href="#3-已经监听了状态，为什么还要自定义变量，接收状态" class="headerlink" title="3. 已经监听了状态，为什么还要自定义变量，接收状态"></a>3. 已经监听了状态，为什么还要自定义变量，接收状态</h3><p>监听状态主要是判断当前是播放还是暂停，如果是播放转暂停，在蓝牙电话进入的时候会自动转，此时我们只需要在onpause里面将自定义变量改为false</p><p>此时如果蓝牙电话结束，现状是会自动续播（<code>即使在onpause监听里面手动触发了暂停，也是无效的，蓝牙结束后还是会自动续播</code><br>），触发onplay的监听，因此，我们需要在onplay的监听内部，判断下自定义变量的状态，前面也说到，只有手动触发播放的时候，才会将自定义变量改为true，现在是蓝牙结束后，自动触发，所以此时自定义变量仍未false</p><p>onplay监听中，检测到自定义变量为false时，就调用pause方法，进行手动暂停，实现蓝牙电话进入时自动暂停（<code>系统</code><br>），蓝牙电话结束后保持暂停状态（<code>判断+手动</code>）</p><p><strong><code>至于声音，是前端应用和安卓之间的沟通，安卓会提供抢夺焦点的回调，我们在回调内播放就会有声音。</code></strong></p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 车机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react基础</title>
      <link href="/2023/07/11/react-ji-chu/"/>
      <url>/2023/07/11/react-ji-chu/</url>
      
        <content type="html"><![CDATA[<h3 id="组件命名"><a href="#组件命名" class="headerlink" title="组件命名"></a>组件命名</h3><p><code>组件的名称必须以大写字母开头，否则它们将无法运行！</code></p><h3 id="组件return"><a href="#组件return" class="headerlink" title="组件return"></a>组件return</h3><p>如果你的标签和 return 关键字不在同一行，则必须把它包裹在一对括号中</p><img src="/2023/07/11/react-ji-chu/1.png" class="" title="return"><h3 id="use-client"><a href="#use-client" class="headerlink" title="use client"></a>use client</h3><p><a href="https://react.dev/reference/react/use-client">参考链接</a></p><h3 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h3><p><a href="https://zh-hans.react.dev/learn/responding-to-events">参考链接</a></p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>imagemogr2</title>
      <link href="/2023/06/20/imagemogr2/"/>
      <url>/2023/06/20/imagemogr2/</url>
      
        <content type="html"><![CDATA[<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="http://78re52.com1.z0.glb.clouddn.com/docs/v6/api/reference/fop/image/imagemogr2.html">参考链接</a></p><p><code>记录一次因为图片参数导致的图片不显示的问题</code></p><p>事情是这样的，由于之前接触的都是oss，知道在图片后面拼接参数可以利用oss服务对图片进行处理（不拼接参数也可以访问），但是<code>https://p0.pipi.cn/mmdb/fb73867151b5bfddd28ea3678d576e7d7b5da.jpg?imageMogr2/thumbnail/1246x1246%3E</code>这个链接去掉<code>?</code>后面的参数，页面显示报错400</p><img src="/2023/06/20/imagemogr2/1.png" class="" title="去掉参数后页面显示"><p>经过搜索后发现imagemogr2是一个图片处理程序，url中<code>imageMogr2/</code><br>后面的参数可以去掉（理解为不对图片做任何处理），但是<code>imageMogr2/</code>不能去掉，如果去掉就会导致400报错。</p><p><code>需要注意的是：如果原本的图片链接中没有imageMogr2/，那么这张图片就没有使用imageMogr2服务，手动拼接参数虽然不会报错，但是也不会进行图片处理，比如：http://e.hiphotos.baidu.com/image/pic/item/a1ec08fa513d2697e542494057fbb2fb4316d81e.jpg和http://e.hiphotos.baidu.com/image/pic/item/a1ec08fa513d2697e542494057fbb2fb4316d81e.jpg?imageMogr2/thumbnail/1246x1246%3E返回的图片是一样的</code></p><img src="/2023/06/20/imagemogr2/2.png" class="" title="a1ec08fa513d2697e542494057fbb2fb4316d81e.jpg"><img src="/2023/06/20/imagemogr2/3.png" class="" title="a1ec08fa513d2697e542494057fbb2fb4316d81e.jpg?imageMogr2&#x2F;thumbnail&#x2F;1246x1246%3E">]]></content>
      
      
      <categories>
          
          <category> 图片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue里面的sync</title>
      <link href="/2023/06/15/vue-li-mian-de-sync/"/>
      <url>/2023/06/15/vue-li-mian-de-sync/</url>
      
        <content type="html"><![CDATA[<p>vue中父组件是使用v-bind(缩写为:)给子组件传入参数，然后子组件通过prop属性接收该参数。此时我们可以给子组件传入一个函数，子组件通过调用传入的函数来改变父组件中参数的值。</p><h3 id="1、不使用sync"><a href="#1、不使用sync" class="headerlink" title="1、不使用sync"></a>1、不使用sync</h3><p><code>//父组件中通过@方法名来接收子组件传送来的数据</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>numParent<span class="token punctuation">"</span></span> <span class="token attr-name">@setNum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(res)=> numParent = res<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>child</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>//子组件通过调用函数来实现修改父组件的状态</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token function">changNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'setNum'</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、使用sync"><a href="#2、使用sync" class="headerlink" title="2、使用sync"></a>2、使用sync</h3><p><code>父组件</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">:num.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>numParent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>子组件</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//使用update：参数  的形式进行更新</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token function">changNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'update:num'</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>需要注意区分$emit和$on，$emit和$on也经常用于组件传值，但是他俩需要共同作用于一个公共的实例上，通常用一个空的 Vue 实例作为中央事件总线，如果没有公共实例，$emit和$on是不能通信的</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'play'</span><span class="token punctuation">,</span> <span class="token string">'参数'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'play'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>xxx<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>localstorage存储在什么地方</title>
      <link href="/2023/06/14/localstorage-cun-chu-zai-shi-me-di-fang/"/>
      <url>/2023/06/14/localstorage-cun-chu-zai-shi-me-di-fang/</url>
      
        <content type="html"><![CDATA[<p>只读的localStorage 属性允许你访问一个Document 源（origin）的对象 Storage；存储的数据将保存在浏览器会话中。localStorage 类似 sessionStorage，但其区别在于：存储在 localStorage 的数据可以长期保留；而当页面会话结束——也就是说，当页面被关闭时，存储在 sessionStorage 的数据会被清除。</p><p>应注意，无论数据存储在 localStorage 还是 sessionStorage ，它们都特定于页面的协议。</p><p>另外，localStorage 中的键值对总是以字符串的形式存储。 (需要注意，和 js 对象相比，键值对总是以字符串的形式存储意味着数值类型会自动转化为字符串类型).</p><h3 id="localstorage的存储地址（win10）"><a href="#localstorage的存储地址（win10）" class="headerlink" title="localstorage的存储地址（win10）"></a>localstorage的存储地址（win10）</h3><pre class="line-numbers language-none"><code class="language-none">C:\Users\WTCL\AppData\Local\Google\Chrome\User Data\Default\Local Storage\leveldb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="localstorage和cookie在iframe下的不同表现"><a href="#localstorage和cookie在iframe下的不同表现" class="headerlink" title="localstorage和cookie在iframe下的不同表现"></a>localstorage和cookie在iframe下的不同表现</h3>]]></content>
      
      
      <categories>
          
          <category> 文件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>css position</title>
      <link href="/2023/06/14/css-position/"/>
      <url>/2023/06/14/css-position/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/position">参考链接</a></p><img src="/2023/06/14/css-position/1.png" class="" title="css position"><h3 id="1、static"><a href="#1、static" class="headerlink" title="1、static"></a>1、static</h3><p>该关键字指定元素使用正常的布局行为，即元素在文档常规流中当前的布局位置。此时 top, right, bottom, left 和 z-index 属性无效。</p><h3 id="2、relative"><a href="#2、relative" class="headerlink" title="2、relative"></a>2、relative</h3><p>该关键字下，元素先放置在未添加定位时的位置，再在不改变页面布局的前提下调整元素位置（因此会在此元素未添加定位时所在位置留下空白）。position:relative 对 table-*-group, table-row, table-column, table-cell, table-caption 元素无效。</p><h3 id="3、absolute"><a href="#3、absolute" class="headerlink" title="3、absolute"></a>3、absolute</h3><p>元素会被移出正常文档流，并不为元素预留空间，通过指定元素相对于最近的非 static 定位祖先元素的偏移，来确定元素位置。绝对定位的元素可以设置外边距（margins），且不会与其他边距合并。</p><h3 id="4、fixed"><a href="#4、fixed" class="headerlink" title="4、fixed"></a>4、fixed</h3><p>元素会被移出正常文档流，并不为元素预留空间，而是通过指定元素相对于屏幕视口（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变。打印时，元素会出现在的每页的固定位置。fixed 属性会创建新的层叠上下文。当元素祖先的 transform、perspective、filter 或 backdrop-filter 属性非 none 时，容器由视口改为该祖先。</p><h3 id="5、sticky"><a href="#5、sticky" class="headerlink" title="5、sticky"></a>5、sticky</h3><p>元素根据正常文档流进行定位，然后相对它的最近滚动祖先（nearest scrolling ancestor）和 containing block（最近块级祖先 nearest block-level ancestor），包括 table-related 元素，基于 top、right、bottom 和 left 的值进行偏移。偏移值不会影响任何其他元素的位置。 该值总是创建一个新的层叠上下文（stacking context）。注意，一个 sticky 元素会“固定”在离它最近的一个拥有“滚动机制”的祖先上（当该祖先的 overflow 是 hidden、scroll、auto 或 overlay 时），即便这个祖先不是最近的真实可滚动祖先。这有效地抑制了任何“sticky”行为</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CommonJS、AMD、CMD规范</title>
      <link href="/2023/06/08/commonjs-amd-cmd-gui-fan/"/>
      <url>/2023/06/08/commonjs-amd-cmd-gui-fan/</url>
      
        <content type="html"><![CDATA[<p><code>文章转载自掘金</code> <a href="https://juejin.cn/post/6994814324548091940">参考链接</a></p><img src="/2023/06/08/commonjs-amd-cmd-gui-fan/1.png" class="" title="CommonJS、AMD、CMD规范">]]></content>
      
      
      <categories>
          
          <category> 规范 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>upload自定义文件上传</title>
      <link href="/2023/06/06/upload-zi-ding-yi-wen-jian-shang-chuan/"/>
      <url>/2023/06/06/upload-zi-ding-yi-wen-jian-shang-chuan/</url>
      
        <content type="html"><![CDATA[<h3 id="1、组件封装"><a href="#1、组件封装" class="headerlink" title="1、组件封装"></a>1、组件封装</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">// 组件封装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--本地导入弹窗--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showLocalImport<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>数据导入<span class="token punctuation">"</span></span> <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showLocalImport<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>localImportModal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>requirement<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>导入要求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>模板表头(点击预览)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 100px</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">:preview-src-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>srcList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-image</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnGroup<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnContainer<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-upload</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">:http-request</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadSectionFile<span class="token punctuation">"</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.xlsx<span class="token punctuation">"</span></span> <span class="token attr-name">:show-file-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>选择导入<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-upload</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取消 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--导入进度查询--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MaskContainer<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showProgressMask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-progress</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span> <span class="token attr-name">:percentage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>percentage<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Mask_progress<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-progress</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> uploadFile_1 <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/utils/uploadFile"</span><span class="token punctuation">;</span><span class="token comment">// import &#123;ImportProgressQuery&#125; from "@/utils/functionList";</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> getProcess <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/utils/function"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"ImportManifestIndex_id"</span><span class="token punctuation">,</span><span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">showLocalImport</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">srcList</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">uploadURL</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">projectId</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">percentage</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">showProgressMask</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 自定义上传方法</span><span class="token function">uploadSectionFile</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$loading</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">lock</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">"文件上传中"</span><span class="token punctuation">,</span><span class="token literal-property property">spinner</span><span class="token operator">:</span> <span class="token string">"el-icon-loading"</span><span class="token punctuation">,</span><span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">"rgba(0, 0, 0, 0.7)"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">uploadFile_1</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>uploadURL<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>projectId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>loading<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>transactionId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>loading<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showProgressMask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">getProcess</span><span class="token punctuation">(</span><span class="token string">"/import/progress"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">transactionId</span><span class="token operator">:</span> res<span class="token punctuation">.</span>transactionId<span class="token punctuation">,</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data_</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>data_<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>percentage <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data_<span class="token punctuation">.</span>complete <span class="token operator">/</span> data_<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>percentage<span class="token punctuation">,</span> <span class="token string">"this.percentage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>percentage <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"完毕"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"导入成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"ImportSuccessful"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showProgressMask <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data_<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> data_<span class="token punctuation">.</span>complete <span class="token operator">==</span> data_<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>percentage <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"导入成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"ImportSuccessful"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showProgressMask <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"导入失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showProgressMask <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"ImportSuccessful"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err_</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>loading<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// console.log(this.type)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"update:show-local-import"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token function">showProgressMask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>showProgressMask<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>percentage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.MaskContainer</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span> 1000<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.aui-wrapper .el-upload--text</span> <span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、组件使用"><a href="#2、组件使用" class="headerlink" title="2、组件使用"></a>2、组件使用</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImportManifestIndex_id</span><span class="token attr-name">:show-local-import.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showLocalImport<span class="token punctuation">"</span></span><span class="token attr-name">:url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token attr-name">:src-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[url]<span class="token punctuation">"</span></span><span class="token attr-name">:type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span><span class="token attr-name">:upload-u-r-l</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadUrl<span class="token punctuation">"</span></span><span class="token attr-name">:project-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>projectId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>1.文件为excel xlsx 文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>2.清单列表默认在第一个sheet页 或者清单sheet名称为“功能清单” 否则不可识别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>3.清单列表头最多为2层，其中功能lv1, lv2, lv3 和功能类编号 不可缺失<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>4.功能类编号 列数据要唯一 有序 并按照升序排列<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>5.功能lv1, lv2, lv3 数据列每行只可以1项有数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>6.每一个功能的父级都可以追溯到1级功能<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>7.在同一个lv1 下， 功能名称不可重复<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ImportManifestIndex_id</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、上传方法"><a href="#3、上传方法" class="headerlink" title="3、上传方法"></a>3、上传方法</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 上传方法</span><span class="token keyword">function</span> <span class="token function">uploadFile_1</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> url_<span class="token punctuation">,</span> projectId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> uploadData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// let params = &#123;&#125;</span><span class="token comment">// 后端接口要求传输的参数是file和项目id，用FormData进行添加</span>uploadData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>uploadData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"vehicleProjectId"</span><span class="token punctuation">,</span> projectId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//如果不需要项目id，则这行可以注释</span><span class="token keyword">let</span> headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"Content-Type"</span><span class="token operator">:</span> <span class="token string">"multipart/form-data"</span><span class="token punctuation">,</span><span class="token string-property property">"Accept-Language"</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"language"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">"zh-CN"</span><span class="token punctuation">,</span><span class="token literal-property property">token</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"tenant_token"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>token<span class="token punctuation">,</span><span class="token literal-property property">tenant_code</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"tenant_code"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token literal-property property">userId</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token literal-property property">deptId</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"deptId"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token literal-property property">appId</span><span class="token operator">:</span> window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">[</span><span class="token string">"sysId"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> <span class="token string">"headers"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">[</span><span class="token string">"apiURL"</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url_<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_NODE_ENV</span><span class="token punctuation">,</span> <span class="token string">"process.env.VUE_APP_NODE_ENV"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// params = &#123;</span><span class="token comment">//   file: uploadData,</span><span class="token comment">//   vehicleProjectId: projectId</span><span class="token comment">// &#125;</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> uploadData<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">headers</span><span class="token operator">:</span> headers <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"选择导入"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token string">"0000"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"选择导入"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">"导入失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> element </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端跨页面通信</title>
      <link href="/2023/06/05/qian-duan-kua-ye-mian-tong-xin/"/>
      <url>/2023/06/05/qian-duan-kua-ye-mian-tong-xin/</url>
      
        <content type="html"><![CDATA[<h3 id="1、BroadcastChannel"><a href="#1、BroadcastChannel" class="headerlink" title="1、BroadcastChannel"></a>1、BroadcastChannel</h3><p>BroadcastChannel 接口代理了一个命名频道，可以让指定 origin 下的任意 browsing context 来订阅它。它允许同源的不同浏览器窗口，Tab页，frame 或者 iframe 下的不同文档之间相互通信。通过触发一个 message 事件，消息可以广播到所有监听了该频道的BroadcastChannel 对象。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/BroadcastChannel">参考链接</a></p><img src="/2023/06/05/qian-duan-kua-ye-mian-tong-xin/1.png" class="" title="BroadcastChannel"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>        <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>index<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>发送消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">closeBroadcastChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>关闭通道<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">let</span> base <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">bc</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">initBroadcast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    base<span class="token punctuation">.</span>bc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BroadcastChannel</span><span class="token punctuation">(</span><span class="token string">"mode"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    base<span class="token punctuation">.</span>bc<span class="token punctuation">.</span>onmessage <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'------------'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'page-city===onmessage:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"接收广播"</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>      base<span class="token punctuation">.</span>mode <span class="token operator">=</span> e<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"sendMessage**********"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"广播发送"</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>    base<span class="token punctuation">.</span>bc<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">mode</span><span class="token operator">:</span> base<span class="token punctuation">.</span>mode<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">closeBroadcastChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'通道已关闭'</span><span class="token punctuation">)</span>    base<span class="token punctuation">.</span>bc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function">initBroadcast</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2023/06/05/qian-duan-kua-ye-mian-tong-xin/2.png" class="" title="BroadcastChannel"><img src="/2023/06/05/qian-duan-kua-ye-mian-tong-xin/3.png" class="" title="BroadcastChannel"><img src="/2023/06/05/qian-duan-kua-ye-mian-tong-xin/4.png" class="" title="BroadcastChannel"><img src="/2023/06/05/qian-duan-kua-ye-mian-tong-xin/5.png" class="" title="BroadcastChannel"><h3 id="2、ServiceWorker"><a href="#2、ServiceWorker" class="headerlink" title="2、ServiceWorker"></a>2、ServiceWorker</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/ServiceWorker">参考链接</a></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次设备像素比造成的事故</title>
      <link href="/2023/06/05/ji-lu-yi-ci-she-bei-xiang-su-bi-zao-cheng-de-shi-gu/"/>
      <url>/2023/06/05/ji-lu-yi-ci-she-bei-xiang-su-bi-zao-cheng-de-shi-gu/</url>
      
        <content type="html"><![CDATA[<p>事情的起因是这样：<br><code>项目是加载在android的webview上面，由于andriod端更改了dpi，由160改成了200，造成pixelRatio变成了1.25，而项目内使用的css单位是Px进行的适配，造成整体页面也被放大了1.25倍，导致UI溢出。</code></p><p><strong>解决办法：直接将页面缩放为原来的0.8倍，发布到项目上与1.25倍相乘，正好得到原来的1倍值</strong></p><img src="/2023/06/05/ji-lu-yi-ci-she-bei-xiang-su-bi-zao-cheng-de-shi-gu/2.png" class="" title="日志显示"><p>由此引发的思考：</p><img src="/2023/06/05/ji-lu-yi-ci-she-bei-xiang-su-bi-zao-cheng-de-shi-gu/1.png" class="" title="css与实际像素的关系"><h3 id="1、px"><a href="#1、px" class="headerlink" title="1、px"></a>1、px</h3><p>PX(pixel):<br>即传统计算机语言中描述的像素，在Android则代表绝对像素。</p><p>之所以Android中不推荐使用这种单位，正是因为不同生产厂商，不同品牌，不同屏幕的设备，其分辨率亦不一。<br>举例来说，我们现在将某个Button的width设为160px，则会出现如下情况：</p><blockquote><p>在分辨率为“320宽”的设备里，该按钮显示占屏幕宽度一半；<br>在分辨率为“640宽”的设备里，该按钮显示占屏幕宽度的四分之一；</p></blockquote><h3 id="2、dp"><a href="#2、dp" class="headerlink" title="2、dp"></a>2、dp</h3><p>与我们之前谈到的绝对密度“px”对应，Android中引入的“dp”代表的则是“设备独立像素”。<br><code>该单位是为支持WVGA、HVGA和QVGA而使用的，其不再依赖像素本身，而是和屏幕密度相关。</code><br>在Android当中规定：在屏幕密度为“160dpi”的情况下，则刚好“1dp = 1px”。<br>注：当屏幕密度为“320dpi”时，则“1dp = 2px”，以此类推…….<br>也正是因此，让我们得以保证了：控件在不同密度的屏幕上显示一致，既完成屏幕适配。<br>使用场景：<br>让我们回到上面说到的使用px造成的控件显示问题，此时我们将使用新的单位“dp”。于是：</p><blockquote><p>在分辨率320<em>480（既dpi为160）的设备下，则160dp等价于160px，按钮占屏幕宽的一半。<br>在分辨率640</em>960（既dpi为320）的设备下，则160dp等价于320px，按钮依然占屏幕宽的一半。</p></blockquote><h3 id="3、dp与px之间的换算关系"><a href="#3、dp与px之间的换算关系" class="headerlink" title="3、dp与px之间的换算关系"></a>3、dp与px之间的换算关系</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">px <span class="token operator">=</span> dp <span class="token operator">*</span> <span class="token punctuation">(</span>dpi <span class="token operator">/</span> <span class="token number">160</span><span class="token punctuation">)</span>dp <span class="token operator">=</span> px <span class="token operator">*</span> <span class="token punctuation">(</span>dpi <span class="token operator">/</span> <span class="token number">160</span><span class="token punctuation">)</span># dp与px之间的转换公式，dpi随设备分辨率而变化<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/2023/06/05/ji-lu-yi-ci-she-bei-xiang-su-bi-zao-cheng-de-shi-gu/3.png" class="" title="android标准dpi"><h4 id="3-1-注意事项"><a href="#3-1-注意事项" class="headerlink" title="3.1 注意事项"></a>3.1 注意事项</h4><p><code>更改dpi只影响Px为单位的css布局，vh/vw是根据屏幕高/宽度来的，不受dpi影响</code></p><h3 id="4、辅助解释"><a href="#4、辅助解释" class="headerlink" title="4、辅助解释"></a>4、辅助解释</h3><p>现在放几张github上的解释，辅助理解</p><img src="/2023/06/05/ji-lu-yi-ci-she-bei-xiang-su-bi-zao-cheng-de-shi-gu/6.png" class="" title="android标准dpi"><img src="/2023/06/05/ji-lu-yi-ci-she-bei-xiang-su-bi-zao-cheng-de-shi-gu/5.png" class="" title="android标准dpi">]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> 车机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo一次全局替换</title>
      <link href="/2023/06/02/hexo-yi-ci-quan-ju-ti-huan/"/>
      <url>/2023/06/02/hexo-yi-ci-quan-ju-ti-huan/</url>
      
        <content type="html"><![CDATA[<p>hexo内引入图片使用<code>![]()</code>的方式，但是在hexo里，会有一个与文档title同名的目录（如果title没改的话）,<br>在hexo里()内不用写目录，直接写图片名称+后缀即可。<br>以本文档为例，名为“hexo一次全局替换”，图片链接就可以写为<code>![](1.png)</code>，在hexo的服务器与部署服务器<br>上就能展示，但是本地显示的是图二右边破损的图标<br><img src="1.png" alt="图一、hexo默认写法，不兼容本地"></p><img src="/2023/06/02/hexo-yi-ci-quan-ju-ti-huan/2.png" class="" title="图二、hexo写法，兼容本地"><p>所以为兼容本地和服务器显示，应写为<code>![](a/2.png) a代表的就是同名文件夹</code></p><p><strong><code>但是由于该项目历史文档较多，所以写了一个node进行自动替换，代码如下</code></strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> pathName <span class="token operator">=</span> <span class="token string">'_posts'</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>pathName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">'utf8'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'err'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">title.*</span><span class="token regex-delimiter">/</span></span>      <span class="token keyword">let</span> title <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>title<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        title <span class="token operator">=</span> title<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'title: '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> imgPath <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">]\((.*)\)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">]\(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/$1\)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>pathName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> imgPath<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err1<span class="token punctuation">,</span> data1</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>err1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'err1'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序父组件监听子组件值的变化</title>
      <link href="/2023/06/02/wei-xin-xiao-cheng-xu-fu-zu-jian-jian-ting-zi-zu-jian-zhi-de-bian-hua/"/>
      <url>/2023/06/02/wei-xin-xiao-cheng-xu-fu-zu-jian-jian-ting-zi-zu-jian-zhi-de-bian-hua/</url>
      
        <content type="html"><![CDATA[<p><code>微信小程序组件间通信可分为 3 种，本文值介绍第 2 种---“事件”</code></p><img src="/2023/06/02/wei-xin-xiao-cheng-xu-fu-zu-jian-jian-ting-zi-zu-jian-zhi-de-bian-hua/3.png" class="" title="组件间通信"><p>具体可参考<a href="%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%88%B6%E7%BB%84%E4%BB%B6%E7%9B%91%E5%90%AC%E5%AD%90%E7%BB%84%E4%BB%B6%E5%80%BC%E7%9A%84%E5%8F%98%E5%8C%96/https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html">官方文档</a></p><img src="/2023/06/02/wei-xin-xiao-cheng-xu-fu-zu-jian-jian-ting-zi-zu-jian-zhi-de-bian-hua/2.png" class="" title="事件通信"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 子组件</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">"showCode"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">isShowCode</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/2023/06/02/wei-xin-xiao-cheng-xu-fu-zu-jian-jian-ting-zi-zu-jian-zhi-de-bian-hua/1.png" class=""><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父组件</span><span class="token comment">// 父组件内bind 子组件注册的字符串（showCode），并自定义一个方法，来处理相应逻辑</span><span class="token comment">// 此处是onGetValue</span> <span class="token operator">&lt;</span>vehicle<span class="token operator">-</span>speed isWhole<span class="token operator">=</span><span class="token string">"&#123;&#123;true&#125;&#125;"</span> isLockText<span class="token operator">=</span><span class="token string">"&#123;&#123;false&#125;&#125;"</span> showTextLock<span class="token operator">=</span><span class="token string">"&#123;&#123;false&#125;&#125;"</span> <span class="token literal-property property">bind</span><span class="token operator">:</span>showCode<span class="token operator">=</span><span class="token string">"onGetValue"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>vehicle<span class="token operator">-</span>speed<span class="token operator">></span><span class="token comment">//  父组件js</span><span class="token comment">// 通过触发父组件自定义的方法，进行逻辑处理</span> <span class="token function">onGetValue</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>isShowCode<span class="token punctuation">,</span> <span class="token string">'监听走行限制弹窗关闭'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">isShowCode</span><span class="token operator">:</span> e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>isShowCode    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webstorm设置默认终端</title>
      <link href="/2023/05/29/webstorm-she-zhi-mo-ren-zhong-duan/"/>
      <url>/2023/05/29/webstorm-she-zhi-mo-ren-zhong-duan/</url>
      
        <content type="html"><![CDATA[<h3 id="webstorm设置默认终端"><a href="#webstorm设置默认终端" class="headerlink" title="webstorm设置默认终端"></a>webstorm设置默认终端</h3><img src="/2023/05/29/webstorm-she-zhi-mo-ren-zhong-duan/webstorm%E7%BB%88%E7%AB%AF.png" class="" title="webstorm设置默认终端">]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器body背景色</title>
      <link href="/2023/05/25/liu-lan-qi-body-bei-jing-se/"/>
      <url>/2023/05/25/liu-lan-qi-body-bei-jing-se/</url>
      
        <content type="html"><![CDATA[<p>我们给 body 设置背景色，实际我们看见的未必是 body 上的背景色：</p><ol><li>当 html 标签没有设置背景色时，我们看见的是作用在浏览器画布上的背景色，不是 body 上的；</li><li>当 html 标签被设置了背景色时，我们看见的是真正作用在 body 上的背景色。</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=200, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">html</span> <span class="token punctuation">&#123;</span><span class="token comment">/* background: #000; */</span><span class="token punctuation">&#125;</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 50vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container</span> <span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.item</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2023/05/25/liu-lan-qi-body-bei-jing-se/body.png" class="" title="没给html设置背景色"><p><code>虽然代码已经给body设置了宽高，也设置了背景色，结果却是：宽高已经改变了，背景色却还是全屏显示</code><br><code>解决的方法是：给html也设置一个背景色</code><br><code>原因是：如果不给html设置背景色，浏览器会将body作为自身的背景色，总是铺满可视区域</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=200, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">html</span> <span class="token punctuation">&#123;</span><span class="token comment">/* 给html设置黑色背景 */</span><span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 50vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container</span> <span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.item</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2023/05/25/liu-lan-qi-body-bei-jing-se/body1.png" class="" title="给html设置背景色">]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js正则</title>
      <link href="/2023/05/18/js-zheng-ze/"/>
      <url>/2023/05/18/js-zheng-ze/</url>
      
        <content type="html"><![CDATA[<p><code>正则内保存匹配的对象，进行替换，如：将15vh内的数字替换成calc(var(--heightsize) *数字，并把vh去掉</code></p><p><code>(\d+\.\d+|\d+)就是将匹配到的数字做暂存，在表达式内用$1进行引用</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token string">"margin-top: 15vh;margin-top: 5vh;margin-top: 1111.555vh;"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> reg <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\d+\.\d+|\d+)vh</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"calc(var(--heightsize) * $1)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">"reg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><img src="/2023/05/18/js-zheng-ze/%E6%AD%A3%E5%88%99.png" class="" title="正则">]]></content>
      
      
      <categories>
          
          <category> 正则 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断浏览器/webview进入前后台</title>
      <link href="/2023/05/16/pan-duan-liu-lan-qi-webview-jin-ru-qian-hou-tai/"/>
      <url>/2023/05/16/pan-duan-liu-lan-qi-webview-jin-ru-qian-hou-tai/</url>
      
        <content type="html"><![CDATA[<p>当其选项卡的内容变得可见或被隐藏时，会在文档上触发 visibilitychange (能见度更改) 事件。</p><blockquote><p>出于兼容性原因，请确保使用 document.addEventListener 而不是 window.addEventListener 来注册回调。Safari &lt;14.0 仅支持前者。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">// 浏览器、webview进入前台的时候</span><span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">==</span> <span class="token string">"visible"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"显示"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 浏览器、webview进入后台的时候</span><span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">==</span> <span class="token string">"hidden"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"隐藏"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 奇淫技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终端输出乱码问题</title>
      <link href="/2023/03/27/zhong-duan-shu-chu-luan-ma-wen-ti/"/>
      <url>/2023/03/27/zhong-duan-shu-chu-luan-ma-wen-ti/</url>
      
        <content type="html"><![CDATA[<img src="/2023/03/27/zhong-duan-shu-chu-luan-ma-wen-ti/11.png" class="" title="终端输出乱码问题"><img src="/2023/03/27/zhong-duan-shu-chu-luan-ma-wen-ti/12.png" class="" title="终端输出结果"><p>终端默认936，如果出现乱码，我们可以通过<code>chcp 65001</code>来修复乱码。</p><p>如果关闭终端后，再次打开又出现乱码，我们可以将这个命令添加在package文件内</p><img src="/2023/03/27/zhong-duan-shu-chu-luan-ma-wen-ti/13.png" class="" title="package.json">]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> 终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端错误监控</title>
      <link href="/2023/03/01/qian-duan-cuo-wu-jian-kong/"/>
      <url>/2023/03/01/qian-duan-cuo-wu-jian-kong/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span>conf <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">traceid</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token literal-property property">errorList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">timeList</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">httpts</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"log/jsError"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> errordefo <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">t</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">//  时间戳</span><span class="token comment">// n: 'js',</span><span class="token literal-property property">errMsg</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token literal-property property">errMsg2</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token comment">// data: &#123;&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>window<span class="token punctuation">.</span>logp<span class="token punctuation">.</span>reportLog2 <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>logp<span class="token punctuation">.</span>reportLog<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> defaults <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> errordefo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"error"</span> <span class="token keyword">in</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>defaults<span class="token punctuation">.</span>error <span class="token operator">=</span> e<span class="token punctuation">.</span>error<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>error <span class="token operator">=</span> e<span class="token punctuation">.</span>error<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>errMsg <span class="token operator">=</span> e<span class="token punctuation">.</span>error <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>error<span class="token punctuation">.</span>stack<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>filename <span class="token operator">=</span> e<span class="token punctuation">.</span>filename<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>message <span class="token operator">=</span> e<span class="token punctuation">.</span>message<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>line <span class="token operator">=</span> e<span class="token punctuation">.</span>lineno<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>href <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token comment">// 资源加载错误</span>defaults<span class="token punctuation">.</span>n <span class="token operator">=</span> <span class="token string">"resource"</span><span class="token punctuation">;</span><span class="token comment">// defaults.target = e.target.localName</span>defaults<span class="token punctuation">.</span>errMsg <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>localName <span class="token operator">+</span> <span class="token string">" is load error"</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>resourceUrl <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>href <span class="token operator">||</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>currentSrc <span class="token operator">||</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>src<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>href <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>baseURI<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>defaults<span class="token punctuation">.</span>type <span class="token operator">=</span> e<span class="token punctuation">.</span>type<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>t <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>func <span class="token operator">=</span> <span class="token string">"addEventListener-error"</span><span class="token punctuation">;</span><span class="token comment">// defaults.href = e.target.baseURI</span>window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>logp<span class="token punctuation">.</span><span class="token function">reportLog2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// js  onerror函数会在页面发生js错误时被调用  //可以拿到错误的文件名、行号、列号等信息</span>window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">errMsg<span class="token punctuation">,</span> _url<span class="token punctuation">,</span> line<span class="token punctuation">,</span> col<span class="token punctuation">,</span> error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> defaults <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> errordefo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>defaults<span class="token punctuation">.</span>func <span class="token operator">=</span> <span class="token string">"window.onerror"</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>resourceUrl <span class="token operator">=</span> _url<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>error <span class="token operator">=</span> error<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>errMsg <span class="token operator">=</span> error <span class="token operator">&amp;&amp;</span> error<span class="token punctuation">.</span>stack <span class="token operator">?</span> error<span class="token punctuation">.</span>stack<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> errMsg<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>line <span class="token operator">=</span> line<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>col <span class="token operator">=</span> col <span class="token operator">||</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>event <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>event<span class="token punctuation">.</span>errorCharacter<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>t <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>logp<span class="token punctuation">.</span><span class="token function">reportLog2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"getInfo===reason"</span><span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> error <span class="token operator">=</span> reason<span class="token punctuation">;</span><span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token punctuation">(</span>error <span class="token operator">&amp;&amp;</span> error<span class="token punctuation">.</span>message <span class="token operator">&amp;&amp;</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">(</span>error <span class="token operator">&amp;&amp;</span> error<span class="token punctuation">.</span>stack<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">let</span> resourceUrl<span class="token punctuation">,</span> col<span class="token punctuation">,</span> line<span class="token punctuation">;</span><span class="token keyword">let</span> errs <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\(.+?\)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>errs <span class="token operator">&amp;&amp;</span> errs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> errs <span class="token operator">=</span> errs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>errs <span class="token operator">=</span> errs<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\w.+[js|html]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">$1</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>resourceUrl <span class="token operator">=</span> $1<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>errs <span class="token operator">=</span> errs<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>errs <span class="token operator">&amp;&amp;</span> errs<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> line <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>errs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>col <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>errs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span>resourceUrl<span class="token punctuation">,</span>col<span class="token punctuation">,</span>line<span class="token punctuation">,</span>msg<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// js运行时报错</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"unhandledrejection"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"unhandledrejection---->"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> defaults <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> errordefo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"reason"</span> <span class="token keyword">in</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>reason<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>defaults<span class="token punctuation">.</span>errMsg <span class="token operator">=</span> e<span class="token punctuation">.</span>reason<span class="token punctuation">.</span>message<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>reason<span class="token punctuation">.</span>stack<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>defaults<span class="token punctuation">.</span>stack <span class="token operator">=</span> e<span class="token punctuation">.</span>reason<span class="token punctuation">.</span>stack<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>defaults<span class="token punctuation">.</span>href <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>type <span class="token operator">=</span> e<span class="token punctuation">.</span>type<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>func <span class="token operator">=</span> <span class="token string">"unhandledrejection"</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>t <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>logp<span class="token punctuation">.</span><span class="token function">reportLog2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 重写console.error</span><span class="token keyword">const</span> oldError <span class="token operator">=</span> console<span class="token punctuation">.</span>error<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function-variable function">error</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> defaults <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> errordefo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>defaults<span class="token punctuation">.</span>errMsg <span class="token operator">=</span> e<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>func <span class="token operator">=</span> <span class="token string">"console.error"</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">"GET"</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>data <span class="token operator">=</span> location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>logp<span class="token punctuation">.</span><span class="token function">reportLog2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">oldError</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>console<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> oldLog <span class="token operator">=</span> console<span class="token punctuation">.</span>log<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> p<span class="token punctuation">,</span> g</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> defaults <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> errordefo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e <span class="token operator">=</span> <span class="token keyword">typeof</span> e <span class="token operator">==</span> <span class="token string">"String"</span> <span class="token operator">?</span> e <span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>p <span class="token operator">=</span> p <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> p <span class="token operator">==</span> <span class="token string">"String"</span> <span class="token operator">?</span> p <span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">;</span>g <span class="token operator">=</span> p <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> g <span class="token operator">==</span> <span class="token string">"String"</span> <span class="token operator">?</span> p <span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>errMsg <span class="token operator">=</span> e <span class="token operator">+</span> p <span class="token operator">+</span> g<span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>func <span class="token operator">=</span> <span class="token string">"console.log"</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>t <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>defaults<span class="token punctuation">.</span>href <span class="token operator">=</span> location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>window<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>errorList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">oldLog</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>console<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> willdo <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">const</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>willdo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>willdo <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>willdo <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>_this<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span> _error <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端打包下载</title>
      <link href="/2023/02/20/qian-duan-da-bao-xia-zai/"/>
      <url>/2023/02/20/qian-duan-da-bao-xia-zai/</url>
      
        <content type="html"><![CDATA[<p><code>本文代码以图片作为示例，进行文件批量下载</code></p><blockquote><p>安装 axios，FileSaver，JSZip 三个插件<br>初始化 new JSZip<br>获取所有图片链接，并根据链接利用 axios 进行数据获取，blob 格式<br>每条数据获取成功后，利用 zip.file 保存起来，参数是文件名、文件数据，数据格式<br>所有数据都获取成功后，利用 zip.generateAsync 生成最终数据<br>数据生成成功后，利用 FileSaver.saveAs 保存数据，并设置压缩包名称</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">import</span> FileSaver <span class="token keyword">from</span> <span class="token string">'file-saver'</span><span class="token keyword">import</span> JSZip <span class="token keyword">from</span> <span class="token string">'jszip'</span><span class="token function-variable function">downAll</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span>            <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">let</span> zip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSZip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> downLinkArr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.downLink'</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            downLinkArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>href<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">decodeURI</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token keyword">let</span> item_ <span class="token operator">=</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token keyword">let</span> name <span class="token operator">=</span> item_<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>                <span class="token keyword">let</span> name_ <span class="token operator">=</span> name<span class="token punctuation">[</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name_<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> promise <span class="token operator">=</span> that<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    zip<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name_<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">binary</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'下载错误，请重新下载'</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                promises<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                zip<span class="token punctuation">.</span><span class="token function">generateAsync</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'blob'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    FileSaver<span class="token punctuation">.</span><span class="token function">saveAs</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'下载错误，请重新下载~'</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>                    <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">'blob'</span><span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                        <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载 </tag>
            
            <tag> 打包下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron项目关闭跨域</title>
      <link href="/2023/02/16/electron-xiang-mu-guan-bi-kua-yu/"/>
      <url>/2023/02/16/electron-xiang-mu-guan-bi-kua-yu/</url>
      
        <content type="html"><![CDATA[<p><code>在创建 electron 项目的时候，在 package.json 文件内指定入口文件是 background.js（任何名称都可以，确保引用正确就可以）</code></p><img src="/2023/02/16/electron-xiang-mu-guan-bi-kua-yu/1.png" class="" title="electron项目关闭跨域">]]></content>
      
      
      <categories>
          
          <category> electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron项目vue字体资源加载错误</title>
      <link href="/2023/02/16/electron-xiang-mu-vue-zi-ti-zi-yuan-jia-zai-cuo-wu/"/>
      <url>/2023/02/16/electron-xiang-mu-vue-zi-ti-zi-yuan-jia-zai-cuo-wu/</url>
      
        <content type="html"><![CDATA[<p><code>electron + Vue 项目运行的时候，一切正常。使用 electronBuilder打包后，Vue的字体资源会加载错误，解决方法如下：</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//vue.config.js</span><span class="token literal-property property">pluginOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//electronBuilder</span>        <span class="token literal-property property">electronBuilder</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">customFileProtocol</span><span class="token operator">:</span> <span class="token string">"./"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2023/02/16/electron-xiang-mu-vue-zi-ti-zi-yuan-jia-zai-cuo-wu/1.png" class="" title="electron项目vue字体资源加载错误">]]></content>
      
      
      <categories>
          
          <category> electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue代理</title>
      <link href="/2023/02/16/vue-dai-li/"/>
      <url>/2023/02/16/vue-dai-li/</url>
      
        <content type="html"><![CDATA[<img src="/2023/02/16/vue-dai-li/1.png" class="" title="vue代理"><p><code>vue-cli-service serve其实是开了一个node服务器，请求/api/bbb的时候，会被中转到https://aaa/bbb，简单理解就是根据vue.config.js的配置将/api替换为&#39;&#39;</code></p><h3 id="1-vue-config-js-设置"><a href="#1-vue-config-js-设置" class="headerlink" title="1. vue.config.js 设置"></a>1. vue.config.js 设置</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// vue.config.js</span><span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token string-property property">"/api"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">"https://aaa/"</span><span class="token punctuation">,</span>                <span class="token literal-property property">secure</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token string-property property">"^/api"</span><span class="token operator">:</span> <span class="token string">""</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-页面内调用"><a href="#2-页面内调用" class="headerlink" title="2. 页面内调用"></a>2. 页面内调用</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"/api/bbb"</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token comment">// axios.post('https://tinypng.com/web/shrink', file, &#123;</span><span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token string-property property">"content-type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">onUploadProgress</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">ee</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> progress <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ee<span class="token punctuation">.</span>loaded <span class="token operator">/</span> ee<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>item<span class="token punctuation">.</span>uid <span class="token operator">==</span> uid <span class="token operator">?</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>progress <span class="token operator">=</span> progress<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">onDownloadProgress</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>output<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> <span class="token punctuation">&#123;</span> url <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>output<span class="token punctuation">;</span><span class="token keyword">let</span> uid <span class="token operator">=</span> res<span class="token punctuation">.</span>config<span class="token punctuation">.</span>data<span class="token punctuation">.</span>uid<span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">size</span><span class="token operator">:</span> oldSize <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>input<span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">size</span><span class="token operator">:</span> newSize <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>output<span class="token punctuation">;</span><span class="token comment">// console.log(((oldSize - newSize) / oldSize * 100)</span><span class="token keyword">let</span> radio <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>oldSize <span class="token operator">-</span> newSize<span class="token punctuation">)</span> <span class="token operator">/</span> oldSize<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>item<span class="token punctuation">.</span>uid <span class="token operator">==</span> uid <span class="token operator">?</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>downLink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">;</span>item<span class="token punctuation">.</span>uid <span class="token operator">==</span> uid <span class="token operator">?</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>radio <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>radio<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Http缓存</title>
      <link href="/2023/02/03/http-huan-cun/"/>
      <url>/2023/02/03/http-huan-cun/</url>
      
        <content type="html"><![CDATA[<img src="/2023/02/03/http-huan-cun/1.png" class="" title="http缓存"><h2 id="1、缓存"><a href="#1、缓存" class="headerlink" title="1、缓存"></a>1、缓存</h2><h3 id="1-1-为什么需要缓存"><a href="#1-1-为什么需要缓存" class="headerlink" title="1.1 为什么需要缓存"></a>1.1 为什么需要缓存</h3><p>服务器需要处理 http 的请求，并且 http 去传输数据，需要带宽。而我们缓存，就是为了让服务器不去处理这个请求，客户端也可以拿到数据。</p><h3 id="1-2-什么资源需要缓存"><a href="#1-2-什么资源需要缓存" class="headerlink" title="1.2 什么资源需要缓存"></a>1.2 什么资源需要缓存</h3><blockquote><p>我们的缓存主要是针对 html,css,img 等静态资源，常规情况下，我们不会去缓存一些动态资源，因为缓存动态资源的话，数据的实时性就不会不太好，所以我们一般都只会去缓存一些不太容易被改变的静态资源。</p></blockquote><h3 id="1-3-缓存优缺点"><a href="#1-3-缓存优缺点" class="headerlink" title="1.3 缓存优缺点"></a>1.3 缓存优缺点</h3><p><code>优点</code></p><ul><li>减少不必要的网络传输，节约宽带</li><li>更快的加载页面</li><li>减少服务器负载，避免服务器过载的情况出现</li></ul><p><code>缺点</code></p><ul><li>占内存</li></ul><h2 id="2、Http-缓存"><a href="#2、Http-缓存" class="headerlink" title="2、Http 缓存"></a>2、Http 缓存</h2><img src="/2023/02/03/http-huan-cun/2.png" class="" title="Http 缓存流程图"><h3 id="2-1-强制缓存（简称强缓存）"><a href="#2-1-强制缓存（简称强缓存）" class="headerlink" title="2.1 强制缓存（简称强缓存）"></a>2.1 强制缓存（简称强缓存）</h3><p>从强制缓存的角度出发，判断浏览器请求的目标资源是否有效命中，如果命中，则可以直接从内存（硬盘）中读取目标资源，无需与服务器做任何通讯。</p><h4 id="2-1-1-基于-Expires-字段实现的强缓存"><a href="#2-1-1-基于-Expires-字段实现的强缓存" class="headerlink" title="2.1.1 基于 Expires 字段实现的强缓存"></a>2.1.1 基于 Expires 字段实现的强缓存</h4><p>Expires 可以设置资源的过期时间（本地时间），如果请求在资源有效期内，直接从本地读取，反之，则重新在服务器拉取。</p><p>比如说将某一资源设置响应头为:Expires:new Date(“2022-7-30 23:59:59”)；<br>那么，该资源在 2022-7-30 23:59:59 之前，都会去本地的磁盘（或内存）中读取，不会去服务器请求。</p><p><strong><code>Expires 已经被废弃了，不是强缓存的首选，另外，Expires 过度依赖本地时间，如果本地与服务器时间不同步，就会出现资源无法被缓存或者资源永远被缓存的情况。所以，Expires 字段几乎不被使用了。现在的项目中，我们并不推荐使用 Expires，强缓存功能通常使用 cache-control 字段来代替 Expires 字段</code></strong></p><h4 id="2-1-2-基于-Cache-control-实现的强缓存（代替-Expires-的强缓存实现方法）"><a href="#2-1-2-基于-Cache-control-实现的强缓存（代替-Expires-的强缓存实现方法）" class="headerlink" title="2.1.2 基于 Cache-control 实现的强缓存（代替 Expires 的强缓存实现方法）"></a>2.1.2 基于 Cache-control 实现的强缓存（代替 Expires 的强缓存实现方法）</h4><p><code>Cache-control完美解决了Expires本地时间和服务器时间不同步的问题。是当下的项目中实现强缓存的最常规方法</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//往响应头中写入需要缓存的时间</span>res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"Cache-Control"</span><span class="token operator">:</span> <span class="token string">"max-age=10"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><img src="/2023/02/03/http-huan-cun/3.jpg" class=""><ul><li>no-cache 的意思是强制进行协商缓存。如果某一资源的 Cache-control 中设置了 no-cache，那么该资源会直接跳过强缓存的校验，直接去服务器进行协商缓存</li><li>no-store 就是禁止所有的缓存策略<blockquote><p>no-cache 和 no-store 是一组互斥属性，这两个属性不能同时出现在 Cache-Control 中</p></blockquote></li><li>public 表示资源在客户端和代理服务器都可以被缓存</li><li>private 则表示资源只能在客户端被缓存，拒绝资源在代理服务器缓存<blockquote><p>public 和 private 就是决定资源是否可以在代理服务器进行缓存的属性<br>如果这两个属性值都没有被设置，则默认为 private<br>public 和 private 也是一组互斥属性。他们两个不能同时出现在响应头的 cache-control 字段中</p></blockquote></li><li>max-age 表示的时间资源在客户端缓存的时长</li><li>s-maxage 表示的是资源在代理服务器可以缓存的时长<blockquote><p>s-maxage 因为是代理服务端的缓存时长，他必须和上面说的 public 属性一起使用（public 属性表示资源可以在代理服务器中缓存）<br>max-age 和 s-maxage 并不互斥。他们可以一起使用</p></blockquote></li></ul><p><code>Cache-control多值写法</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Cache<span class="token operator">-</span>control<span class="token operator">:</span>max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span>s<span class="token operator">-</span>maxage<span class="token operator">=</span><span class="token number">200000</span><span class="token punctuation">,</span><span class="token keyword">public</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-协商缓存"><a href="#2-2-协商缓存" class="headerlink" title="2.2 协商缓存"></a>2.2 协商缓存</h3><h4 id="2-2-1-基于-last-modified-的协商缓存"><a href="#2-2-1-基于-last-modified-的协商缓存" class="headerlink" title="2.2.1 基于 last-modified 的协商缓存"></a>2.2.1 基于 last-modified 的协商缓存</h4><ol><li>首先需要在服务器端读出文件修改时间</li><li>将读出来的修改时间赋给响应头的 last-modified 字段</li><li>最后设置 Cache-control:no-cache</li></ol><img src="/2023/02/03/http-huan-cun/5.png" class="" title="基于 last-modified 的协商缓存"><p><code>使用以上方式的协商缓存已经存在两个非常明显的漏洞。这两个漏洞都是基于文件是通过比较修改时间来判断是否更改而产生的。</code><br><code>1.因为是更具文件修改时间来判断的，所以，在文件内容本身不修改的情况下，依然有可能更新文件修改时间（比如修改文件名再改回来），这样，就有可能文件内容明明没有修改，但是缓存依然失效了。</code><br><code>2.当文件在极短时间内完成修改的时候（比如几百毫秒）。因为文件修改时间记录的最小单位是秒，所以，如果文件在几百毫秒内完成修改的话，文件修改时间不会改变，这样，即使文件内容修改了，依然不会 返回新的文件。</code></p><h4 id="2-2-2-基础-ETag-的协商缓存"><a href="#2-2-2-基础-ETag-的协商缓存" class="headerlink" title="2.2.2 基础 ETag 的协商缓存"></a>2.2.2 基础 ETag 的协商缓存</h4><p><code>ETag就是将原先协商缓存的比较时间戳的形式修改成了比较文件指纹</code><br><strong>文件指纹:根据文件内容计算出的唯一哈希值。文件内容一旦改变则指纹改变。</strong></p><ol><li>第一次请求某资源的时候，服务端读取文件并计算出文件指纹，将文件指纹放在响应头的 etag 字段中跟资源一起返回给客户端</li><li>第二次请求某资源的时候，客户端自动从缓存中读取出上一次服务端返回的 ETag 也就是文件指纹。并赋给请求头的 if-None-Match 字段，让上一次的文件指纹跟随请求一起回到服务端。</li><li>服务端拿到请求头中的 is-None-Match 字段值（也就是上一次的文件指纹），并再次读取目标资源并生成文件指纹，两个指纹做对比。如果两个文件指纹完全吻合，说明文件没有被改变，则直接返回 304 状态码和一个空的响应体并 return。如果两个文件指纹不吻合，则说明文件被更改，那么将新的文件指纹重新存储到响应头的 ETag 中并返回给客户端</li></ol><img src="/2023/02/03/http-huan-cun/6.png" class="" title="基于 last-modified 的协商缓存"><blockquote><p>从校验流程上来说，协商缓存的修改时间比对和文件指纹比对，几乎是一样的</p></blockquote><p><code>ETag也有缺点</code><br><code>1. ETag需要计算文件指纹这样意味着，服务端需要更多的计算开销。。如果文件尺寸大，数量多，并且计算频繁，那么ETag的计算就会影响服务器的性能。显然，ETag在这样的场景下就不是很适合。</code><br><code>2. ETag有强验证和弱验证，所谓将强验证，ETag生成的哈希码深入到每个字节。哪怕文件中只有一个字节改变了，也会生成不同的哈希值，它可以保证文件内容绝对的不变。但是，强验证非常消耗计算量。ETag还有一个弱验证，弱验证是提取文件的部分属性来生成哈希值。因为不必精确到每个字节，所以他的整体速度会比强验证快，但是准确率不高。会降低协商缓存的有效性。</code></p><blockquote><p>值得注意的一点是，不同于 cache-control 是 expires 的完全替代方案(说人话:能用 cache-control 就不要用 expiress)。ETag 并不是 last-modified 的完全替代方案。而是 last-modified 的补充方案（项目中到底是用 ETag 还是 last-modified 完全取决于业务场景）。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> http </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 缓存 </tag>
            
            <tag> 存储 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue一键换肤</title>
      <link href="/2023/02/01/vue-yi-jian-huan-fu/"/>
      <url>/2023/02/01/vue-yi-jian-huan-fu/</url>
      
        <content type="html"><![CDATA[<img src="/2023/02/01/vue-yi-jian-huan-fu/1.png" class="" title="vue一键换肤"><p><code>本文只涉及到颜色主题和icon更换</code></p><h3 id="1、颜色更换"><a href="#1、颜色更换" class="headerlink" title="1、颜色更换"></a>1、颜色更换</h3><p><code>通过class解决，包含字体、字号、字体颜色、背景颜色等，css控制</code></p><h3 id="2、icon-更换"><a href="#2、icon-更换" class="headerlink" title="2、icon 更换"></a>2、icon 更换</h3><h4 id="2-1-通过-css-background-控制"><a href="#2-1-通过-css-background-控制" class="headerlink" title="2.1 通过 css background 控制"></a>2.1 通过 css background 控制</h4><p><code>配置多个css文件，通过覆盖的方式进行控制</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//默认黑夜主题</span><span class="token punctuation">.</span>icon<span class="token operator">-</span><span class="token keyword">delete</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"../../static/images/backup.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//更改为白天主题</span><span class="token punctuation">.</span>themeDay <span class="token punctuation">&#123;</span><span class="token punctuation">.</span>icon<span class="token operator">-</span><span class="token keyword">delete</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"../../static/images/Outlined.png"</span><span class="token punctuation">)</span> <span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//只需要给非默认主题更高的优先级即可，其他非默认主题同理。因为一时间只能展示一个主题，不会出现多个非默认主题之间的覆盖（只需要保证覆盖掉默认主题即可）</span><span class="token comment">//假如再多一个粉色主题</span><span class="token punctuation">.</span>themePink <span class="token punctuation">&#123;</span><span class="token punctuation">.</span>icon<span class="token operator">-</span><span class="token keyword">delete</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"../../static/images/Outlined_Pink.png"</span><span class="token punctuation">)</span> <span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-通过变量控制"><a href="#2-2-通过变量控制" class="headerlink" title="2.2 通过变量控制"></a>2.2 通过变量控制</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//写法1</span><span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-select-type-container"</span><span class="token operator">></span><span class="token operator">&lt;</span>image <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-select-type"</span> <span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"THEME.style == 'dark' ? `$&#123;right&#125;` : `$&#123;right_light&#125;`"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span><span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@static/images/right.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">right_light</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@static/images/icon_go.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//写法2</span><span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-select-type-container"</span><span class="token operator">></span><span class="token operator">&lt;</span>image<span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon-select-type"</span><span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"require(`@static/images/$&#123;THEME.style == 'dark' ? `$&#123;right_light_2&#125;` : `$&#123;right_light_1&#125;`&#125;.png`)"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span><span class="token literal-property property">right_light_1</span><span class="token operator">:</span> <span class="token string">'icon_go'</span><span class="token punctuation">,</span><span class="token literal-property property">right_light_2</span><span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue管理后台动态路由</title>
      <link href="/2023/01/12/vue-guan-li-hou-tai-dong-tai-lu-you/"/>
      <url>/2023/01/12/vue-guan-li-hou-tai-dong-tai-lu-you/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token comment">// import http from '@/utils/request'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> isURL <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/utils/validate'</span><span class="token keyword">import</span> loginHttp <span class="token keyword">from</span> <span class="token string">'@/utils/loginRequest'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token comment">// 页面路由(独立页面)</span><span class="token keyword">export</span> <span class="token keyword">const</span> pageRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/404'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/pages/404'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'404'</span><span class="token punctuation">,</span>    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'404未找到'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">beforeEnter</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 拦截处理特殊业务场景</span>      <span class="token comment">// 如果, 重定向路由包含__双下划线, 为临时添加路由</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">__.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">.</span>redirectedFrom</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>redirectedFrom<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">__.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/pages/login'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'login'</span><span class="token punctuation">,</span> <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'登录'</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token comment">// 模块路由(基于主入口布局页面)</span><span class="token keyword">export</span> <span class="token keyword">const</span> moduleRoutes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/main'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'main'</span><span class="token punctuation">,</span>  <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'home'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'主入口布局'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/home'</span><span class="token punctuation">,</span> <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/modules/home'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span> <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'首页'</span><span class="token punctuation">,</span> <span class="token literal-property property">isTab</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">addDynamicRoute</span><span class="token punctuation">(</span><span class="token parameter">routeParams<span class="token punctuation">,</span> router</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'addDynamicRoute'</span><span class="token punctuation">)</span>  <span class="token comment">// 组装路由名称, 并判断是否已添加, 如是: 则直接跳转</span>  <span class="token keyword">var</span> routeName <span class="token operator">=</span> routeParams<span class="token punctuation">.</span>routeName  <span class="token keyword">var</span> dynamicRoute <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>dynamicRoutes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> routeName<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>dynamicRoute<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> routeName<span class="token punctuation">,</span> <span class="token literal-property property">params</span><span class="token operator">:</span> routeParams<span class="token punctuation">.</span>params <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 否则: 添加并全局变量保存, 再跳转</span>  dynamicRoute <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> routeName<span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@/views/modules/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>routeParams<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> routeName<span class="token punctuation">,</span>    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>contentTabDefault<span class="token punctuation">,</span>      <span class="token literal-property property">menuId</span><span class="token operator">:</span> routeParams<span class="token punctuation">.</span>menuId<span class="token punctuation">,</span>      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>routeParams<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  router<span class="token punctuation">.</span><span class="token function">addRoutes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>moduleRoutes<span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">main-dynamic__</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>dynamicRoute<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>dynamicRoute<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span>  window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>dynamicRoutes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dynamicRoute<span class="token punctuation">)</span>  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> dynamicRoute<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">params</span><span class="token operator">:</span> routeParams<span class="token punctuation">.</span>params <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'hash'</span><span class="token punctuation">,</span>  <span class="token function-variable function">scrollBehavior</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token literal-property property">routes</span><span class="token operator">:</span> pageRoutes<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>moduleRoutes<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 添加动态(菜单)路由</span>  <span class="token comment">// 已添加或者当前路由为页面路由, 可直接访问</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>dynamicMenuRoutesHasAdded <span class="token operator">||</span> <span class="token function">fnCurrentRouteIsPageRoute</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> pageRoutes</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 获取菜单列表, 添加并全局变量保存</span>  <span class="token comment">// console.log(window.SITE_CONFIG.sysId,'window.SITE_CONFIG.sysId');</span>  loginHttp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/menu/nav/'</span> <span class="token operator">+</span> window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>sysId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">'菜单'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'login'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>menuList <span class="token operator">=</span> res<span class="token punctuation">.</span>data    <span class="token function">fnAddDynamicMenuRoutes</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>menuList<span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token operator">...</span>to<span class="token punctuation">,</span> <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'login'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">/** * 判断当前路由是否为页面路由 * @param &#123;*&#125; route 当前路由 * @param &#123;*&#125; pageRoutes 页面路由 */</span><span class="token keyword">function</span> <span class="token function">fnCurrentRouteIsPageRoute</span><span class="token punctuation">(</span><span class="token parameter">route<span class="token punctuation">,</span> pageRoutes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pageRoutes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span>path <span class="token operator">===</span> pageRoutes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pageRoutes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> pageRoutes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      temp <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>pageRoutes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> temp<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token function">fnCurrentRouteIsPageRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">,</span> temp<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 添加动态(菜单)路由 * @param &#123;*&#125; menuList 菜单列表 * @param &#123;*&#125; routes 递归创建的动态(菜单)路由 */</span><span class="token keyword">function</span> <span class="token function">fnAddDynamicMenuRoutes</span><span class="token punctuation">(</span><span class="token parameter">menuList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> menuList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>menuList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> menuList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      temp <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>menuList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span>      <span class="token keyword">continue</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 组装路由</span>    <span class="token keyword">var</span> route <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token operator">...</span>window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>contentTabDefault<span class="token punctuation">,</span>        <span class="token literal-property property">menuId</span><span class="token operator">:</span> menuList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span>        <span class="token literal-property property">title</span><span class="token operator">:</span> menuList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> <span class="token constant">URL</span> <span class="token operator">=</span> <span class="token punctuation">(</span>menuList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&#123;&#123;([^&#125;&#125;]+)?&#125;&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">s1<span class="token punctuation">,</span> s2</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">eval</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token comment">// URL支持&#123;&#123; window.xxx &#125;&#125;占位符变量</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isURL</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">URL</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'本身就是链接'</span><span class="token punctuation">)</span>      route<span class="token punctuation">.</span>path <span class="token operator">=</span> route<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">i-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>menuList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>      route<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>iframeURL <span class="token operator">=</span> <span class="token constant">URL</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'本身是组件'</span><span class="token punctuation">)</span>      <span class="token comment">// URL = URL.replace(/^\//, '').replace(/_/g, '-')</span>      <span class="token comment">// route.path = route.name = URL.replace(/\//g, '-')</span>      <span class="token constant">URL</span> <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">_</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span>      route<span class="token punctuation">.</span>path <span class="token operator">=</span> route<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span>      route<span class="token punctuation">.</span><span class="token function-variable function">component</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@/views/modules/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token constant">URL</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    routes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">fnAddDynamicMenuRoutes</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> routes<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 添加路由</span>  router<span class="token punctuation">.</span><span class="token function">addRoutes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>moduleRoutes<span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'main-dynamic-menu'</span><span class="token punctuation">,</span>      <span class="token literal-property property">children</span><span class="token operator">:</span> routes    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'404'</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span>  window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>dynamicMenuRoutes <span class="token operator">=</span> routes  window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">.</span>dynamicMenuRoutesHasAdded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 管理后台 </tag>
            
            <tag> 动态路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行</title>
      <link href="/2023/01/05/cao-zuo-xi-tong-ming-ling-xing/"/>
      <url>/2023/01/05/cao-zuo-xi-tong-ming-ling-xing/</url>
      
        <content type="html"><![CDATA[<h3 id="1、windows-命令行"><a href="#1、windows-命令行" class="headerlink" title="1、windows 命令行"></a>1、windows 命令行</h3><h4 id="1-1-打开文件或文件夹"><a href="#1-1-打开文件或文件夹" class="headerlink" title="1.1 打开文件或文件夹"></a>1.1 打开文件或文件夹</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//在当前目录下打开本目录下的BLOG</span><span class="token constant">C</span><span class="token operator">:</span>\Users\<span class="token constant">WTCL</span>\Desktop\博客<span class="token operator">></span> start <span class="token constant">BLOG</span><span class="token comment">//打开指定目录 不区分大小写</span>start <span class="token constant">C</span><span class="token operator">:</span>\Users\<span class="token constant">WTCL</span>\Desktop\博客\blogstart <span class="token constant">C</span><span class="token operator">:</span>\Users\<span class="token constant">WTCL</span>\Desktop\博客\<span class="token constant">BLOG</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、macos-命令行"><a href="#2、macos-命令行" class="headerlink" title="2、macos 命令行"></a>2、macos 命令行</h3><h4 id="2-1-打开文件或文件夹"><a href="#2-1-打开文件或文件夹" class="headerlink" title="2.1 打开文件或文件夹"></a>2.1 打开文件或文件夹</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">open<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-2-使用指定软件打开文件"><a href="#2-2-使用指定软件打开文件" class="headerlink" title="2.2 使用指定软件打开文件"></a>2.2 使用指定软件打开文件</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">open 我的博客 <span class="token operator">-</span>a webstorm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-3-打开指定软件"><a href="#2-3-打开指定软件" class="headerlink" title="2.3 打开指定软件"></a>2.3 打开指定软件</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//因为应用名之间可能包含空格，所以需要用引号包裹起来</span>open <span class="token operator">-</span>a <span class="token string">'Google Chrome'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行 </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件管理</title>
      <link href="/2022/12/28/wen-jian-guan-li/"/>
      <url>/2022/12/28/wen-jian-guan-li/</url>
      
        <content type="html"><![CDATA[<h3 id="1、el-upload-formDat-上传"><a href="#1、el-upload-formDat-上传" class="headerlink" title="1、el-upload formDat 上传"></a>1、el-upload formDat 上传</h3><p><code>header根据项目需求有所不同，本项目采用的是Cookie，另外，该封装内没有判断文件类型</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Cookies <span class="token keyword">from</span> <span class="token string">"_js-cookie@2.2.1@js-cookie"</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"_axios@0.19.2@axios"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">uploadFile_</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> uploadData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  uploadData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string-property property">"Content-Type"</span><span class="token operator">:</span> <span class="token string">"multipart/form-data"</span><span class="token punctuation">,</span>    <span class="token string-property property">"Accept-Language"</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"language"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">"zh-CN"</span><span class="token punctuation">,</span>    <span class="token literal-property property">token</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"tenant_token"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>token<span class="token punctuation">,</span>    <span class="token literal-property property">tenant_code</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"tenant_code"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">userId</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>    <span class="token literal-property property">deptId</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"deptId"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>    <span class="token literal-property property">appId</span><span class="token operator">:</span> window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">[</span><span class="token string">"sysId"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>window<span class="token punctuation">.</span><span class="token constant">SITE_CONFIG</span><span class="token punctuation">[</span><span class="token string">"apiURL"</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/import/vehicle</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  axios    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> uploadData<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">headers</span><span class="token operator">:</span> headers <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"选择导入"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">"选择导入"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、前端文件下载"><a href="#2、前端文件下载" class="headerlink" title="2、前端文件下载"></a>2、前端文件下载</h3><h4 id="2-1-后端返回文件流"><a href="#2-1-后端返回文件流" class="headerlink" title="2.1 后端返回文件流"></a>2.1 后端返回文件流</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">projectId</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selectValue <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">.</span>projectId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"请先选择项目"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>http  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>    <span class="token string">"/cockpit/project/platform/export"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">data</span><span class="token operator">:</span> data <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">"blob"</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> upload <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">fileName</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">fileExtension</span><span class="token operator">:</span> <span class="token string">"xls"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">//创建一个a标签</span>    <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//实例化一个blob出来</span>    <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>res<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    link<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>    <span class="token comment">//将后端返回的数据通过blob转换为一个地址</span>    link<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置下载下来后文件的名字以及文件格式</span>    link<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>      <span class="token string">"download"</span><span class="token punctuation">,</span>      <span class="token comment">//upload为下载的文件信息 可以在外层包一个函数 将upload作为参数传递进来</span>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>upload<span class="token punctuation">.</span>fileName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>upload<span class="token punctuation">.</span>fileExtension<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//下载该文件</span>    link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常开发 </tag>
            
            <tag> 文件管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法</title>
      <link href="/2022/12/27/suan-fa/"/>
      <url>/2022/12/27/suan-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="1、js-树逆向查找"><a href="#1、js-树逆向查找" class="headerlink" title="1、js 树逆向查找"></a>1、js 树逆向查找</h3><p><code>利用递归，当最后找到当前节点后再一层层返回上来拿到整棵树从当前节点到根节点的id</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">findParentArr</span><span class="token punctuation">(</span><span class="token parameter">targetId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> ids <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">getParent</span><span class="token punctuation">(</span><span class="token parameter">sources</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">sources</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> sources<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">elm</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> rs <span class="token operator">=</span> <span class="token function">getParent</span><span class="token punctuation">(</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          ids<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>elm<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> rs<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>sources<span class="token punctuation">.</span>id <span class="token operator">===</span> targetId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">sources<span class="token punctuation">.</span>childFunctionList</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token function">getParent</span><span class="token punctuation">(</span>sources<span class="token punctuation">.</span>childFunctionList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getParent</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> ids<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序云开发</title>
      <link href="/2022/12/05/wei-xin-xiao-cheng-xu-yun-kai-fa/"/>
      <url>/2022/12/05/wei-xin-xiao-cheng-xu-yun-kai-fa/</url>
      
        <content type="html"><![CDATA[<img src="/2022/12/05/wei-xin-xiao-cheng-xu-yun-kai-fa/0.png" class=""><p>微信小程序开发最主要的就是编写云函数、使用微信提供的功能与数据库，在存储与鉴权方面存在一定便利。<br><code>实现方式最主要云函数的编写与调用，wx.cloud.callFunction(&#123;&#125;)</code></p><h3 id="1、定义云函数"><a href="#1、定义云函数" class="headerlink" title="1、定义云函数"></a>1、定义云函数</h3><p>假如我们要在微信小程序内获取用户运动步数，首先要在 cloudfunctions 文件夹内定义函数</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 云函数入口文件</span><span class="token keyword">const</span> cloud <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"wx-server-sdk"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cloud<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">env</span><span class="token operator">:</span> cloud<span class="token punctuation">.</span><span class="token constant">DYNAMIC_CURRENT_ENV</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用当前云环境</span><span class="token comment">// 云函数入口函数</span>exports<span class="token punctuation">.</span><span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> wxContext <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">getWXContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、调用云函数"><a href="#2、调用云函数" class="headerlink" title="2、调用云函数"></a>2、调用云函数</h3><p>封装调用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">getWeRunData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 检测用户授权</span>      wx<span class="token punctuation">.</span><span class="token function">getWeRunData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> cloudID <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res        <span class="token comment">//云函数的调用</span>          wx<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'getRunData'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">data</span><span class="token operator">:</span> wx<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span><span class="token function">CloudID</span><span class="token punctuation">(</span>cloudID<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>res1<span class="token punctuation">.</span>result<span class="token punctuation">.</span>event<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>stepInfoList<span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err1</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err1<span class="token punctuation">,</span> <span class="token string">'步数失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">'拒绝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、业务内使用"><a href="#3、业务内使用" class="headerlink" title="3、业务内使用"></a>3、业务内使用</h3><p>我们的业务内需要页面展示的时候就调用一次接口，所以写在了 onshow 内</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">async</span> <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">getWeRunData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> r<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">rr</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> rr<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4、代码示例"><a href="#4、代码示例" class="headerlink" title="4、代码示例"></a>4、代码示例</h3><img src="/2022/12/05/wei-xin-xiao-cheng-xu-yun-kai-fa/1.png" class="" title="代码示例"><p><code>其他函数同理，包含数据库函数，值得注意的是，数据库内保存的函数都会有一个唯一的_id，这个_id就是用户的openid</code></p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 云开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序内使用echart</title>
      <link href="/2022/12/05/wei-xin-xiao-cheng-xu-nei-shi-yong-echart/"/>
      <url>/2022/12/05/wei-xin-xiao-cheng-xu-nei-shi-yong-echart/</url>
      
        <content type="html"><![CDATA[<img src="/2022/12/05/wei-xin-xiao-cheng-xu-nei-shi-yong-echart/1.png" class="" title="微信小程序内使用echart"><h3 id="1、下载代码后，拷贝ec-canvas到项目里"><a href="#1、下载代码后，拷贝ec-canvas到项目里" class="headerlink" title="1、下载代码后，拷贝ec-canvas到项目里"></a>1、下载代码后，拷贝ec-canvas到项目里</h3><img src="/2022/12/05/wei-xin-xiao-cheng-xu-nei-shi-yong-echart/2.png" class="" title="下载代码后，拷贝ec-canvas到项目里"><h3 id="2、在需要使用的页面内引入"><a href="#2、在需要使用的页面内引入" class="headerlink" title="2、在需要使用的页面内引入"></a>2、在需要使用的页面内引入</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">'../../components/ec-canvas/echarts'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、定义方法和实例化"><a href="#3、定义方法和实例化" class="headerlink" title="3、定义方法和实例化"></a>3、定义方法和实例化</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> chart <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">let</span> option <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">function</span> <span class="token function">initChart</span><span class="token punctuation">(</span><span class="token parameter">canvas<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> dpr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> dpr<span class="token punctuation">,</span> <span class="token string">'canvas, width, height, dpr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  chart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">width</span><span class="token operator">:</span> width<span class="token punctuation">,</span>    <span class="token literal-property property">height</span><span class="token operator">:</span> height<span class="token punctuation">,</span>    <span class="token literal-property property">devicePixelRatio</span><span class="token operator">:</span> dpr  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'dark'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  canvas<span class="token punctuation">.</span><span class="token function">setChart</span><span class="token punctuation">(</span>chart<span class="token punctuation">)</span><span class="token punctuation">;</span>  option <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  chart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> chart<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、异步获取数据，进行表格设置"><a href="#4、异步获取数据，进行表格设置" class="headerlink" title="4、异步获取数据，进行表格设置"></a>4、异步获取数据，进行表格设置</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// pages/index/index.js</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">/**   * 页面的初始数据   */</span>  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">bannerList</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">stepList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">stepList1</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">showRemarkModal</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">ec</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">onInit</span><span class="token operator">:</span> initChart    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">bodyContainer</span><span class="token operator">:</span><span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">/**   * 生命周期函数--监听页面显示   */</span>  <span class="token keyword">async</span> <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> isLogin <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">'userInfo'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLogin<span class="token punctuation">.</span>nickName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'没有登录'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'../login/login'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'已登录'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">getWeRunData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> r<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">rr</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> rr<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span><span class="token string">'list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'.............r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">bodyContainer</span><span class="token operator">:</span><span class="token boolean">false</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        wx<span class="token punctuation">.</span><span class="token function">hideTabBar</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// bodyContainer</span>      <span class="token keyword">let</span> dateArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token keyword">let</span> dataArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        item<span class="token punctuation">.</span>time <span class="token operator">=</span> <span class="token function">getYYYYMMDD</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>timestamp <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">let</span> list1 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">7</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span>length<span class="token punctuation">)</span>      list1<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        dateArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>time<span class="token punctuation">)</span>        dataArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>step<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dateArr<span class="token punctuation">,</span> <span class="token string">'天数'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataArr<span class="token punctuation">,</span> <span class="token string">'步数'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">stepList</span><span class="token operator">:</span> list<span class="token punctuation">,</span> <span class="token literal-property property">stepList1</span><span class="token operator">:</span> list1<span class="token punctuation">,</span><span class="token literal-property property">bodyContainer</span><span class="token operator">:</span><span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          chart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>              <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">"lorem"</span><span class="token punctuation">,</span>              <span class="token literal-property property">textStyle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'blue'</span><span class="token punctuation">,</span>                <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">tootip</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>              <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'axis'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">xAxis</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">data</span><span class="token operator">:</span> dateArr<span class="token punctuation">,</span>              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'日期'</span><span class="token punctuation">,</span>              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'category'</span><span class="token punctuation">,</span>              <span class="token literal-property property">nameTextStyle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'red'</span><span class="token punctuation">,</span>                <span class="token literal-property property">verticalAlign</span><span class="token operator">:</span> <span class="token string">"top"</span><span class="token punctuation">,</span>                <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token literal-property property">nameRotate</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">45</span><span class="token punctuation">,</span>              <span class="token literal-property property">axisLabel</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">10</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">yAxis</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'value'</span><span class="token punctuation">,</span>              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'步数'</span><span class="token punctuation">,</span>              <span class="token literal-property property">nameRotate</span><span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>              <span class="token literal-property property">nameLocation</span><span class="token operator">:</span> <span class="token string">'end'</span><span class="token punctuation">,</span>              <span class="token literal-property property">nameTextStyle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>                <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'red'</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token literal-property property">axisLine</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token literal-property property">lineStyle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'red'</span><span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token literal-property property">axisTick</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token literal-property property">inside</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token literal-property property">lineStyle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'blue'</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token literal-property property">axisLabel</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">10</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">series</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token punctuation">&#123;</span>                <span class="token literal-property property">data</span><span class="token operator">:</span> dataArr<span class="token punctuation">,</span>                <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'line'</span><span class="token punctuation">,</span>  <span class="token comment">//bar line pie</span>                <span class="token literal-property property">smooth</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token literal-property property">lineStyle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"red"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">itemStyle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'#000'</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                  <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'green'</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">function</span> <span class="token function">getYYYYMMDD</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> datetime <span class="token operator">=</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> datetime<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>taro小程序内使用rem</title>
      <link href="/2022/10/24/taro-xiao-cheng-xu-nei-shi-yong-rem/"/>
      <url>/2022/10/24/taro-xiao-cheng-xu-nei-shi-yong-rem/</url>
      
        <content type="html"><![CDATA[<p><a href="taro%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%86%85%E4%BD%BF%E7%94%A8rem/https://taro-docs.jd.com/docs/next/use-h5#%E4%B8%8D%E6%94%AF%E6%8C%81%E4%BD%BF%E7%94%A8-rem">taro 官网说明</a><br><code>taro官网明确表示暂时不支持rem</code></p><img src="/2022/10/24/taro-xiao-cheng-xu-nei-shi-yong-rem/rem.png" class=""><p>由于项目内使用的 less，所以我们采用 less 变量声明的方式，曲线救国</p><pre class="line-numbers language-less" data-language="less"><code class="language-less"><span class="token comment">// base.less</span><span class="token comment">//基准的font-size是根据项目确定的，如果是老项目，则需要根据老代码确定</span><span class="token comment">// 由于之前采用的是vh，所以在这我们将1rem设置为1vh（屏幕高度1000）</span><span class="token variable">@fontsize<span class="token punctuation">:</span></span> 10px<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-less" data-language="less"><code class="language-less"><span class="token comment">// index.less</span><span class="token variable">@import</span> <span class="token string">"/src/static/baseFontSize"</span><span class="token punctuation">;</span><span class="token selector">.startup</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>180deg<span class="token punctuation">,</span> #282c60 0%<span class="token punctuation">,</span> #0e173e 66%<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 800<span class="token punctuation">;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC<span class="token operator">-</span>Semibold<span class="token punctuation">;</span>  <span class="token comment">//项目改造，之前写法是font-size:7.7vh  我们改造成rem的方式时，将1rem设置为了屏幕高度的1/100，所以7.7这个数值就不用变</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token variable">@fontsize</span> <span class="token operator">*</span> 7.7<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> taro </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js网页打印</title>
      <link href="/2022/10/14/js-wang-ye-da-yin/"/>
      <url>/2022/10/14/js-wang-ye-da-yin/</url>
      
        <content type="html"><![CDATA[<h3 id="1、打印网页"><a href="#1、打印网页" class="headerlink" title="1、打印网页"></a>1、打印网页</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、打印部分页面"><a href="#2、打印部分页面" class="headerlink" title="2、打印部分页面"></a>2、打印部分页面</h3><p><code>通过css媒体查询将要打印的页面暴露出来，不需要打印的隐藏起来，同时对暴露出来的部分可以自定义样式</code></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 代码片段 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js基础操作</title>
      <link href="/2022/10/14/js-ji-chu-cao-zuo/"/>
      <url>/2022/10/14/js-ji-chu-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h3 id="1、将中国标准时间转为-yyyymmdd"><a href="#1、将中国标准时间转为-yyyymmdd" class="headerlink" title="1、将中国标准时间转为 yyyymmdd"></a>1、将中国标准时间转为 yyyymmdd</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getYYYYMMDD</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> datetime <span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"-"</span> <span class="token operator">+</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"-"</span> <span class="token operator">+</span>d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">" "</span> <span class="token operator">+</span>d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">":"</span> <span class="token operator">+</span>d<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">":"</span> <span class="token operator">+</span>d<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> datetime<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、去除字符串内所有空格"><a href="#2、去除字符串内所有空格" class="headerlink" title="2、去除字符串内所有空格"></a>2、去除字符串内所有空格</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">RemoveAllSpaces</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"gm"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3、解析-URL"><a href="#3、解析-URL" class="headerlink" title="3、解析 URL"></a>3、解析 URL</h3><p><code>先根据 ？ 或者 &amp; 符进行将url分割成数组，再遍历数据，根据数组内每项的 = 号，分别取值赋给 key 和 value。最后将 key 和 value 组合成一个对象</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 解析URL</span><span class="token keyword">let</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[?&amp;][^?&amp;]+=[^?&amp;]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span><span class="token keyword">let</span> arr <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> tempArr <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> key <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> val <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>params<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、如何判断对象为空"><a href="#4、如何判断对象为空" class="headerlink" title="4、如何判断对象为空"></a>4、如何判断对象为空</h3><p><code>总体来说就是判断对象里面有多少key，如果key的个数为0，则为空</code><br><a href="js%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/https://github.com/hanshuang-ai/code/blob/master/%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E4%B8%BA%E7%A9%BA.js">代码链接</a><br><a href="js%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/keys">Object.keys 讲解链接</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> object <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">let</span> isEmpty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//es6</span><span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>isEmpty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>isEmpty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>isEmpty<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//es5</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>arr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span>isEmpty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>isEmpty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>isEmpty<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//JSON.stringify</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"&#123;&#125;"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>isEmpty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>isEmpty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>isEmpty<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 封装函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 代码片段 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三方登录</title>
      <link href="/2022/10/14/san-fang-deng-lu/"/>
      <url>/2022/10/14/san-fang-deng-lu/</url>
      
        <content type="html"><![CDATA[<h3 id="1、微信登录"><a href="#1、微信登录" class="headerlink" title="1、微信登录"></a>1、微信登录</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">WXLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">"需要跳转回的URL"</span><span class="token punctuation">;</span>  <span class="token comment">//这里有登录之前的协议阅读限制，项目不同，要求也不一样</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>check_<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"checkbox_"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>check_ <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment">//跳转到微信登录页，会出现一个二维码弹窗，扫码后会消失</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://open.weixin.qq.com/connect/qrconnect?appid=wx901e99869df0daaf&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE#wechat_redirect</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>notice <span class="token operator">=</span> <span class="token string">"请先阅读并同意协议"</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>showNotice <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>showNotice <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、QQ-登录"><a href="#2、QQ-登录" class="headerlink" title="2、QQ 登录"></a>2、QQ 登录</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">QQLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//   let url = store.state.callBackURL;   因为我们项目分为测试环境和正式环境，需要配置不同的地址，所以可以使用环境变量（本项目是在vue store里面配置，所以直接引用store就可以）</span>  <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">"需要跳转回的URL"</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>check_<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"checkbox_"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dom<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>check_ <span class="token operator">=</span> dom<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://graph.qq.com/oauth2.0/authorize?response_type=code&amp;client_id=101982828&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;scope=get_user_info</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>notice <span class="token operator">=</span> <span class="token string">"请先阅读并同意协议"</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>showNotice <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>showNotice <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 三方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同一台电脑配置多个git密匙</title>
      <link href="/2022/10/14/tong-yi-tai-dian-nao-pei-zhi-duo-ge-git-mi-chi/"/>
      <url>/2022/10/14/tong-yi-tai-dian-nao-pei-zhi-duo-ge-git-mi-chi/</url>
      
        <content type="html"><![CDATA[<p>首先由于需要配置多个git账户，可能是github、gitlab、gitee等等，所以<br><em><strong><code>不需要global email和username</code></strong></em><br>直接使用随便一个值覆盖即可。</p><hr><p>覆盖global email和userName后，需要3步</p><h3 id="1、-生成不同的github密匙"><a href="#1、-生成不同的github密匙" class="headerlink" title="1、 生成不同的github密匙"></a>1、 生成不同的github密匙</h3><p><code>生成的时候一定要注意密匙名称，因为同名会被覆盖</code><br><code>另外，名称最好见名知意，不一定要id_rsa开头</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa  <span class="token operator">-</span>f <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span><span class="token constant">XXX</span>   <span class="token comment">//使用-f 来命名生成的文件名</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、-将对应的公匙放入对应的平台"><a href="#2、-将对应的公匙放入对应的平台" class="headerlink" title="2、 将对应的公匙放入对应的平台"></a>2、 将对应的公匙放入对应的平台</h3><p>github、gitlab、gitee操作都是大同小异的，将本地的公匙复制好放进去即可。</p><p>假如本地有个github密匙名称是github_one，(公匙与私匙的区别就是公匙后面带.pub)，所以我们将github_one.pub里面的内容复制好放入网络平台即可。</p><h3 id="3、配置本地密匙"><a href="#3、配置本地密匙" class="headerlink" title="3、配置本地密匙"></a>3、配置本地密匙</h3><p>这里有两种方法：</p><h4 id="3-1比较麻烦的方法"><a href="#3-1比较麻烦的方法" class="headerlink" title="3.1比较麻烦的方法"></a>3.1比较麻烦的方法</h4><p>将生成的密匙以ssh-add的方法添加入本地</p><p>还是以github_one为例，所以我们需要在<code>密匙所在目录下运行命令行</code>ssh-add github_one</p><p>一般会提示<code>Identity added: github_one (你生成该密匙时使用的邮箱)</code></p><p><strong>注意</strong><br><code>但是这样的话可能重启电脑就会失效</code>，在使用的时候需要重新ssh-add下</p><p>但是我觉得这样问题也不大，熟悉了就好</p><h4 id="3-2一劳永逸的方法"><a href="#3-2一劳永逸的方法" class="headerlink" title="3.2一劳永逸的方法"></a>3.2一劳永逸的方法</h4><p><code>另一种方法就是在密匙所在目录下配置config文件</code></p><p>一般情况下，保存密匙的文件夹下不会存在config文件，这时我们需要自己创建。</p><p><code>注意：文件名就叫config，不需要任何后缀</code></p><p>创建config文件后，我们队不同的密匙进行分别配置，示例如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"># <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa github的ssh密钥<span class="token class-name">Host</span> github<span class="token punctuation">.</span>com  <span class="token comment">//对应的平台，这个值是随便写的，只要你知道代表的平台即可，只是一个标识作用</span>    <span class="token class-name">HostName</span> github<span class="token punctuation">.</span>com  <span class="token comment">// 这是对应平台的网址，这个一定要弄好，不可随意填写</span>    <span class="token class-name">User</span> git <span class="token comment">//</span>    <span class="token class-name">IdentityFile</span> <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa  <span class="token comment">//该平台对应的私匙名称</span>    <span class="token class-name">IdentitiesOnly</span> yes# <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>gitee_rsa gitee的ssh密钥<span class="token class-name">Host</span> gitee<span class="token punctuation">.</span>com    <span class="token class-name">HostName</span> gitee<span class="token punctuation">.</span>com    <span class="token class-name">User</span> git    <span class="token class-name">IdentityFile</span> <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>gitee_rsa    <span class="token class-name">IdentitiesOnly</span> yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置完成后（或者每配置一个平台后），可以通过<code>ssh -T git@配置平台的HostName</code>进行测试。</p><p>出现欢迎语<code>Hi,....,You&#39;re successfully.....</code>时，即配置成功</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序过滤器</title>
      <link href="/2022/10/12/xiao-cheng-xu-guo-lu-qi/"/>
      <url>/2022/10/12/xiao-cheng-xu-guo-lu-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="1、创建-wxs-文件"><a href="#1、创建-wxs-文件" class="headerlink" title="1、创建 wxs 文件"></a>1、创建 wxs 文件</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// indexOf.wxs</span><span class="token keyword">function</span> <span class="token function">indexOf11</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">indexOf11</span><span class="token operator">:</span> indexOf11<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、文件内使用"><a href="#2、文件内使用" class="headerlink" title="2、文件内使用"></a>2、文件内使用</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 文件内引入 并任意设置一个别名 此处使用str --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wxs</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../utils/indexOf.wxs<span class="token punctuation">"</span></span> <span class="token attr-name">module</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>  <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;chatRecordList&#125;&#125;<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>for-item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>for-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itemitemitem<span class="token punctuation">"</span></span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.idd&#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;myemchatId==item.to&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;userInfo.userInfo.userIcon&#125;&#125;<span class="token punctuation">"</span></span>        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>      <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.data&#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>          <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.data&#125;&#125;<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.data&#125;&#125;<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">wx:</span>for-item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item_<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item_<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">wx:</span>for-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index_<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cccc<span class="token punctuation">"</span></span>        <span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 此处使用 判断item_内是否包含./faces/ee_ --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;str.indexOf11(item_,'./faces/ee_')?false:true&#125;&#125;<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>&#123;&#123;item_&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span>          <span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item_&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>else</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emoemoemo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageEmchat<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.url&#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.url&#125;&#125;<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 400rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400rpx<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>else</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;myAvatar&#125;&#125;<span class="token punctuation">"</span></span>        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>      <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;item.msg||item.data&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 过滤器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编辑器正则表达式搜索</title>
      <link href="/2022/10/12/bian-ji-qi-zheng-ze-biao-da-shi-sou-suo/"/>
      <url>/2022/10/12/bian-ji-qi-zheng-ze-biao-da-shi-sou-suo/</url>
      
        <content type="html"><![CDATA[<h3 id="1、-js单行替换"><a href="#1、-js单行替换" class="headerlink" title="1、 js单行替换"></a>1、 js单行替换</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//[\s\S]*?\n</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>// 使用 //(?!._.._.).*\n 可以避免将网址等也替换掉</p></blockquote><h3 id="2、-js多行替换"><a href="#2、-js多行替换" class="headerlink" title="2、 js多行替换"></a>2、 js多行替换</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\*(.|\r\n|\n)*?\*</span><span class="token regex-delimiter">/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、html无换行注释"><a href="#3、html无换行注释" class="headerlink" title="3、html无换行注释"></a>3、html无换行注释</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--(.*?)--></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、-html有换行注释"><a href="#4、-html有换行注释" class="headerlink" title="4、 html有换行注释"></a>4、 html有换行注释</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--([\s\S|\r]*?)--></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><!--([\s\S|\r]*?)--> 也可以匹配到html无换行注释，所以只用这一个也可以</blockquote><h3 id="5、编辑器内所有空行"><a href="#5、编辑器内所有空行" class="headerlink" title="5、编辑器内所有空行"></a>5、编辑器内所有空行</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">^</span>\s<span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span>\r<span class="token operator">?</span>$<span class="token punctuation">)</span>\n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 正则 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基本命令 </tag>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序使用环信</title>
      <link href="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/"/>
      <url>/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/</url>
      
        <content type="html"><![CDATA[<img src="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/huanxinuse.png" class="" title="小程序内使用环信四步走"><h3 id="1、小程序内引入环信文件"><a href="#1、小程序内引入环信文件" class="headerlink" title="1、小程序内引入环信文件"></a>1、小程序内引入环信文件</h3><img src="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/yinru.png" class=""><h3 id="2、完善环信配置"><a href="#2、完善环信配置" class="headerlink" title="2、完善环信配置"></a>2、完善环信配置</h3><img src="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/config.png" class=""><h3 id="3、环信登录"><a href="#3、环信登录" class="headerlink" title="3、环信登录"></a>3、环信登录</h3><img src="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/huanxinlogin.png" class="" title="判断环信是否登录"><h3 id="4、加载历史消息"><a href="#4、加载历史消息" class="headerlink" title="4、加载历史消息"></a>4、加载历史消息</h3><img src="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/pull.png" class="" title="加载历史消息"><h3 id="5、发送消息"><a href="#5、发送消息" class="headerlink" title="5、发送消息"></a>5、发送消息</h3><img src="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/send.png" class="" title="发送消息"><h3 id="6、接收消息"><a href="#6、接收消息" class="headerlink" title="6、接收消息"></a>6、接收消息</h3><img src="/2022/10/12/xiao-cheng-xu-shi-yong-huan-xin/listen.png" class="" title="接收消息"><p><code>需要注意的是：发送消息的时候，需要在本地的消息列表内手动添加信息</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 添加消息到消息列表，并自动滚动到该条消息</span>  <span class="token function">updateMessage</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span>    <span class="token keyword">let</span> chatRecordList <span class="token operator">=</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>chatRecordList    chatRecordList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>    chatRecordList<span class="token punctuation">[</span>chatRecordList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>idd <span class="token operator">=</span> <span class="token string">'id'</span> <span class="token operator">+</span> chatRecordList<span class="token punctuation">[</span>chatRecordList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id    that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">chatRecordList</span><span class="token operator">:</span> chatRecordList<span class="token punctuation">,</span>      <span class="token literal-property property">toVview</span><span class="token operator">:</span> <span class="token string">'id'</span> <span class="token operator">+</span> chatRecordList<span class="token punctuation">[</span>chatRecordList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><br><br><hr><h3 id="7、部分代码"><a href="#7、部分代码" class="headerlink" title="7、部分代码"></a>7、部分代码</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wxs</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../utils/indexOf.wxs<span class="token punctuation">"</span></span> <span class="token attr-name">module</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token selector">padding-top:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>top<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>top<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span>    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token selector">height:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>top1<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>top<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>px<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topImageContaienr<span class="token punctuation">"</span></span>      <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">padding-left</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>    <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 60rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 60rpx<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>40rpx<span class="token punctuation">,</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 72rpx<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>      <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>          <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/img/back2.png<span class="token punctuation">"</span></span>          <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>backToIndex<span class="token punctuation">"</span></span>          <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>        <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 由于该页使用了自定义导航，所以导航栏可以显示环信联系人昵称 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>        <span class="token punctuation">></span></span>&#123;&#123;userInfo.userInfo.nickName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span>      <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scroll-view</span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chatViewContainer<span class="token punctuation">"</span></span>    <span class="token attr-name">scroll-y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name">scroll-into-view</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;toVview&#125;&#125;<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 环信历史消息 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>      <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;chatRecordList&#125;&#125;<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">wx:</span>for-item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">wx:</span>for-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itemitemitem<span class="token punctuation">"</span></span>      <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.idd&#125;&#125;<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;myemchatId==item.to&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;userInfo.userInfo.userIcon&#125;&#125;<span class="token punctuation">"</span></span>            <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>          <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.data&#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>              <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.data&#125;&#125;<span class="token punctuation">"</span></span>              <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.data&#125;&#125;<span class="token punctuation">"</span></span>              <span class="token attr-name"><span class="token namespace">wx:</span>for-item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item_<span class="token punctuation">"</span></span>              <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item_<span class="token punctuation">"</span></span>              <span class="token attr-name"><span class="token namespace">wx:</span>for-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index_<span class="token punctuation">"</span></span>              <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cccc<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;str.indexOf11(item_,'./faces/ee_')?false:true&#125;&#125;<span class="token punctuation">"</span></span>                <span class="token punctuation">></span></span>&#123;&#123;item_&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span>              <span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item_&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>else</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emoemoemo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageEmchat<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.url&#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>              <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.url&#125;&#125;<span class="token punctuation">"</span></span>              <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 400rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400rpx<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>            <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>else</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;myAvatar&#125;&#125;<span class="token punctuation">"</span></span>            <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>          <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;item.msg||item.data&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scroll-view</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 发送消息 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inputContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>      <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入聊天内容<span class="token punctuation">"</span></span>      <span class="token attr-name">bindconfirm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PrivateClick<span class="token punctuation">"</span></span>      <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;inputValue&#125;&#125;<span class="token punctuation">"</span></span>      <span class="token attr-name">bindinput</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getInputValue<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PrivateClick<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sendView<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发送<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> WebIM <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"../../utils/WebIM/WebIM"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WebIM<span class="token punctuation">;</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">userInfo</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">chatRecordList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">myemchatId</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">toVview</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">myAvatar</span><span class="token operator">:</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>userAvatarUrl<span class="token punctuation">,</span>    <span class="token literal-property property">navigationBar</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">top1</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token literal-property property">inputValue</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//   发送消息，需要注意消息的组合格式</span>  <span class="token function">PrivateClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> value <span class="token operator">=</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>inputValue<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      wx<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"请输入内容"</span><span class="token punctuation">,</span>        <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> userInfo <span class="token operator">=</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userInfo<span class="token punctuation">;</span>      <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">nickName</span><span class="token operator">:</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>userInfoAll<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>nickName<span class="token punctuation">,</span>        <span class="token literal-property property">userIcon</span><span class="token operator">:</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>userInfoAll<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>userIcon<span class="token punctuation">,</span>        <span class="token literal-property property">userId</span><span class="token operator">:</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>userInfoAll<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>userId<span class="token punctuation">,</span>        <span class="token literal-property property">emId</span><span class="token operator">:</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>userInfoAll<span class="token punctuation">.</span>emchat<span class="token punctuation">.</span>emId<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> id <span class="token operator">=</span> WebIM<span class="token punctuation">.</span>conn<span class="token punctuation">.</span><span class="token function">getUniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebIM<span class="token punctuation">.</span>message</span><span class="token punctuation">(</span><span class="token string">"txt"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> set_options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">msg</span><span class="token operator">:</span> value<span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> value<span class="token punctuation">,</span>        <span class="token literal-property property">to</span><span class="token operator">:</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>emId<span class="token punctuation">,</span>        <span class="token literal-property property">chatType</span><span class="token operator">:</span> <span class="token string">"singleChat"</span><span class="token punctuation">,</span>        <span class="token literal-property property">ext</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">userExt</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      msg<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>set_options<span class="token punctuation">)</span><span class="token punctuation">;</span>      WebIM<span class="token punctuation">.</span>conn<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>      msg<span class="token punctuation">.</span>body<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>userExt <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>body<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>userExt<span class="token punctuation">)</span><span class="token punctuation">;</span>      that<span class="token punctuation">.</span><span class="token function">updateMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>      that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">inputValue</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//   输入框输入的时候，将值赋给inputValue</span>  <span class="token function">getInputValue</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">inputValue</span><span class="token operator">:</span> e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>value<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//   更新消息，有最新消息时自动定位到最新消息</span>  <span class="token function">updateMessage</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> chatRecordList <span class="token operator">=</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>chatRecordList<span class="token punctuation">;</span>    chatRecordList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    chatRecordList<span class="token punctuation">[</span>chatRecordList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>idd <span class="token operator">=</span>      <span class="token string">"id"</span> <span class="token operator">+</span> chatRecordList<span class="token punctuation">[</span>chatRecordList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>    that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">chatRecordList</span><span class="token operator">:</span> chatRecordList<span class="token punctuation">,</span>      <span class="token literal-property property">toVview</span><span class="token operator">:</span> <span class="token string">"id"</span> <span class="token operator">+</span> chatRecordList<span class="token punctuation">[</span>chatRecordList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">userInfo</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token literal-property property">myemchatId</span><span class="token operator">:</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>emchat<span class="token punctuation">.</span>emId<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    wx<span class="token punctuation">.</span><span class="token function">getSystemInfo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        that<span class="token punctuation">.</span>system <span class="token operator">=</span> res<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span>menu <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getMenuButtonBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span>systemBar <span class="token operator">=</span> that<span class="token punctuation">.</span>system<span class="token punctuation">.</span>statusBarHeight<span class="token punctuation">;</span>    that<span class="token punctuation">.</span>navigationBar <span class="token operator">=</span>      <span class="token punctuation">(</span>that<span class="token punctuation">.</span>menu<span class="token punctuation">.</span>top <span class="token operator">-</span> that<span class="token punctuation">.</span>system<span class="token punctuation">.</span>statusBarHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> that<span class="token punctuation">.</span>menu<span class="token punctuation">.</span>height<span class="token punctuation">;</span>    <span class="token keyword">const</span> top <span class="token operator">=</span> that<span class="token punctuation">.</span>systemBar<span class="token punctuation">;</span>    <span class="token keyword">const</span> top1 <span class="token operator">=</span> that<span class="token punctuation">.</span>navigationBar<span class="token punctuation">;</span>    that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">top</span><span class="token operator">:</span> top<span class="token punctuation">,</span>      <span class="token literal-property property">top1</span><span class="token operator">:</span> top1<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 获取环信历史消息，需要注意的是历史记录保存时间和数量是和环信套餐有关的</span>    WebIM<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>mr_cache <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    WebIM<span class="token punctuation">.</span>conn<span class="token punctuation">.</span><span class="token function">fetchHistoryMessages</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">queue</span><span class="token operator">:</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>emId<span class="token punctuation">,</span>      <span class="token literal-property property">isGroup</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token comment">//请求最近历史消息数</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> item<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>userExt <span class="token operator">==</span> <span class="token string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            item<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>userExt <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>userExt<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">chatRecordList</span><span class="token operator">:</span> res<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token comment">// 消息监听</span>    WebIM<span class="token punctuation">.</span>conn<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function-variable function">onOpened</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onClosed</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onTextMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> eObj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token string-property property">"[):]"</span><span class="token operator">:</span> <span class="token string">"ee_1.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:D]"</span><span class="token operator">:</span> <span class="token string">"ee_2.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[;)]"</span><span class="token operator">:</span> <span class="token string">"ee_3.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:-o]"</span><span class="token operator">:</span> <span class="token string">"ee_4.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:p]"</span><span class="token operator">:</span> <span class="token string">"ee_5.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(H)]"</span><span class="token operator">:</span> <span class="token string">"ee_6.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:@]"</span><span class="token operator">:</span> <span class="token string">"ee_7.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:s]"</span><span class="token operator">:</span> <span class="token string">"ee_8.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:$]"</span><span class="token operator">:</span> <span class="token string">"ee_9.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:(]"</span><span class="token operator">:</span> <span class="token string">"ee_10.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:'(]"</span><span class="token operator">:</span> <span class="token string">"ee_11.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[&lt;o)]"</span><span class="token operator">:</span> <span class="token string">"ee_12.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(a)]"</span><span class="token operator">:</span> <span class="token string">"ee_13.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[8o|]"</span><span class="token operator">:</span> <span class="token string">"ee_14.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[8-|]"</span><span class="token operator">:</span> <span class="token string">"ee_15.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[+o(]"</span><span class="token operator">:</span> <span class="token string">"ee_16.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[|-)]"</span><span class="token operator">:</span> <span class="token string">"ee_17.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:|]"</span><span class="token operator">:</span> <span class="token string">"ee_18.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[*-)]"</span><span class="token operator">:</span> <span class="token string">"ee_19.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:-#]"</span><span class="token operator">:</span> <span class="token string">"ee_20.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[^o)]"</span><span class="token operator">:</span> <span class="token string">"ee_21.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[:-*]"</span><span class="token operator">:</span> <span class="token string">"ee_22.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[8-)]"</span><span class="token operator">:</span> <span class="token string">"ee_23.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[del]"</span><span class="token operator">:</span> <span class="token string">"btn_del.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(|)]"</span><span class="token operator">:</span> <span class="token string">"ee_24.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(u)]"</span><span class="token operator">:</span> <span class="token string">"ee_25.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(S)]"</span><span class="token operator">:</span> <span class="token string">"ee_26.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(*)]"</span><span class="token operator">:</span> <span class="token string">"ee_27.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(#)]"</span><span class="token operator">:</span> <span class="token string">"ee_28.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(R)]"</span><span class="token operator">:</span> <span class="token string">"ee_29.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(&#123;)]"</span><span class="token operator">:</span> <span class="token string">"ee_30.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(&#125;)]"</span><span class="token operator">:</span> <span class="token string">"ee_31.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(k)]"</span><span class="token operator">:</span> <span class="token string">"ee_32.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(F)]"</span><span class="token operator">:</span> <span class="token string">"ee_33.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(W)]"</span><span class="token operator">:</span> <span class="token string">"ee_34.png"</span><span class="token punctuation">,</span>          <span class="token string-property property">"[(D)]"</span><span class="token operator">:</span> <span class="token string">"ee_35.png"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        message<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>userExt <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>userExt<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> emojs <span class="token operator">=</span> message<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\[(.+?)\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token string">"jfjjgajANFJJCMKNVBNNWXCM,,,,,;;oifejf"</span> <span class="token operator">+</span>            eObj<span class="token punctuation">[</span>arr<span class="token punctuation">]</span> <span class="token operator">+</span>            <span class="token string">"jfjjgajANFJJCMKNVBNNWXCM,,,,,;;oifejf"</span>          <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        emojs <span class="token operator">=</span> emojs<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"jfjjgajANFJJCMKNVBNNWXCM,,,,,;;oifejf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        emojs <span class="token operator">=</span> emojs<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> item<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> emojs_ <span class="token operator">=</span> emojs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">".png"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>item <span class="token operator">=</span> <span class="token string">"./faces/"</span> <span class="token operator">+</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> item<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        message<span class="token punctuation">.</span>data <span class="token operator">=</span> emojs_<span class="token punctuation">;</span>        that<span class="token punctuation">.</span><span class="token function">updateMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onEmojiMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onPictureMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        that<span class="token punctuation">.</span><span class="token function">updateMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onCmdMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onAudioMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onLocationMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onFileMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onCustomMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onVideoMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"privateVideo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">url</span><span class="token operator">:</span> message<span class="token punctuation">.</span>url<span class="token punctuation">,</span>          <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">Accept</span><span class="token operator">:</span> <span class="token string">"audio/mp4"</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token function-variable function">onFileDownloadComplete</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> objectURL <span class="token operator">=</span> WebIM<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseDownloadResponse</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>              conn<span class="token punctuation">,</span>              response            <span class="token punctuation">)</span><span class="token punctuation">;</span>            node<span class="token punctuation">.</span>src <span class="token operator">=</span> objectURL<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token function-variable function">onFileDownloadError</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        WebIM<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> option<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onPresence</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onRoster</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onInviteMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onOnline</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onOffline</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onError</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onBlacklistUpdate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onRecallMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onReceivedMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onDeliveredMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onReadMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onCreateGroup</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onMutedMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">onChannelMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onUnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">chatRecordList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 环信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序使用svga</title>
      <link href="/2022/10/12/xiao-cheng-xu-shi-yong-svga/"/>
      <url>/2022/10/12/xiao-cheng-xu-shi-yong-svga/</url>
      
        <content type="html"><![CDATA[<blockquote><p>安装代码包<br>代码内引入使用<br>预备 canvas 画布<br>开始播放</p></blockquote><h3 id="1、安装代码包"><a href="#1、安装代码包" class="headerlink" title="1、安装代码包"></a>1、安装代码包</h3><p><a href="%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8svga/https://github.com/hanshuang-ai/svgaplayer-weapp">资源包</a></p><img src="/2022/10/12/xiao-cheng-xu-shi-yong-svga/svga.png" class="" title="使用说明"><h3 id="2、代码内引入"><a href="#2、代码内引入" class="headerlink" title="2、代码内引入"></a>2、代码内引入</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> Parser<span class="token punctuation">,</span> Player <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./js/svgaplayer.weapp.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、预备-canvas-画布"><a href="#3、预备-canvas-画布" class="headerlink" title="3、预备 canvas 画布"></a>3、预备 canvas 画布</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 礼物特效组件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2d<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;showGiftCanvas&#125;&#125;<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;giftListCanvas&#125;&#125;<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>for-item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>for-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;item.id&#125;&#125;<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>giftCanvas<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、加载资源开始使用"><a href="#4、加载资源开始使用" class="headerlink" title="4、加载资源开始使用"></a>4、加载资源开始使用</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//礼物弹幕</span><span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">"sendgift"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  textObj<span class="token punctuation">.</span>_type <span class="token operator">=</span> type<span class="token punctuation">;</span>  textObj<span class="token punctuation">.</span>timeID <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>textObj<span class="token punctuation">)</span><span class="token punctuation">;</span>  that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">messageChat</span><span class="token operator">:</span> arr<span class="token punctuation">,</span>    <span class="token literal-property property">toVview</span><span class="token operator">:</span> textObj<span class="token punctuation">.</span>timeID<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 礼物特效</span>  <span class="token keyword">let</span> arr1 <span class="token operator">=</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>giftListCanvas<span class="token punctuation">;</span> <span class="token comment">//礼物特效数组</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>ggif<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"svga"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    arr1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token literal-property property">ggif</span><span class="token operator">:</span> t<span class="token punctuation">.</span>ggif<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">giftListCanvas</span><span class="token operator">:</span> arr1<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 画布容器     * 礼物资源     */</span>    <span class="token keyword">let</span> <span class="token function-variable function">svgaPlay</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> ggif</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">showGiftCanvas</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//是否显示礼物动画画布</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      player<span class="token punctuation">.</span>loops <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//循环1次</span>      player<span class="token punctuation">.</span>fillMode <span class="token operator">=</span> <span class="token string">"Forward"</span><span class="token punctuation">;</span> <span class="token comment">//播放结束后保留最后一帧</span>      player<span class="token punctuation">.</span>clearsAfterStop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//播放结束后清空画布</span>      <span class="token keyword">await</span> player<span class="token punctuation">.</span><span class="token function">setCanvas</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> videoItem <span class="token operator">=</span> <span class="token keyword">await</span> parser<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>ggif<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">await</span> player<span class="token punctuation">.</span><span class="token function">setVideoItem</span><span class="token punctuation">(</span>videoItem<span class="token punctuation">)</span><span class="token punctuation">;</span>      player<span class="token punctuation">.</span><span class="token function">startAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 礼物播放完的监听</span>      player<span class="token punctuation">.</span><span class="token function">onFinished</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        arr1<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//数组内移除第一项，继续播放</span>        that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">showGiftCanvas</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          <span class="token literal-property property">giftListCanvas</span><span class="token operator">:</span> arr1<span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">svgaPlay</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ggif<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">svgaPlay</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ggif<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    wx<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"暂不支持"</span><span class="token punctuation">,</span>      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 动效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序分包</title>
      <link href="/2022/10/12/wei-xin-xiao-cheng-xu-fen-bao/"/>
      <url>/2022/10/12/wei-xin-xiao-cheng-xu-fen-bao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"pages/index/index"</span><span class="token punctuation">,</span>    <span class="token string">"pages/search/search"</span><span class="token punctuation">,</span>    <span class="token string">"pages/serviceH5/serviceH5"</span><span class="token punctuation">,</span>    <span class="token string">"pages/Recharge/Recharge"</span><span class="token punctuation">,</span>    <span class="token string">"pages/blindBox/blindBox"</span><span class="token punctuation">,</span>    <span class="token string">"pages/login"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"window"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"backgroundTextStyle"</span><span class="token operator">:</span> <span class="token string">"light"</span><span class="token punctuation">,</span>    <span class="token property">"navigationBarBackgroundColor"</span><span class="token operator">:</span> <span class="token string">"#fff"</span><span class="token punctuation">,</span>    <span class="token property">"navigationBarTitleText"</span><span class="token operator">:</span> <span class="token string">"Weixin"</span><span class="token punctuation">,</span>    <span class="token property">"navigationBarTextStyle"</span><span class="token operator">:</span> <span class="token string">"black"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"style"</span><span class="token operator">:</span> <span class="token string">"v2"</span><span class="token punctuation">,</span>  <span class="token property">"sitemapLocation"</span><span class="token operator">:</span> <span class="token string">"sitemap.json"</span><span class="token punctuation">,</span>  <span class="token property">"lazyCodeLoading"</span><span class="token operator">:</span> <span class="token string">"requiredComponents"</span><span class="token punctuation">,</span>  <span class="token property">"subpackages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token property">"root"</span><span class="token operator">:</span> <span class="token string">"roomInfo"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"roomInfo"</span><span class="token punctuation">,</span>      <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"roominfo/roomInfo"</span><span class="token punctuation">,</span> <span class="token string">"chhat/chat"</span><span class="token punctuation">,</span> <span class="token string">"chatList/chatList"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>app.json文件配置subpackages，数组方式，分多少包就配置多少项</code><br><strong>注意：小程序目前总包大小 20M，每个分包最大 2M</strong></p><img src="/2022/10/12/wei-xin-xiao-cheng-xu-fen-bao/fenbao.png" class="" title="小程序分包目录结构">]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue打包</title>
      <link href="/2022/10/11/vue-da-bao/"/>
      <url>/2022/10/11/vue-da-bao/</url>
      
        <content type="html"><![CDATA[<h3 id="1、生产环境的项目，我们隐藏-log-信息"><a href="#1、生产环境的项目，我们隐藏-log-信息" class="headerlink" title="1、生产环境的项目，我们隐藏 log 信息"></a>1、生产环境的项目，我们隐藏 log 信息</h3><blockquote><p>引入 babel-plugin-transform-remove-console 插件<br>vue 项目内创建 babel.config.js 文件</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// babel.config.js</span><span class="token keyword">const</span> prodPlugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  prodPlugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"transform-remove-console"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"@vue/cli-plugin-babel/preset"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>prodPlugins<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、打包时，文件添加其他标识"><a href="#2、打包时，文件添加其他标识" class="headerlink" title="2、打包时，文件添加其他标识"></a>2、打包时，文件添加其他标识</h3><p><code>我们可以灵活运用，将时间戳改为版本号、tag等</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> Version <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*(.&#123;8&#125;)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token string">"./"</span><span class="token punctuation">,</span>  <span class="token comment">//   更改js文件</span>  <span class="token literal-property property">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">js/[name].</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>Version<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token literal-property property">chunkFilename</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">js/[name].</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>Version<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//   更改css文件</span>  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">extract</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">static/css/[name].</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>Version<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.css</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      <span class="token literal-property property">chunkFilename</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">static/css/[name].</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>Version<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.css</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 打包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue环境配置</title>
      <link href="/2022/10/11/vue-huan-jing-pei-zhi/"/>
      <url>/2022/10/11/vue-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>根据项目需求创建.env.XXX 环境文件<br>文件内使用<br>package.json 文件 javascript 配置运行</p></blockquote><p><code>本文使用开发、测试、生产3种环境</code></p><h3 id="1、根据项目需求创建-env-XXX-环境文件"><a href="#1、根据项目需求创建-env-XXX-环境文件" class="headerlink" title="1、根据项目需求创建.env.XXX 环境文件"></a>1、根据项目需求创建.env.XXX 环境文件</h3><p><code>根据VUE_APP_CURRENTMODE进行package.json javascript运行配置</code><br><code>根据NODE_ENV进行环境判断</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 开发环境</span><span class="token comment">// .env.development</span><span class="token constant">NODE_ENV</span> <span class="token operator">=</span> <span class="token string">"development"</span><span class="token punctuation">;</span><span class="token constant">VUE_APP_CURRENTMODE</span> <span class="token operator">=</span> <span class="token string">"dev"</span><span class="token punctuation">;</span><span class="token constant">VUE_APP_BASE_URL</span> <span class="token operator">=</span> <span class="token string">"https://xxx.com"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 测试环境</span><span class="token comment">// .env.test</span><span class="token constant">NODE_ENV</span> <span class="token operator">=</span> <span class="token string">"test"</span><span class="token punctuation">;</span><span class="token constant">VUE_APP_CURRENTMODE</span> <span class="token operator">=</span> <span class="token string">"test"</span><span class="token punctuation">;</span><span class="token constant">VUE_APP_BASE_URL</span> <span class="token operator">=</span> <span class="token string">"https://xxx.com"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 生产环境</span><span class="token comment">// .env.production</span><span class="token constant">NODE_ENV</span> <span class="token operator">=</span> <span class="token string">"production"</span><span class="token punctuation">;</span><span class="token constant">VUE_APP_CURRENTMODE</span> <span class="token operator">=</span> <span class="token string">"prod"</span><span class="token punctuation">;</span><span class="token constant">VUE_APP_BASE_URL</span> <span class="token operator">=</span> <span class="token string">"https://xxx.com"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、文件内使用"><a href="#2、文件内使用" class="headerlink" title="2、文件内使用"></a>2、文件内使用</h3><p>举例在 vueStore 内定义 baseURL</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">"vuex"</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">baseURL</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_URL</span><span class="token punctuation">,</span>    <span class="token literal-property property">callBackURL</span><span class="token operator">:</span>      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span>        <span class="token operator">?</span> <span class="token string">"xxx"</span>        <span class="token operator">:</span> <span class="token string">"xxx"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、package-json-文件-javascript-配置运行"><a href="#3、package-json-文件-javascript-配置运行" class="headerlink" title="3、package.json 文件 javascript 配置运行"></a>3、package.json 文件 javascript 配置运行</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span>  <span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string-property property">"serve"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service serve --mode development"</span><span class="token punctuation">,</span>    <span class="token string-property property">"serve:dev"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service serve --mode dev"</span><span class="token punctuation">,</span>    <span class="token string-property property">"build"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build"</span><span class="token punctuation">,</span>    <span class="token string-property property">"build:test"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build --mode test"</span><span class="token punctuation">,</span>    <span class="token string-property property">"build:pro"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build --mode prod"</span><span class="token punctuation">,</span>    <span class="token string-property property">"build:dev"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build --mode dev"</span><span class="token punctuation">,</span>    <span class="token string-property property">"lint"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service lint"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue过滤器</title>
      <link href="/2022/10/11/vue-guo-lu-qi/"/>
      <url>/2022/10/11/vue-guo-lu-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="1、全局过滤器"><a href="#1、全局过滤器" class="headerlink" title="1、全局过滤器"></a>1、全局过滤器</h3><blockquote><p>单起一个 js 文件，编写函数<br>main.js 内进行配置<br>组件内使用</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// filter.js</span><span class="token keyword">let</span> <span class="token function-variable function">random30</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    number <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span> <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> number<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span> random30 <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// main.js</span><span class="token keyword">import</span> filter <span class="token keyword">from</span> <span class="token string">"./api/filter"</span><span class="token punctuation">;</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=></span> Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> filter<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">// 组件内使用<span class="token comment">&lt;!-- 直播间人数，如果不满足30人，生成30-50的随机数 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> #999999</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  &#123;&#123; list.roomPeopleTotal | random30 &#125;&#125;人<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>个人也建议在项目内使用全局过滤器，方便统一维护</code></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 过滤器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>base64转文件</title>
      <link href="/2022/09/28/base64-zhuan-wen-jian/"/>
      <url>/2022/09/28/base64-zhuan-wen-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="base64-转文件"><a href="#base64-转文件" class="headerlink" title="base64 转文件"></a>base64 转文件</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">dataURLtoFile</span><span class="token punctuation">(</span><span class="token parameter">dataurl<span class="token punctuation">,</span> filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> dataurl<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    mime <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">:(.*?);</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> bstr <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    n <span class="token operator">=</span> bstr<span class="token punctuation">.</span>length<span class="token punctuation">,</span>    u8arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    u8arr<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> bstr<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>u8arr<span class="token punctuation">]</span><span class="token punctuation">,</span> filename<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> mime<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 封装函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base64 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elementUI</title>
      <link href="/2022/09/26/elementui/"/>
      <url>/2022/09/26/elementui/</url>
      
        <content type="html"><![CDATA[<h3 id="1、表格表头居中"><a href="#1、表格表头居中" class="headerlink" title="1、表格表头居中"></a>1、表格表头居中</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// :header-cell-style="&#123; textAlign: 'center' &#125;"  表头居中</span><span class="token comment">// :cell-style="&#123; textAlign: 'center'&#125;"  单元格居中</span><span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> border style<span class="token operator">=</span><span class="token string">"width: 100%;margin-top: 40px;"</span> height<span class="token operator">=</span><span class="token string">"650"</span> <span class="token literal-property property">stripe</span> <span class="token operator">:</span>header<span class="token operator">-</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"&#123; textAlign: 'center' &#125;"</span> <span class="token operator">:</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"&#123; textAlign: 'center'&#125;"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"date"</span> label<span class="token operator">=</span><span class="token string">"表头"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column fixed<span class="token operator">=</span><span class="token string">"right"</span> label<span class="token operator">=</span><span class="token string">"操作"</span> width<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"handleClick(scope.row)"</span> type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>查看<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>                <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span> @click<span class="token operator">=</span><span class="token string">"edit()"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、表格分页"><a href="#2、表格分页" class="headerlink" title="2、表格分页"></a>2、表格分页</h3><p><code>后端一次性返回所有数据</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 数据截取</span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>table        <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData.slice((pageControl.pageIndex-1)*(pageControl.limit),(pageControl.pageIndex)*(pageControl.limit)"</span>        border style<span class="token operator">=</span><span class="token string">"width: 100%;margin-top: 40px;"</span> height<span class="token operator">=</span><span class="token string">"650"</span> stripe        v<span class="token operator">-</span>loading<span class="token operator">=</span><span class="token string">"loading"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"date"</span> label<span class="token operator">=</span><span class="token string">"功能域"</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"name"</span> label<span class="token operator">=</span><span class="token string">"功能类"</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column fixed<span class="token operator">=</span><span class="token string">"right"</span> label<span class="token operator">=</span><span class="token string">"操作"</span> width<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"handleClick(scope.row)"</span> type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>查看<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span> @click<span class="token operator">=</span><span class="token string">"edit()"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span>    <span class="token comment">// 分页</span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>pagination        @size<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>        @current<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>        <span class="token operator">:</span>current<span class="token operator">-</span>page<span class="token operator">=</span><span class="token string">"pageControl.pageIndex"</span>        <span class="token operator">:</span>page<span class="token operator">-</span>sizes<span class="token operator">=</span><span class="token string">"[10, 20, 50, 100]"</span>        <span class="token operator">:</span>page<span class="token operator">-</span>size<span class="token operator">=</span><span class="token string">"pageControl.limit"</span>        layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>        <span class="token operator">:</span>total<span class="token operator">=</span><span class="token string">"total"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>pagination<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"List"</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">value1</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token literal-property property">options1</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">checked</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token literal-property property">inputValue</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token literal-property property">tableData</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">tableRowData</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">CheckTableRowData</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token literal-property property">EditTableRowData</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token literal-property property">editValue</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">//编辑行时的数据存放</span>      <span class="token literal-property property">searchData</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">vehicleFunctionId</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token literal-property property">vehicleFunctionName</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token literal-property property">functionDomainId</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token literal-property property">functionClassId</span><span class="token operator">:</span> <span class="token string">''</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token literal-property property">pageControl</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">pageIndex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment">//页码</span>        <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token comment">//页容量</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">promise_post</span><span class="token punctuation">(</span><span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">'数据'</span><span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tableData <span class="token operator">=</span> res <span class="token comment">//直接赋值所有数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>length        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">handleSizeChange</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>pageControl<span class="token punctuation">.</span>limit <span class="token operator">=</span> value  <span class="token comment">//更改页容量</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">handleCurrentChange</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>pageControl<span class="token punctuation">.</span>pageIndex<span class="token operator">=</span>value  <span class="token comment">//更改页码</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、对单元格数据进行处理"><a href="#3、对单元格数据进行处理" class="headerlink" title="3、对单元格数据进行处理"></a>3、对单元格数据进行处理</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>el<span class="token operator">-</span>table       <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData.slice((pageControl.pageIndex-1)*(pageControl.limit),(pageControl.pageIndex)*(pageControl.limit)"</span>       border style<span class="token operator">=</span><span class="token string">"width: 100%;margin-top: 40px;"</span> height<span class="token operator">=</span><span class="token string">"650"</span> stripe       v<span class="token operator">-</span>loading<span class="token operator">=</span><span class="token string">"loading"</span> <span class="token operator">:</span>header<span class="token operator">-</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"&#123; textAlign: 'center' &#125;"</span> <span class="token operator">:</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"&#123; textAlign: 'center'&#125;"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"date"</span> label<span class="token operator">=</span><span class="token string">"功能域"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>     <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"name"</span> label<span class="token operator">=</span><span class="token string">"功能类"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>     <span class="token comment">// 对单元格数据进行处理，后端返回1/2/3，在后端返回的基础上前端自行添加LV字符串</span>     <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"vehicleFunctionLevel"</span> label<span class="token operator">=</span><span class="token string">"功能等级"</span><span class="token operator">></span>       <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token constant">LV</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>scope<span class="token punctuation">.</span>row<span class="token punctuation">.</span>vehicleFunctionLevel<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>     <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column fixed<span class="token operator">=</span><span class="token string">"right"</span> label<span class="token operator">=</span><span class="token string">"操作"</span> width<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">></span>       <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"handleClick(scope.row)"</span> type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>查看<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>         <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"text"</span> size<span class="token operator">=</span><span class="token string">"small"</span> @click<span class="token operator">=</span><span class="token string">"edit()"</span><span class="token operator">></span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>       <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、级联选择器自定义-children"><a href="#4、级联选择器自定义-children" class="headerlink" title="4、级联选择器自定义 children"></a>4、级联选择器自定义 children</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在props里进行设置</span><span class="token operator">&lt;</span>el<span class="token operator">-</span>cascader  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"value"</span>  <span class="token operator">:</span>options<span class="token operator">=</span><span class="token string">"options"</span>  <span class="token operator">:</span>props<span class="token operator">=</span><span class="token string">"&#123; expandTrigger: 'hover',label:'name',value:'id',children:'childFunctionList' &#125;"</span>  @change<span class="token operator">=</span><span class="token string">"handleChangeSelect"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>cascader<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、级联选择器-change-失效的问题"><a href="#5、级联选择器-change-失效的问题" class="headerlink" title="5、级联选择器@change 失效的问题"></a>5、级联选择器@change 失效的问题</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>el<span class="token operator">-</span>cascader  filterable  v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"value12"</span>  <span class="token operator">:</span>options<span class="token operator">=</span><span class="token string">"options"</span>  <span class="token operator">:</span>props<span class="token operator">=</span><span class="token string">"&#123; expandTrigger: 'hover'&#125;"</span>  @change<span class="token operator">=</span><span class="token string">"handleChangeSelect"</span>  style<span class="token operator">=</span><span class="token string">"width: 600px"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>cascader<span class="token operator">></span><span class="token comment">// 绝大部分情况下，@change失效都是由于我们的数据格式错误，虽然可以显示，但是与官网案例不符，我们需要自己改造</span><span class="token comment">// 尤其需要注意的是children没有下一级的时候需要删除该key</span><span class="token function">changeKey</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// arr[i].value = arr[i].id</span>        <span class="token comment">// arr[i].label = arr[i].name</span>        <span class="token comment">// arr[i].children = arr[i].childFunctionList</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>childFunctionList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">changeKey</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>childFunctionList<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">delete</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>childFunctionList        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> arr<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、日期选择器-基于-el-date-picker-的前一天和后一天"><a href="#5、日期选择器-基于-el-date-picker-的前一天和后一天" class="headerlink" title="5、日期选择器 基于 el-date-picker 的前一天和后一天"></a>5、日期选择器 基于 el-date-picker 的前一天和后一天</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>block<span class="token punctuation">"</span></span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">align-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">align-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-date-picker</span><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchDate<span class="token punctuation">"</span></span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span><span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>选择日期<span class="token punctuation">"</span></span><span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeDate<span class="token punctuation">"</span></span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-right</span><span class="token punctuation">:</span> 30px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-date-picker</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nextAndPre<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>beforeDate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>前一天<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>afterDate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>后一天<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copyContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 复制排班 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>paste<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 粘贴排班 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copyAndPaste<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 复制并排满当周 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// setDate() 方法将月份中的某一天设置为日期对象。</span><span class="token comment">//前一天</span>   <span class="token function">beforeDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>searchDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>searchDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>searchDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>   <span class="token comment">//后一天</span>   <span class="token function">afterDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>searchDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>searchDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>searchDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6、表格-type-”selection”-清除选择"><a href="#6、表格-type-”selection”-清除选择" class="headerlink" title="6、表格 type=”selection” 清除选择"></a>6、表格 type=”selection” 清除选择</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"projectList"</span> height<span class="token operator">=</span><span class="token string">"400"</span> @selection<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleSelectionChange_"</span> ref<span class="token operator">=</span><span class="token string">"multipleTable"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"showAssociatedItems"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column type<span class="token operator">=</span><span class="token string">"selection"</span> width<span class="token operator">=</span><span class="token string">"55"</span> <span class="token operator">:</span>selectable<span class="token operator">=</span><span class="token string">'checkboxT'</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!isRemoveAssociation"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column type<span class="token operator">=</span><span class="token string">"selection"</span> width<span class="token operator">=</span><span class="token string">"55"</span> <span class="token operator">:</span>selectable<span class="token operator">=</span><span class="token string">'checkboxT1'</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">=</span><span class="token string">"isRemoveAssociation"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column label<span class="token operator">=</span><span class="token string">"项目"</span> prop<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>上面的代码示例，要实现的效果是点击不同的按钮，在展现的表格中可以进行不同的多选</code><br><em>但遇到的问题是：表格在重新展示时，上一次选择的数据虽然要往接口传输的已经清空，但 UI 上还在回显</em></p><p><strong>解决办法</strong><br>在 UI 消失的时候，清空选择</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">showAssociatedItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>showAssociatedItems<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>multipleTable<span class="token punctuation">.</span><span class="token function">clearSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7、表格列项文字溢出-tooltip-提示"><a href="#7、表格列项文字溢出-tooltip-提示" class="headerlink" title="7、表格列项文字溢出 tooltip 提示"></a>7、表格列项文字溢出 tooltip 提示</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//:show-overflow-tooltip="true"</span><span class="token operator">&lt;</span>el<span class="token operator">-</span>table        <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData.slice((pageControl.pageIndex - 1) * (pageControl.limit), (pageControl.pageIndex) * (pageControl.limit)"</span>        <span class="token operator">:</span>header<span class="token operator">-</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"&#123; textAlign: 'center' &#125;"</span>        style<span class="token operator">=</span><span class="token string">"width: 100%;margin-bottom: 20px;margin-top: 40px;"</span> row<span class="token operator">-</span>key<span class="token operator">=</span><span class="token string">"id"</span> border height<span class="token operator">=</span><span class="token string">"70vh"</span>        <span class="token operator">:</span>tree<span class="token operator">-</span>props<span class="token operator">=</span><span class="token string">"&#123; children: 'childFunctionList', hasChildren: 'hasChildren' &#125;"</span> v<span class="token operator">-</span>loading<span class="token operator">=</span><span class="token string">"loading"</span>        <span class="token keyword">default</span><span class="token operator">-</span>expand<span class="token operator">-</span>all<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column prop<span class="token operator">=</span><span class="token string">"id"</span> label<span class="token operator">=</span><span class="token string">"功能ID"</span> <span class="token operator">:</span>show<span class="token operator">-</span>overflow<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elementUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基本命令</title>
      <link href="/2022/09/26/git-ji-ben-ming-ling/"/>
      <url>/2022/09/26/git-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="1、查看项目远程仓库地址"><a href="#1、查看项目远程仓库地址" class="headerlink" title="1、查看项目远程仓库地址"></a>1、查看项目远程仓库地址</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 第一种方式</span>git remote <span class="token operator">-</span>v<span class="token comment">// 第二种方式</span>git remote get<span class="token operator">-</span>url origin<span class="token comment">// 第三种方式</span>直接在该项目<span class="token punctuation">.</span>git目录下config文件内查看<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2022/09/26/git-ji-ben-ming-ling/1.png" class="" title="查看项目远程仓库地址"><h3 id="2、git-diff"><a href="#2、git-diff" class="headerlink" title="2、git diff"></a>2、git diff</h3><h4 id="2-1-尚未缓存的改动：git-diff"><a href="#2-1-尚未缓存的改动：git-diff" class="headerlink" title="2.1 尚未缓存的改动：git diff"></a>2.1 尚未缓存的改动：git diff</h4><img src="/2022/09/26/git-ji-ben-ming-ling/2.png" class="" title="查看项目远程仓库地址"><h3 id="2-2-查看已缓存的改动：-git-diff-–cached"><a href="#2-2-查看已缓存的改动：-git-diff-–cached" class="headerlink" title="2.2 查看已缓存的改动： git diff –cached"></a>2.2 查看已缓存的改动： git diff –cached</h3><img src="/2022/09/26/git-ji-ben-ming-ling/3.png" class="" title="查看项目远程仓库地址"><h3 id="2-3-显示暂存区和工作区的差异-git-diff-file"><a href="#2-3-显示暂存区和工作区的差异-git-diff-file" class="headerlink" title="2.3 显示暂存区和工作区的差异: git diff [file]"></a>2.3 显示暂存区和工作区的差异: git diff [file]</h3><h3 id="2-4-显示暂存区和上一次提交-commit-的差异-git-diff-–cached-file-或者-git-diff-–staged-file"><a href="#2-4-显示暂存区和上一次提交-commit-的差异-git-diff-–cached-file-或者-git-diff-–staged-file" class="headerlink" title="2.4 显示暂存区和上一次提交(commit)的差异: git diff –cached [file] 或者 git diff –staged [file]"></a>2.4 显示暂存区和上一次提交(commit)的差异: git diff –cached [file] 或者 git diff –staged [file]</h3><h3 id="2-5-显示两次提交之间的差异-git-diff-first-branch-…-second-branch"><a href="#2-5-显示两次提交之间的差异-git-diff-first-branch-…-second-branch" class="headerlink" title="2.5 显示两次提交之间的差异: git diff [first-branch]…[second-branch]"></a>2.5 显示两次提交之间的差异: git diff [first-branch]…[second-branch]</h3><h3 id="3、git-clone-–recursive"><a href="#3、git-clone-–recursive" class="headerlink" title="3、git clone –recursive"></a>3、git clone –recursive</h3><h4 id="3-1-git-clone"><a href="#3-1-git-clone" class="headerlink" title="3.1 git clone"></a>3.1 git clone</h4><p><code>git clone --recursive</code> 是一个 Git 命令，用于克隆一个包含子模块（submodule）的仓库。子模块是指在一个 Git 仓库中嵌套的另外一个独立的 Git 仓库。当你在一个 Git 仓库中使用子模块时，你可以将外部仓库作为你的主仓库的一部分，这对于管理项目的依赖或者将公共代码库嵌入到你的项目中是非常有用的。使用 git clone –recursive 命令时，Git 会在克隆主仓库的同时递归地克隆所有子模块的仓库，使得你能够获得完整的项目代码，包括所有子模块的代码。</p><h4 id="3-2-已经克隆了一个仓库但没有使用-–recursive，可以使用以下命令来初始化和更新子模块"><a href="#3-2-已经克隆了一个仓库但没有使用-–recursive，可以使用以下命令来初始化和更新子模块" class="headerlink" title="3.2 已经克隆了一个仓库但没有使用 –recursive，可以使用以下命令来初始化和更新子模块"></a>3.2 已经克隆了一个仓库但没有使用 –recursive，可以使用以下命令来初始化和更新子模块</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">git submodule update <span class="token operator">--</span>init <span class="token operator">--</span>recursive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-3-git-submoudle"><a href="#3-3-git-submoudle" class="headerlink" title="3.3 git submoudle"></a>3.3 git submoudle</h4><p>Git 子模块（submodule）是 Git 中用于管理项目依赖的一种机制。它允许将一个 Git 仓库作为另一个仓库的子目录，使得一个仓库可以引用另一个仓库的特定版本，而不是将其完整地复制到主仓库中。</p><p>使用子模块，可以轻松地将外部项目或库集成到主项目中，同时保持各个项目的独立性和版本控制。</p><p>在添加子模块时，可以使用 <code>git submodule add</code> 命令指定子模块的远程仓库地址和在主项目中的存放路径。例如：</p><pre class="line-numbers language-none"><code class="language-none">git submodule add https:&#x2F;&#x2F;github.com&#x2F;example&#x2F;submodule.git path&#x2F;to&#x2F;submodule<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后，主项目会记录子模块的信息，并在主项目的提交中包含子模块的快照。其他人在克隆主项目时，可以通过 <code>git submodule update --init</code> 命令初始化并下载子模块的内容。</p><p>要更新子模块到最新版本，可以使用 <code>git submodule update --remote</code> 命令。</p><p>子模块虽然提供了便利的依赖管理机制，但也需要注意一些注意事项。主要包括：</p><ol><li>注意及时更新子模块，以确保使用最新版本。</li><li>如果主项目依赖的子模块有更新，需要在主项目中提交子模块的更新，并通知其他开发者及时更新子模块。</li><li>子模块指向的是特定版本，不会自动跟随子模块的远程仓库更新，需要手动同步。</li></ol><p>总之，Git 子模块是一个有用的工具，可以帮助项目管理复杂的依赖关系，并在合适的情况下使用它来使项目组织更加清晰和模块化。</p><h3 id="4、-git-tag"><a href="#4、-git-tag" class="headerlink" title="4、 git tag"></a>4、 git tag</h3><p>在 Git 中打标签（Tag）是为了标记某个特定的提交（Commit）或里程碑，以便于日后更容易回溯和查找。你可以使用以下命令在 Git 中打标签：</p><ol><li><p>打附注标签（Annotated Tag）：</p><pre class="line-numbers language-none"><code class="language-none">git tag -a 标签名 -m &quot;标签描述信息&quot; 提交ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，<code>标签名</code>是你为标签指定的名称，<code>标签描述信息</code>是关于该标签的一些说明文字，<code>提交ID</code>是你想要标记的特定提交的 SHA-1 值。</p></li><li><p>打轻量标签（Lightweight Tag）：</p><pre class="line-numbers language-none"><code class="language-none">git tag 标签名 提交ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用这个命令可以快速在某个提交上打上标签，但它不会保存额外的信息。</p></li><li><p>查看标签：</p><pre class="line-numbers language-none"><code class="language-none">git tag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会列出所有已经存在的标签。</p></li><li><p>查看某个特定标签的信息：</p><pre class="line-numbers language-none"><code class="language-none">git show 标签名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用此命令可以查看特定标签的详细信息和关联的提交。</p></li><li><p>推送标签到远程仓库：</p><pre class="line-numbers language-none"><code class="language-none">git push origin 标签名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你希望将本地的标签推送到远程仓库，可以使用此命令。</p></li><li><p>推送所有标签到远程仓库：</p><pre class="line-numbers language-none"><code class="language-none">git push origin --tags<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你想一次性推送所有本地标签到远程仓库，可以使用此命令。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 基本命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode专题</title>
      <link href="/2022/09/16/leetcode-zhuan-ti/"/>
      <url>/2022/09/16/leetcode-zhuan-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="1、回文数"><a href="#1、回文数" class="headerlink" title="1、回文数"></a>1、回文数</h2><p><code>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 例如：0~9,121等非负数</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">isPalindrome</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"false1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> str <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> str1 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>str1 <span class="token operator">==</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"false2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、数组内两数求和"><a href="#2、数组内两数求和" class="headerlink" title="2、数组内两数求和"></a>2、数组内两数求和</h2><p><code>数组内两数之和等于目标值，且同一个索引只能出现一次。例如：[2,7,11] 9</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token keyword">const</span> sumCache <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> value <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 计算差值</span>    <span class="token keyword">const</span> diff <span class="token operator">=</span> target <span class="token operator">-</span> value<span class="token punctuation">;</span>    <span class="token comment">// 如果差值已经存在过，直接返回对应的索引</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> sumCache<span class="token punctuation">[</span>diff<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span>sumCache<span class="token punctuation">[</span>diff<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 否则存起来</span>      sumCache<span class="token punctuation">[</span>value<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、删除有序数组中的重复项"><a href="#3、删除有序数组中的重复项" class="headerlink" title="3、删除有序数组中的重复项"></a>3、删除有序数组中的重复项</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  nums <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token keyword">return</span> len<span class="token punctuation">,</span> nums<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、寻找两个正序数组的中位数"><a href="#4、寻找两个正序数组的中位数" class="headerlink" title="4、寻找两个正序数组的中位数"></a>4、寻找两个正序数组的中位数</h2><p><a href="leetcode%E4%B8%93%E9%A2%98/https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">链接地址</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">findMedianSortedArrays</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>nums1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>nums2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    num <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    num <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> num<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、整数反转"><a href="#5、整数反转" class="headerlink" title="5、整数反转"></a>5、整数反转</h2><p><a href="leetcode%E4%B8%93%E9%A2%98/https://leetcode-cn.com/problems/reverse-integer/">链接地址</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> string <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span>    string<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">"-"</span>      <span class="token operator">?</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">></span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span>        <span class="token operator">?</span> <span class="token number">0</span>        <span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>      <span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>          <span class="token punctuation">[</span><span class="token string">"-"</span><span class="token punctuation">]</span>            <span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>              <span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span>                <span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token operator">></span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span>      <span class="token operator">?</span> <span class="token number">0</span>      <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"-"</span><span class="token punctuation">]</span>          <span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>            <span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span>              <span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>          <span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> arr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解析URL</title>
      <link href="/2022/09/08/jie-xi-url/"/>
      <url>/2022/09/08/jie-xi-url/</url>
      
        <content type="html"><![CDATA[<p>在日常研发过程中，我们通常会根据URL地址以及参数进行业务判断，所以做了一下封装，方便使用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 解析URL</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">analysisURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[?&amp;][^?&amp;]+=[^?&amp;]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> tempArr <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> key <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> val <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      params<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> params<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 封装函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>microApp初探</title>
      <link href="/2022/08/31/microapp-chu-tan/"/>
      <url>/2022/08/31/microapp-chu-tan/</url>
      
        <content type="html"><![CDATA[<p><code>本项目采用microApp进行前端微服务的搭建，父应用采用的是vue3，子应用有2个，分别为vue2和vue3</code></p><p>项目代码地址：<a href="https://github.com/hanshuang-ai/testMicroApp">https://github.com/hanshuang-ai/testMicroApp</a></p><blockquote><p>1、创建父应用<br>2、创建子应用<br>3、创建子应用</p></blockquote><h3 id="1、父应用"><a href="#1、父应用" class="headerlink" title="1、父应用"></a>1、父应用</h3><h4 id="1-1-创建父应用"><a href="#1-1-创建父应用" class="headerlink" title="1.1 创建父应用"></a>1.1 创建父应用</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">vue create micro <span class="token comment">//选择vue3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-2-在父应用app-vue内添加router-view"><a href="#1-2-在父应用app-vue内添加router-view" class="headerlink" title="1.2 在父应用app.vue内添加router-view"></a>1.2 在父应用app.vue内添加router-view</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3-在父应用内添加载体"><a href="#1-3-在父应用内添加载体" class="headerlink" title="1.3 在父应用内添加载体"></a>1.3 在父应用内添加载体</h4><p><code>我自己起的名，因为需要有一个页面去承载子应用</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>    我的页面    <span class="token operator">&lt;</span>micro<span class="token operator">-</span>app name<span class="token operator">=</span><span class="token string">'app1'</span> url<span class="token operator">=</span><span class="token string">'http://localhost:8030/'</span> baseroute<span class="token operator">=</span><span class="token string">'/my-page'</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>micro<span class="token operator">-</span>app<span class="token operator">></span>   <span class="token comment">//子应用的地址  需要注意的是端口号必须指定</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">export</span> <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"myPage"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-4-父应用添加路由，指向刚才添加的载体页面"><a href="#1-4-父应用添加路由，指向刚才添加的载体页面" class="headerlink" title="1.4 父应用添加路由，指向刚才添加的载体页面"></a>1.4 父应用添加路由，指向刚才添加的载体页面</h4><p><code>父子应用的路由方式参考microApp官网，本项目父应用采用的history模式，子应用采用hash模式</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>createRouter<span class="token punctuation">,</span> createWebHistory<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue-router/dist/vue-router"</span><span class="token punctuation">;</span><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"Index"</span><span class="token punctuation">,</span> <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/Index'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">"/myPage"</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"myPage"</span><span class="token punctuation">,</span> <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/MyPage'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    routes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、创建子应用-vue2"><a href="#2、创建子应用-vue2" class="headerlink" title="2、创建子应用 vue2"></a>2、创建子应用 vue2</h3><blockquote><p>创建子应用<br>子应用内添加路由<br>在子应用内添加配置</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 需要注意的是：新vue创建的项目，在vue.config.js内进行配置</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> defineConfig <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@vue/cli-service'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">transpileDependencies</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8030</span><span class="token punctuation">,</span>  <span class="token comment">//端口一定要指定</span>    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string-property property">'Access-Control-Allow-Origin'</span><span class="token operator">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、创建子应用-vue3"><a href="#3、创建子应用-vue3" class="headerlink" title="3、创建子应用 vue3"></a>3、创建子应用 vue3</h3><blockquote><p>步骤同创建子应用 vue2</p></blockquote><p>·vue2和vue3添加路由的方式请见·</p>]]></content>
      
      
      <categories>
          
          <category> 库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微前端 </tag>
            
            <tag> microApp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2和3与vue-router的搭配</title>
      <link href="/2022/08/30/vue2-he-3-yu-vue-router-de-da-pei/"/>
      <url>/2022/08/30/vue2-he-3-yu-vue-router-de-da-pei/</url>
      
        <content type="html"><![CDATA[<h3 id="1、vue2"><a href="#1、vue2" class="headerlink" title="1、vue2"></a>1、vue2</h3><h4 id="1-1-安装vur-router"><a href="#1-1-安装vur-router" class="headerlink" title="1.1 安装vur-router"></a>1.1 安装vur-router</h4><p><code>由于最新版本暴露的变量名发生了改变，建议安装3.x版本</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npm install vue<span class="token operator">-</span>router@<span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-2-在App-vue文件下添加router-view"><a href="#1-2-在App-vue文件下添加router-view" class="headerlink" title="1.2 在App.vue文件下添加router-view"></a>1.2 在App.vue文件下添加router-view</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>router<span class="token operator">-</span>view <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3-在src目录下创建router文件夹，并在该文件夹下创建index-js"><a href="#1-3-在src目录下创建router文件夹，并在该文件夹下创建index-js" class="headerlink" title="1.3 在src目录下创建router文件夹，并在该文件夹下创建index.js"></a>1.3 在src目录下创建router文件夹，并在该文件夹下创建index.js</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Index"</span><span class="token punctuation">,</span>        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/Index'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">keywords</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>             <span class="token literal-property property">requireAuth</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">"history"</span><span class="token punctuation">,</span>    routes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-4-在main-js内引入并使用"><a href="#1-4-在main-js内引入并使用" class="headerlink" title="1.4 在main.js内引入并使用"></a>1.4 在main.js内引入并使用</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"./router"</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  router<span class="token punctuation">,</span>  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、vue3"><a href="#2、vue3" class="headerlink" title="2、vue3"></a>2、vue3</h3><h4 id="2-1-安装安装vur-router"><a href="#2-1-安装安装vur-router" class="headerlink" title="2.1 安装安装vur-router"></a>2.1 安装安装vur-router</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npm install vue<span class="token operator">-</span>router<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-2-在App-vue文件下添加router-view"><a href="#2-2-在App-vue文件下添加router-view" class="headerlink" title="2.2 在App.vue文件下添加router-view"></a>2.2 在App.vue文件下添加router-view</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 由于vue3对根元素数量没有限制，可以直接写在template里面</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-在src目录下创建router文件夹，并在该文件夹下创建index-js"><a href="#2-3-在src目录下创建router文件夹，并在该文件夹下创建index-js" class="headerlink" title="2.3 在src目录下创建router文件夹，并在该文件夹下创建index.js"></a>2.3 在src目录下创建router文件夹，并在该文件夹下创建index.js</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>createRouter<span class="token punctuation">,</span> createWebHashHistory<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue-router/dist/vue-router"</span><span class="token punctuation">;</span><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"Index"</span><span class="token punctuation">,</span> <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/Index'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    routes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-4-在main-js内引入并使用"><a href="#2-4-在main-js内引入并使用" class="headerlink" title="2.4 在main.js内引入并使用"></a>2.4 在main.js内引入并使用</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>createApp<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router"</span><span class="token punctuation">;</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> vue-router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue子传父与父传子的综合使用</title>
      <link href="/2022/07/12/vue-zi-chuan-fu-yu-fu-chuan-zi-de-zong-he-shi-yong/"/>
      <url>/2022/07/12/vue-zi-chuan-fu-yu-fu-chuan-zi-de-zong-he-shi-yong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>vue父传子props<br>子传父  子组件触发$emit(fn,data)，父组件接收@fn=FN(父组件内的方法)</p></blockquote><p>子组件</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div class&#x3D;&quot;operate&quot;&gt;    &lt;!-- i和data 是父组件传输过来的 --&gt;    &lt;i class&#x3D;&quot;el-icon-bottom&quot; @click&#x3D;&quot;toNext(i,data)&quot;&gt;&lt;&#x2F;i&gt;    &lt;i class&#x3D;&quot;el-icon-top&quot; @click&#x3D;&quot;toPrev(i,data)&quot;&gt;&lt;&#x2F;i&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;export default &#123;  name: &#39;sort&#39;,  props: &#123;    i: Number,    data: Array  &#125;,  methods: &#123;    toNext (index, data) &#123;      if (index &gt;&#x3D; data.length - 1) &#123;        index &#x3D; data.length - 1        this.$message(&#123;          message: &#39;已经到底&#39;,          type: &#39;warning&#39;        &#125;)      &#125; else &#123;        let arr &#x3D; data        let obj &#x3D; data[index]        arr[index] &#x3D; arr[index + 1]        arr[index + 1] &#x3D; obj        data &#x3D; arr        &#x2F;&#x2F; 设置updateData方法，并将data返回给父组件        this.$emit(&#39;updateData&#39;, data)      &#125;    &#125;,    toPrev (index, data) &#123;      if (index &lt;&#x3D; 0) &#123;        index &#x3D; data.length - 1        this.$message(&#123;          message: &#39;已经到顶&#39;,          type: &#39;warning&#39;        &#125;)      &#125; else &#123;        let arr &#x3D; data        let obj &#x3D; data[index]        arr[index] &#x3D; arr[index - 1]        arr[index - 1] &#x3D; obj        data &#x3D; arr        &#x2F;&#x2F; 设置updateData方法，并将data返回给父组件        this.$emit(&#39;updateData&#39;, data)      &#125;    &#125;  &#125;&#125;&lt;&#x2F;script&gt;&lt;style scoped lang&#x3D;&quot;scss&quot;&gt;.operate &#123;  i &#123;    margin-right: 20px;    &amp;:hover &#123;      cursor: pointer;    &#125;  &#125;&#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;!--新建与管理分组--&gt;  &lt;div&gt;    &lt;div class&#x3D;&quot;create&quot;&gt;      &lt;div @click&#x3D;&quot;showDialog&#x3D;true&quot;&gt;新建&lt;&#x2F;div&gt;      &lt;div @click&#x3D;&quot;showManage&#x3D;true&quot;&gt;管理&lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;    &lt;!--新建分组--&gt;    &lt;div&gt;      &lt;el-dialog :visible.sync&#x3D;&quot;showDialog&quot; title&#x3D;&quot;创建分组&quot; class&#x3D;&quot;dialog&quot;&gt;        &lt;el-input type&#x3D;&quot;text&quot;                  placeholder&#x3D;&quot;请输入内容&quot;                  v-model&#x3D;&quot;text&quot;                  maxlength&#x3D;&quot;6&quot;                  show-word-limit&gt;&lt;&#x2F;el-input&gt;        &lt;div class&#x3D;&quot;btnGroup&quot;&gt;          &lt;el-button type&#x3D;&quot;success&quot; @click&#x3D;&quot;Determine&quot;&gt;确定&lt;&#x2F;el-button&gt;          &lt;el-button type&#x3D;&quot;danger&quot; @click&#x3D;&quot;Cancel&quot;&gt;取消&lt;&#x2F;el-button&gt;        &lt;&#x2F;div&gt;      &lt;&#x2F;el-dialog&gt;    &lt;&#x2F;div&gt;    &lt;!--管理分组--&gt;    &lt;div&gt;      &lt;el-dialog :visible.sync&#x3D;&quot;showManage&quot; title&#x3D;&quot;管理分组&quot; class&#x3D;&quot;dialog&quot;&gt;        &lt;div v-for&#x3D;&quot;(manage,i) in manages&quot; :key&#x3D;&quot;i&quot; class&#x3D;&quot;manageItem&quot;&gt;          &lt;div&gt;&#123;&#123; manage.text &#125;&#125;&lt;&#x2F;div&gt;          &lt;!-- 将i和data传输给子组件，子组件做完操作后并返回  updateData接收子组件返回的数据，并对返回的数据在自身内做处理 --&gt;          &lt;sort :i&#x3D;&quot;i&quot; :data&#x3D;&quot;manages&quot; @updateData&#x3D;&quot;updateData&quot;&#x2F;&gt;        &lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;btnGroup&quot;&gt;          &lt;el-button type&#x3D;&quot;success&quot; @click&#x3D;&quot;DetermineManage&quot;&gt;确定&lt;&#x2F;el-button&gt;          &lt;el-button type&#x3D;&quot;danger&quot; @click&#x3D;&quot;CancelManage&quot;&gt;取消&lt;&#x2F;el-button&gt;        &lt;&#x2F;div&gt;      &lt;&#x2F;el-dialog&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;import Sort from &#39;@&#x2F;components&#x2F;components&#x2F;sort&#39;export default &#123;  name: &#39;create&#39;,  components: &#123; Sort &#125;,  data () &#123;    return &#123;      showDialog: false,      text: &#39;&#39;,      showManage: false,      manages: [        &#123; text: 111 &#125;,        &#123; text: 222 &#125;      ]    &#125;  &#125;,  methods: &#123;    Determine () &#123;      this.showDialog &#x3D; false    &#125;,    Cancel () &#123;      this.showDialog &#x3D; false    &#125;,    DetermineManage () &#123;      this.showManage &#x3D; false    &#125;,    CancelManage () &#123;      this.showManage &#x3D; false    &#125;,    updateData (data) &#123;      &#x2F;&#x2F; 将子组件返回的数据赋值给父组件，并更新视图      this.manages &#x3D; data      this.$forceUpdate()    &#125;  &#125;&#125;&lt;&#x2F;script&gt;&lt;style scoped lang&#x3D;&quot;scss&quot;&gt;.create &#123;  display: flex;  align-items: center;  justify-content: space-between;  &gt; div &#123;    margin-left: 20px;  &#125;&#125;.dialog &#123;  text-align: center;  .btnGroup &#123;    margin-top: 30px;  &#125;&#125;.manageItem &#123;  display: flex;  align-items: center;  justify-content: space-between;&#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>load和ready</title>
      <link href="/2022/04/29/load-he-ready/"/>
      <url>/2022/04/29/load-he-ready/</url>
      
        <content type="html"><![CDATA[<img src="/2022/04/29/load-he-ready/1.png" class="" title="jq load和ready"><blockquote><p>执行时间<br>编写个数不同<br>简化写法</p></blockquote><h3 id="执行时间"><a href="#执行时间" class="headerlink" title="执行时间"></a>执行时间</h3><ul><li>window.onload ：必须等到页面内包括图片的所有元素加载完毕后才能执行。</li><li>$(document).ready()：DOM 结构绘制完毕后就执行，不必等到加载完毕。</li></ul><h3 id="编写个数不同"><a href="#编写个数不同" class="headerlink" title="编写个数不同"></a>编写个数不同</h3><ul><li>window.onload：不能同时编写多个，如果有多个 window.onload 方法，只会执行一个</li><li>$(document).ready()：可以同时编写多个，并且都可以得到执行</li></ul><h3 id="简化写法"><a href="#简化写法" class="headerlink" title="简化写法"></a>简化写法</h3><ul><li>window.onload：没有简化写法</li><li>$(document).ready(function(){})：可以简写成 $(function(){});</li></ul>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么使用虚拟dom</title>
      <link href="/2022/04/26/wei-shi-me-shi-yong-xu-ni-dom/"/>
      <url>/2022/04/26/wei-shi-me-shi-yong-xu-ni-dom/</url>
      
        <content type="html"><![CDATA[<p>用我们传统的开发模式，原生JS或JQ操作DOM时，浏览器会从构建DOM树开始从头到尾执行一遍流程。在一次操作中，<code>我需要更新10个DOM节点，浏览器收到第一个DOM请求后并不知道还有9次更新操作，因此会马上执行流程，最终执行10次。例如，第一次计算完，紧接着下一个DOM更新请求，这个节点的坐标值就变了，前一次计算为无用功。</code>计算DOM节点坐标值等都是白白浪费的性能。即使计算机硬件一直在迭代更新，操作DOM的代价仍旧是昂贵的，频繁操作还是会出现页面卡顿，影响用户体验。</p><p>Web界面由DOM树(树的意思是数据结构)来构建，当其中一部分发生变化时，其实就是对应某个DOM节点发生了变化，</p><p>虚拟DOM就是为了解决浏览器性能问题而被设计出来的。如前，<code>若一次操作中有10次更新DOM的动作，虚拟DOM不会立即操作DOM，而是将这10次更新的diff内容保存到本地一个JS对象中，最终将这个JS对象一次性attch到DOM树上，再进行后续操作，避免大量无谓的计算量。</code>所以，用JS对象模拟DOM节点的好处是，页面的更新可以先全部反映在JS对象(虚拟DOM)上，操作内存中的JS对象的速度显然要更快，等更新完成后，再将最终的JS对象映射成真实的DOM，交由浏览器去绘制。</p>]]></content>
      
      
      <categories>
          
          <category> 性能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css盒模型</title>
      <link href="/2022/04/24/css-he-mo-xing/"/>
      <url>/2022/04/24/css-he-mo-xing/</url>
      
        <content type="html"><![CDATA[<img src="/2022/04/24/css-he-mo-xing/1.png" class="" title="盒模型"><p>盒模型：盒模型又称框模型（Box Model）,包含了</p><blockquote><p>元素内容（content）<br>内边距（padding）<br>边框（border）<br>外边距（margin）</p></blockquote><h3 id="ie模式"><a href="#ie模式" class="headerlink" title="ie模式"></a>ie模式</h3><p>IE模型元素宽度<code>width = content + padding + border</code>，高度计算相同。</p><img src="/2022/04/24/css-he-mo-xing/2.png" class="" title="ie模式"><h3 id="标准模式（非ie模式）"><a href="#标准模式（非ie模式）" class="headerlink" title="标准模式（非ie模式）"></a>标准模式（非ie模式）</h3><p>标准模型元素宽度<code>width=content</code>，高度计算相同。<br><strong><code>这也就说明在标准模式下设置了width，再设置border或者padding后，会导致宽度（高度）会变，导致页面布局错乱。</code></strong></p><img src="/2022/04/24/css-he-mo-xing/3.png" class="" title="ie模式"><h3 id="js获取宽高"><a href="#js获取宽高" class="headerlink" title="js获取宽高"></a>js获取宽高</h3><p><a href="css%E7%9B%92%E6%A8%A1%E5%9E%8B/https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle">getComputedStyle介绍</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">.</span>width <span class="token operator">/</span> height<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h3 id="1-BFC"><a href="#1-BFC" class="headerlink" title="1.BFC"></a>1.BFC</h3><p><code>BFC(Block Formatting Context)：块级格式化上下文。</code></p><blockquote><p>BFC决定了元素如何对其内容进行定位，以及与其他元素的关系和相互作用。<br>一个BFC环境中的元素不会影响到其他环境中的布局</p></blockquote><h4 id="1-1-BFC的原理（渲染规则）"><a href="#1-1-BFC的原理（渲染规则）" class="headerlink" title="1.1 BFC的原理（渲染规则）"></a>1.1 BFC的原理（渲染规则）</h4><blockquote><p>BFC内的元素垂直方向的边距会发生重叠。属于不同BFC的元素外边距不会发生重叠<br>BFC的区域不会与浮动元素的布局重叠。<br>BFC元素是一个独立的容器，外面的元素不会影响里面的元素。里面的元素也不会影响外面的元素。<br>计算BFC高度的时候，浮动元素也会参与计算(清除浮动)</p></blockquote><h4 id="1-2-如何创建BFC"><a href="#1-2-如何创建BFC" class="headerlink" title="1.2 如何创建BFC"></a>1.2 如何创建BFC</h4><blockquote><p>overflow不为visible;<br>float的值不为none；<br>position的值不为static或relative；<br>display属性为inline-blocks、table、table-cell、table-caption、flex、inline-flex;</p></blockquote><h3 id="2-外边距重叠"><a href="#2-外边距重叠" class="headerlink" title="2.外边距重叠"></a>2.外边距重叠</h3><p><code>当两个垂直外边距相遇时，他们将形成一个外边距，合并后的外边距高度等于两个发生合并的外边距的高度中的较大者。</code></p><p><em>注意：只有普通文档流中块框的垂直外边距才会发生外边距合并，行内框、浮动框或绝对定位之间的外边距不会合并。</em></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>输入url到页面显示经历的事</title>
      <link href="/2022/04/23/shu-ru-url-dao-ye-mian-xian-shi-jing-li-de-shi/"/>
      <url>/2022/04/23/shu-ru-url-dao-ye-mian-xian-shi-jing-li-de-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><ol><li>开启线程处理请求，分析url，根据协议处理</li><li>调用引擎对应的方法（例如：loadUrl），分析并加载url地址</li><li>通过DNS解析获取对应的ip地址，查询后连同cookie、userAgent等信息向ip发出get请求</li><li>进行http会话，浏览器发送报文到服务器</li><li>服务器处理请求</li><li>服务器进入应用程序，找到相应逻辑进行处理（读取缓存或者查询数据等）</li><li>服务器返回报文（如果有缓存返回304，否则查询返回200或404）</li><li>浏览器开始处理（200或304）</li><li>浏览器解析dom，同时设置缓存</li><li>渲染dom</li></ol></blockquote><img src="/2022/04/23/shu-ru-url-dao-ye-mian-xian-shi-jing-li-de-shi/1.png" class="" title="输入url到页面显示经历的事">]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pc端高分屏自适应</title>
      <link href="/2022/03/07/pc-duan-gao-fen-ping-zi-gua-ying/"/>
      <url>/2022/03/07/pc-duan-gao-fen-ping-zi-gua-ying/</url>
      
        <content type="html"><![CDATA[<p><code>vue项目内</code></p><h3 id="1、插件安装"><a href="#1、插件安装" class="headerlink" title="1、插件安装"></a>1、插件安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> amfe-flexible postcss-px2rem <span class="token parameter variable">-S</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、引入使用（main-js）"><a href="#2、引入使用（main-js）" class="headerlink" title="2、引入使用（main.js）"></a>2、引入使用（main.js）</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">"amfe-flexible"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、配置（vue-config-js）"><a href="#3、配置（vue-config-js）" class="headerlink" title="3、配置（vue.config.js）"></a>3、配置（vue.config.js）</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">postcss</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token comment">// 设计稿宽度的1/10，一般为192,设计稿为1920</span>          <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-px2rem"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">remUnit</span><span class="token operator">:</span> <span class="token number">192</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意事项：由于是做了适配，那么没有给定大小（默认大小）的元素会发生变化，为了避免这种问题，需要给这类元素一个默认大小</strong></p>]]></content>
      
      
      <categories>
          
          <category> 库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 自适应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vuex的持久化</title>
      <link href="/2022/03/04/vuex-de-chi-jiu-hua/"/>
      <url>/2022/03/04/vuex-de-chi-jiu-hua/</url>
      
        <content type="html"><![CDATA[<p><code>vuex的持久化解决的就是页面刷新时vuex数据还原的问题，注意是还原（不是丢失），因为写死在vuex的固定数据是不会丢失的，但是后期更改的值会还原为初始值</code></p><img src="/2022/03/04/vuex-de-chi-jiu-hua/1.png" class="" title="vuex的持久化">]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue路由守卫</title>
      <link href="/2022/03/04/vue-lu-you-shou-wei/"/>
      <url>/2022/03/04/vue-lu-you-shou-wei/</url>
      
        <content type="html"><![CDATA[<p><a href="vue%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB/https://router.vuejs.org/zh/guide/advanced/navigation-guards.html">vue 路由守卫</a></p><h3 id="1、vue-路由守卫"><a href="#1、vue-路由守卫" class="headerlink" title="1、vue 路由守卫"></a>1、vue 路由守卫</h3><blockquote><p>1 全局守卫<br>2 路由独享守卫<br>3 组件内守卫</p></blockquote><img src="/2022/03/04/vue-lu-you-shou-wei/1.png" class="" title="vue路由守卫"><h3 id="2、完整的导航解析流程"><a href="#2、完整的导航解析流程" class="headerlink" title="2、完整的导航解析流程"></a>2、完整的导航解析流程</h3><img src="/2022/03/04/vue-lu-you-shou-wei/2.png" class="" title="vue路由导航解析流程"><h3 id="3、路由守卫中next带参数和不带参数的区别"><a href="#3、路由守卫中next带参数和不带参数的区别" class="headerlink" title="3、路由守卫中next带参数和不带参数的区别"></a>3、路由守卫中next带参数和不带参数的区别</h3><p><code>假设参数是 &#39;/login&#39;</code><br>在Vue.js, 路由守卫用于在路由切换前或切换后执行特定的逻辑。<code>next()</code> 和 <code>next(&#39;/login&#39;)</code> 是两种不同的方式来控制路由守卫的行为。</p><ol><li><p><strong>next()</strong>:<br>当你在路由守卫中调用 <code>next()</code> 时，表示允许当前的路由切换继续进行。这通常用于在一个路由守卫中执行完必要的逻辑后，允许路由继续切换到下一个路由。例如，在一个验证用户登录状态的守卫中，如果用户已登录，你可以调用 <code>next()</code> 来允许切换到下一个路由。示例：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>userIsLoggedIn<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 用户已登录，允许继续路由切换</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 用户未登录，重定向到登录页面</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>next(‘/login’)</strong>:<br>当你调用 <code>next(&#39;/login&#39;)</code> 时，表示你希望中断当前的路由切换，并强制跳转到指定的路由（在这个例子中是登录页面）。这通常用于在某些情况下，你希望用户在未满足特定条件时被强制重定向到特定的页面。示例：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>userIsLoggedIn<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 用户已登录，允许继续路由切换</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 用户未登录，强制跳转到登录页面</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>总之，<code>next()</code> 允许路由继续切换，而 <code>next(&#39;/login&#39;)</code> 则中断当前切换并重定向到指定的路由。</p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js中的事件循环</title>
      <link href="/2022/03/02/js-zhong-de-shi-jian-xun-huan/"/>
      <url>/2022/03/02/js-zhong-de-shi-jian-xun-huan/</url>
      
        <content type="html"><![CDATA[<p>js 中的事件循环 event loop</p><p><code>所谓单线程，是指在JS引擎中负责解释和执行JavaScript代码的线程只有一个。</code></p><blockquote><p>事件循环负责收集用事件（包括用户事件以及其他非用户事件等）、对任务进行排队以便在合适的时候执行回调。然后它执行所有处于等待中的 JavaScript 任务（宏任务），然后是微任务，然后在开始下一次循环之前执行一些必要的渲染和绘制操作。</p></blockquote><img src="/2022/03/02/js-zhong-de-shi-jian-xun-huan/1.png" class="" title="js中的事件循环"><h3 id="1、同步任务"><a href="#1、同步任务" class="headerlink" title="1、同步任务"></a>1、同步任务</h3><p>同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；</p><h3 id="2、异步任务"><a href="#2、异步任务" class="headerlink" title="2、异步任务"></a>2、异步任务</h3><p>异步任务指的是，不进入主线程、而进入”任务队列”（task queue）的任务。<code>只有等主线程任务执行完毕，&quot;任务队列&quot;开始通知主线程，请求执行任务，该任务才会进入主线程执行。</code></p><blockquote><p>1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。<br>（2）主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件。<br>（3）一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。<br>（4）主线程不断重复上面的第三步。</p></blockquote><h3 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h3><p><code>执行顺序为：同步优先，异步靠边，回调垫底。</code></p><p><strong>javascript 是单线程。单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。于是就有一个概念——任务队列。如果排队是因为计算量大，CPU 忙不过来，倒也算了，但是很多时候 CPU 是闲着的，因为 IO 设备（输入输出设备）很慢（比如 Ajax 操作从网络读取数据），不得不等着结果出来，再往下执行。于是 JavaScript 语言的设计者意识到，这时主线程完全可以不管 IO 设备，挂起处于等待中的任务，先运行排在后面的任务。等到 IO 设备返回了结果，再回过头，把挂起的任务继续执行下去。</strong></p><p><code>同步可以保证顺序一致，但是容易导致阻塞；异步可以解决阻塞问题，但是会改变顺序性，根据不同的需要去写你的代码。</code></p><p>Promise 是异步的，是指他的 then()和 catch()方法，Promise 本身还是同步的，所以这里先执行 a 变量内部的 Promise 同步代码。（同步优先）</p><p>注意 new Promise() 是同步方法，resolve 才是异步方法。</p><p>同步（Promise）&gt;异步（微任务（process.nextTick ，Promises.then, Promise.catch ，resove,reject,MutationObserver)&gt;宏任务（setTimeout，setInterval，setImmediate））<br>process.nextTick&gt; Promises.then</p><blockquote><p>宏任务是主流，当 js 开始被执行的时候，就是开启一个宏任务，在宏任务中执行一条一条的指令；<br>宏任务可以同时有多个，但会按顺序一个一个执行；<br>每一个宏任务，后面都可以跟一个微任务队列，如果微任务队列中有指令或方法，那么就会执行；如果没有，则开始执行下一个宏任务，直到所有的宏任务执行完为止，微任务相当于宏任务的小尾巴；<br>为什么有了宏任务，还会有微任务存在？因为宏任务太占用性能，当需要一些较早就准备好的方法，排在最后才执行的时候，又不想新增一个宏任务，那么就可以把这些方法，一个一个的放在微任务队列里面，在这个宏任务中的代码执行完后，就会执行微任务队列。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器环境判断</title>
      <link href="/2022/03/01/liu-lan-qi-huan-jing-pan-duan/"/>
      <url>/2022/03/01/liu-lan-qi-huan-jing-pan-duan/</url>
      
        <content type="html"><![CDATA[<h3 id="1-根据浏览器的userAgent进行判断"><a href="#1-根据浏览器的userAgent进行判断" class="headerlink" title="1. 根据浏览器的userAgent进行判断"></a>1. 根据浏览器的userAgent进行判断</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> isMobil<span class="token punctuation">,</span> mobilInfo<span class="token punctuation">,</span> isWx<span class="token punctuation">;</span><span class="token comment">// 判断是在手机还是电脑</span><span class="token keyword">function</span> <span class="token function">isMobile_pc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> flag <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> isMobil <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> isMobil<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 判断是在安卓还是ios打开</span><span class="token keyword">function</span> <span class="token function">is_android_ios</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>  mobilInfo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//移动终端浏览器版本信息</span>    <span class="token literal-property property">trident</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Trident"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//IE内核</span>    <span class="token literal-property property">presto</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Presto"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//opera内核</span>    <span class="token literal-property property">webKit</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"AppleWebKit"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//苹果、谷歌内核</span>    <span class="token literal-property property">gecko</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Gecko"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"KHTML"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//火狐内核</span>    <span class="token literal-property property">mobile</span><span class="token operator">:</span>      <span class="token operator">!</span><span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">AppleWebKit.*Mobile</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token operator">!</span><span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>        <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE</span><span class="token regex-delimiter">/</span></span>      <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//是否为移动终端</span>    <span class="token literal-property property">ios</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\(i[^;]+;( U;)? CPU.+Mac OS X</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//ios终端</span>    <span class="token literal-property property">android</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Android"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Linux"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//android终端或者uc浏览器</span>    <span class="token literal-property property">iPhone</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"iPhone"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Mac"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//是否为iPhone或者QQHD浏览器</span>    <span class="token literal-property property">iPad</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"iPad"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//是否iPad</span>    <span class="token literal-property property">webApp</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Safari"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//是否web应该程序，没有头部与底部</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//判断是否是微信环境</span><span class="token keyword">function</span> <span class="token function">isWeixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  isWx <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"MicroMessenger"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> isWx<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">isMobile_pc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">is_android_ios</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">isWeixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 封装函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 代码片段 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue循环中为什么不建议使用index做key值</title>
      <link href="/2022/03/01/vue-xun-huan-zhong-wei-shi-me-bu-jian-yi-shi-yong-index-zuo-key-zhi/"/>
      <url>/2022/03/01/vue-xun-huan-zhong-wei-shi-me-bu-jian-yi-shi-yong-index-zuo-key-zhi/</url>
      
        <content type="html"><![CDATA[<p><a href="vue%E5%BE%AA%E7%8E%AF%E4%B8%AD%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E4%BD%BF%E7%94%A8index%E5%81%9Akey%E5%80%BC/https://cn.vuejs.org/v2/guide/list.html">vue2 中对循环的解释</a></p><blockquote><p>当 Vue 正在更新使用 v-for 渲染的元素列表时，它默认使用“就地更新”的策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序，而是就地更新每个元素，并且确保它们在每个索引位置正确渲染。这个类似 Vue 1.x 的 track-by=”$index”。</p></blockquote><p><code>这个默认的模式是高效的，但是只适用于不依赖子组件状态或临时 DOM 状态 (例如：表单输入值) 的列表渲染输出。</code></p><p><code>为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素，你需要为每项提供一个唯一 key attribute：</code></p><hr><p>上面的意思是说，vue在循环的时候使用key会更好的进行渲染，在<code>数据更改时</code>会使虚拟dom有更小的消耗。</p><p><strong>所以：</strong></p><blockquote><p>当有数据需要修改的时候，尽量不要使用index作为key值，比如：管理后台添加列表数据、选择器内添加选项等<br>那么在不需要修改数据的时候（单纯的给用户进行展示的时候）是可以使用index作为key值的，因为不存在二次渲染的问题</p></blockquote><p><code>手写虚拟滚动的时候，因为是在同一个页面区域内进行渲染，也不建议使用index作为key值</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue路由传参的四种方式</title>
      <link href="/2022/02/28/vue-lu-you-chuan-can-de-si-chong-fang-shi/"/>
      <url>/2022/02/28/vue-lu-you-chuan-can-de-si-chong-fang-shi/</url>
      
        <content type="html"><![CDATA[<img src="/2022/02/28/vue-lu-you-chuan-can-de-si-chong-fang-shi/1.png" class="" title="vue路由传参的四种方式"><h3 id="1、router-link"><a href="#1、router-link" class="headerlink" title="1、router-link"></a>1、router-link</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父组件传值</span><span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">"/room"</span><span class="token operator">></span><span class="token comment">// 子组件接收  this.$route.params</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、-router-push"><a href="#2、-router-push" class="headerlink" title="2、$router.push"></a>2、$router.push</h3><h4 id="2-1、path"><a href="#2-1、path" class="headerlink" title="2.1、path"></a>2.1、path</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父组件传值</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"deliverParams(123)"</span><span class="token operator">></span>push传参<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">deliverParams</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/d/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 子组件接收</span><span class="token function">mounted</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2、name-params"><a href="#2-2、name-params" class="headerlink" title="2.2、name,params"></a>2.2、name,params</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父组件传值</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"deliverByName()"</span><span class="token operator">></span>params传参<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token function">deliverByName</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'B'</span><span class="token punctuation">,</span>        <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">sometext</span><span class="token operator">:</span> <span class="token string">'一只羊出没'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token comment">// 子组件接收</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"b"</span><span class="token operator">></span>    This is page <span class="token constant">B</span><span class="token operator">!</span>    <span class="token operator">&lt;</span>p<span class="token operator">></span>传入参数：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>sometext<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3、name-query"><a href="#2-3、name-query" class="headerlink" title="2.3、name,query"></a>2.3、name,query</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父组件传值</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"deliverQuery()"</span><span class="token operator">></span>query传参<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token function">deliverQuery</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/c'</span><span class="token punctuation">,</span>        <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">sometext</span><span class="token operator">:</span> <span class="token string">'这是小羊同学'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token comment">// 子组件接收</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"C"</span><span class="token operator">></span>    This is page <span class="token constant">C</span><span class="token operator">!</span>    <span class="token operator">&lt;</span>p<span class="token operator">></span>这是父组件传入的数据<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>sometext<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端性能优化</title>
      <link href="/2022/02/24/qian-duan-xing-neng-you-hua/"/>
      <url>/2022/02/24/qian-duan-xing-neng-you-hua/</url>
      
        <content type="html"><![CDATA[<img src="/2022/02/24/qian-duan-xing-neng-you-hua/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.png" class="" title="前端性能优化"><p>移动互联网时代，用户对于网页的打开速度要求越来越高。首屏作为直面用户的第一屏，其重要性不言而喻。优化用户体验更是我们前端开发非常需要 focus 的东西之一。<br>从用户的角度而言，当打开一个网页，往往关心的是从输入完网页地址后到最后展现完整页面这个过程需要的时间，这个时间越短，用户体验越好。所以作为网页的开发者，就从输入 url 到页面渲染呈现这个过程中去提升网页的性能。<br>所以输入 URL 后发生了什么呢？在浏览器中输入 url 会经历域名解析、建立 TCP 连接、发送 http 请求、资源解析等步骤。<br>http 缓存优化是网页性能优化的重要一环，这一部分我会在后续笔记中做一个详细总结，所以本文暂不多做详细整理。本文主要从网页渲染过程、网页交互以及 Vue 应用优化三个角度对性能优化做一个小结。</p><h2 id="一、页面加载及渲染过程优化"><a href="#一、页面加载及渲染过程优化" class="headerlink" title="一、页面加载及渲染过程优化"></a>一、页面加载及渲染过程优化</h2><p>浏览器渲染流程</p><p>首先谈谈拿到服务端资源后浏览器渲染的流程：</p><ol><li>解析 HTML 文件，构建 DOM 树，同时浏览器主进程负责下载 CSS 文件</li><li>CSS 文件下载完成，解析 CSS 文件成树形的数据结构，然后结合 DOM 树合并成 RenderObject 树</li><li>布局 RenderObject 树 （Layout/reflow），负责 RenderObject 树中的元素的尺寸，位置等计算</li><li>绘制 RenderObject 树 （paint），绘制页面的像素信息</li><li>浏览器主进程将默认的图层和复合图层交给 GPU 进程，GPU 进程再将各个图层合成（composite），最后显示出页面<br>CRP（关键渲染路径 Critical Rendering Path）优化</li></ol><p>关键渲染路径是浏览器将 HTML、CSS、JavaScript 转换为在屏幕上呈现的像素内容所经历的一系列步骤。也就是我们刚刚提到的的的浏览器渲染流程。<br>为尽快完成首次渲染，我们需要最大限度减小以下三种可变因素:</p><ul><li>关键资源的数量: 可能阻止网页首次渲染的资源。</li><li>关键路径长度: 获取所有关键资源所需的往返次数或总时间。</li><li>关键字节: 实现网页首次渲染所需的总字节数，等同于所有关键资源传送文件大小的总和。</li></ul><h3 id="1、优化-DOM"><a href="#1、优化-DOM" class="headerlink" title="1、优化 DOM"></a>1、优化 DOM</h3><ul><li>删除不必要的代码和注释包括空格，尽量做到最小化文件。</li><li>可以利用 GZIP 压缩文件。</li><li>结合 HTTP 缓存文件。</li></ul><h3 id="2、优化-CSSOM"><a href="#2、优化-CSSOM" class="headerlink" title="2、优化 CSSOM"></a>2、优化 CSSOM</h3><p>首先，DOM 和 CSSOM 通常是并行构建的，所以 <code>CSS 加载不会阻塞 DOM 的解析。</code><br>然而，由于 Render Tree 是依赖于 DOM Tree 和 CSSOM Tree 的，<br>所以他必须等待到 CSSOM Tree 构建完成，也就是 CSS 资源加载完成(或者 CSS 资源加载失败)后，才能开始渲染。因此，<code>CSS 加载会阻塞 Dom 的渲染</code>。<br>由此可见，对于 CSSOM 缩小、压缩以及缓存同样重要，我们可以从这方面考虑去优化。</p><ul><li>减少关键 CSS 元素数量</li><li>当我们声明样式表时，请密切关注媒体查询的类型，它们极大地影响了 CRP 的性能 。</li></ul><h3 id="3、优化-JavaScript"><a href="#3、优化-JavaScript" class="headerlink" title="3、优化 JavaScript"></a>3、优化 JavaScript</h3><p>当浏览器遇到 script 标记时，会阻止解析器继续操作，直到 CSSOM 构建完毕，JavaScript 才会运行并继续完成 DOM 构建过程。</p><ul><li>async: 当我们在 script 标记添加 async 属性以后，浏览器遇到这个 script 标记时会继续解析 DOM，同时脚本也不会被 CSSOM 阻止，即不会阻止 CRP。</li><li><code>defer: 与 async 的区别在于，脚本需要等到文档解析后（ DOMContentLoaded 事件前）执行，而 async 允许脚本在文档解析时位于后台运行（两者下载的过程不会阻塞 DOM，但执行会）</code>。</li><li><strong>当我们的脚本不会修改 DOM 或 CSSOM 时，推荐使用 async</strong> 。</li><li>预加载 —— preload &amp; prefetch 。</li><li>DNS 预解析 —— dns-prefetch 。</li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>分析并用 <strong>关键资源数 关键字节数 关键路径长度</strong> 来描述我们的 CRP 。</li><li>最小化关键资源数: 消除它们（内联）、推迟它们的下载（defer）或者使它们异步解析（async）等等 。</li><li>优化关键字节数（缩小、压缩）来减少下载时间 。</li><li>优化加载剩余关键资源的顺序: 让关键资源（CSS）尽早下载以减少 CRP 长度 。</li></ul><h2 id="二、浏览器重绘（Repaint）和回流（Reflow）"><a href="#二、浏览器重绘（Repaint）和回流（Reflow）" class="headerlink" title="二、浏览器重绘（Repaint）和回流（Reflow）"></a>二、浏览器重绘（Repaint）和回流（Reflow）</h2><p><code>回流必将引起重绘，重绘不一定会引起回流。</code></p><h3 id="4、重绘（Repaint）"><a href="#4、重绘（Repaint）" class="headerlink" title="4、重绘（Repaint）"></a>4、重绘（Repaint）</h3><p>当页面中元素样式的改变并不影响它在文档流中的位置时（例如：color、background-color、visibility 等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。</p><h3 id="5、回流（Reflow）"><a href="#5、回流（Reflow）" class="headerlink" title="5、回流（Reflow）"></a>5、回流（Reflow）</h3><p>当 Render Tree 中部分或全部元素的尺寸、结构、或某些属性发生改变时，浏览器重新渲染部分或全部文档的过程称为回流。</p><h4 id="会导致回流的操作："><a href="#会导致回流的操作：" class="headerlink" title="会导致回流的操作："></a>会导致回流的操作：</h4><ul><li>页面首次渲染</li><li>浏览器窗口大小发生改变</li><li>元素尺寸或位置发生改变元素内容变化（文字数量或图片大小等等）</li><li>元素字体大小变化</li><li>添加或者删除可见的 DOM 元素</li><li>激活 CSS 伪类（例如:hover）</li><li>查询某些属性或调用某些方法</li><li>一些常用且会导致回流的属性和方法<br>clientWidth、clientHeight、clientTop、clientLeftoffsetWidth、offsetHeight、offsetTop、offsetLeftscrollWidth、scrollHeight、scrollTop、scrollLeftscrollIntoView()<br>、scrollIntoViewIfNeeded()、getComputedStyle()、<br>getBoundingClientRect()、scrollTo()</li></ul><h3 id="性能影响"><a href="#性能影响" class="headerlink" title="性能影响"></a>性能影响</h3><p>回流比重绘的代价要更高。<br>有时即使仅仅回流一个单一的元素，它的父元素以及任何跟随它的元素也会产生回流。现代浏览器会对频繁的回流或重绘操作进行优化：浏览器会维护一个队列，把所有引起回流和重绘的操作放入队列中，如果队列中的任务数量或者时间间隔达到一个阈值的，浏览器就会将队列清空，进行一次批处理，这样可以把多次回流和重绘变成一次。<br>当你访问以下属性或方法时，浏览器会立刻清空队列:<br>clientWidth、clientHeight、clientTop、clientLeft<br>offsetWidth、offsetHeight、offsetTop、offsetLeft<br>scrollWidth、scrollHeight、scrollTop、scrollLeft<br>width、height<br>getComputedStyle()<br>getBoundingClientRect()<br>因为队列中可能会有影响到这些属性或方法返回值的操作，即使你希望获取的信息与队列中操作引发的改变无关，浏览器也会强行清空队列，确保你拿到的值是最精确的。<br>如何避免</p><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><ul><li>避免使用 table 布局。</li><li>尽可能在 DOM 树的最末端改变 class。</li><li>避免设置多层内联样式。</li><li>将动画效果应用到 position 属性为 absolute 或 fixed 的元素上。</li><li>避免使用 CSS 表达式（例如：calc()）。<h2 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h2></li><li>避免频繁操作样式，最好一次性重写 style 属性，或者将样式列表定义为 class 并一次性更改 class 属性。<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 优化前</span><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>borderLeft <span class="token operator">=</span> <span class="token string">"1px"</span><span class="token punctuation">;</span>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>borderRight <span class="token operator">=</span> <span class="token string">"2px"</span><span class="token punctuation">;</span>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>padding <span class="token operator">=</span> <span class="token string">"5px"</span><span class="token punctuation">;</span><span class="token comment">// 优化后,一次性修改样式，这样可以将三次重排减少到一次重排</span><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">+=</span> <span class="token string">"; border-left: 1px ;border-right: 2px; padding: 5px;"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>避免频繁操作 DOM，创建一个 documentFragment，在它上面应用所有 DOM 操作，最后再把它添加到文档中。</li><li>也可以先为元素设置 display: none，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 DOM 操作不会引发回流和重绘。</li><li>避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。</li><li>对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。<h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2></li></ul><p>图片懒加载在一些图片密集型的网站中运用比较多，通过图片懒加载可以让一些不可视的图片不去加载，避免一次性加载过多的图片导致请求阻塞（浏览器一般对同一域名下的并发请求的连接数有限制），这样就可以提高网站的加载速度，提高用户体验。</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><code>将页面中的 img 标签 src 指向一张小图片或者 src 为空，然后定义 data-src（这个属性可以自定义命名，我才用 data-src）属性指向真实的图片。src 指向一张默认的图片，否则当 src 为空时也会向服务器发送一次请求。可以指向 loading 的地址。注意，图片要指定宽高。</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>default.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>666.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当载入页面时，先把可视区域内的 img 标签的 data-src 属性值负给 src，然后监听滚动事件，把用户即将看到的图片加载。这样便实现了懒加载。<br>实例</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">      <span class="token selector">img</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Go.png<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lifecycle.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">let</span> num <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>      <span class="token keyword">let</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//存储图片加载到的位置，避免每次都从第一张图片开始遍历</span>      <span class="token function">lazyload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//页面载入完毕加载可是区域内的图片</span>      window<span class="token punctuation">.</span>onscroll <span class="token operator">=</span> lazyload<span class="token punctuation">;</span>      <span class="token keyword">function</span> <span class="token function">lazyload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//监听页面滚动事件</span>        <span class="token keyword">let</span> seeHeight <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span> <span class="token comment">//可见区域高度</span>        <span class="token keyword">let</span> scrollTop <span class="token operator">=</span>          document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span> <span class="token comment">//滚动条距离顶部高度</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> n<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>img<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>offsetTop <span class="token operator">&lt;</span> seeHeight <span class="token operator">+</span> scrollTop<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>img<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"Go.png"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              img<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">=</span> img<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"data-src"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            n <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p><code>事件委托其实就是利用 JS 事件冒泡机制把原本需要绑定在子元素的响应事件（click、keydown……）委托给父元素，让父元素担当事件监听的职务。事件代理的原理是 DOM 元素的事件冒泡。</code></p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ol><li>大量减少内存占用，减少事件注册。</li><li>新增元素实现动态绑定事件<br>例如有一个列表需要绑定点击事件，每一个列表项的点击都需要返回不同的结果。<br>传统写法：</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>yellow<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>black<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>white<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> color_list <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"color_list"</span><span class="token punctuation">,</span> color_list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> color_list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      item<span class="token punctuation">.</span>onclick <span class="token operator">=</span> showColor<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">showColor</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">alert</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"showColor -> e.target"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>传统方法会利用 for 循环遍历列表为每一个列表元素绑定点击事件，当列表中元素数量非常庞大时，需要绑定大量的点击事件，这种方式就会产生性能问题。这种情况下利用事件委托就能很好的解决这个问题。<br>改用事件委托：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>yellow<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>black<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>white<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> color_list <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByid</span><span class="token punctuation">(</span><span class="token string">"color-list"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    color_list<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> showColor<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">showColor</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>nodeName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"li"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、渲染完成后的页面交互优化："><a href="#三、渲染完成后的页面交互优化：" class="headerlink" title="三、渲染完成后的页面交互优化："></a>三、渲染完成后的页面交互优化：</h2><p>防抖（debounce）/节流（throttle）</p><h3 id="防抖（debounce）"><a href="#防抖（debounce）" class="headerlink" title="防抖（debounce）"></a>防抖（debounce）</h3><p>输入搜索时，可以用防抖 debounce 等优化方式，减少 http 请求；<br>这里以滚动条事件举例：防抖函数 onscroll 结束时触发一次，延迟执行</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">func， wait</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> timeout<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// 指向全局</span><span class="token keyword">let</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context， args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// context.func(args)</span><span class="token punctuation">&#125;</span>， wait<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 使用</span>window<span class="token punctuation">.</span>onscroll <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'debounce'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>， <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="节流（throttle）"><a href="#节流（throttle）" class="headerlink" title="节流（throttle）"></a>节流（throttle）</h3><p>节流函数：只允许一个函数在 N 秒内执行一次。滚动条调用接口时，可以用节流 throttle 等优化方式，减少 http 请求；<br>下面还是一个简单的滚动条事件节流函数：节流函数 onscroll 时，每隔一段时间触发一次，像水滴一样</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn， delay</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> prevTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> curTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>curTime <span class="token operator">-</span> prevTime <span class="token operator">></span> delay<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span>， arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>prevTime <span class="token operator">=</span> curTime<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 使用</span><span class="token keyword">var</span> throtteScroll <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'throtte'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>， <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>onscroll <span class="token operator">=</span> throtteScroll<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、Vue-相关性能优化"><a href="#四、Vue-相关性能优化" class="headerlink" title="四、Vue 相关性能优化"></a>四、Vue 相关性能优化</h2><p>如何定位 Vue 应用性能问题</p><p>Vue 应用的性能问题可以分为两个部分，第一部分是运行时性能问题，第二部分是加载性能问题。<br>和其他 web 应用一样，定位 Vue 应用性能问题最好的工具是 Chrome Devtool，通过 Performance 工具可以用来录制一段时间的 CPU 占用、内存占用、FPS 等运行时性能问题，通过 Network<br>工具可以用来分析加载性能问题。</p><p>运行时性能主要关注 Vue 应用初始化之后对 CPU、内存、本地存储等资源的占用，以及对用户交互的及时响应。</p><h3 id="引入生产环境的-Vue-文件"><a href="#引入生产环境的-Vue-文件" class="headerlink" title="引入生产环境的 Vue 文件"></a>引入生产环境的 Vue 文件</h3><p>开发环境下，Vue 会提供很多警告来帮你对付常见的错误与陷阱。而在生产环境下，这些警告语句没有用，反而会增加应用的体积。有些警告检查还有一些小的运行时开销。<br>当使用 webpack 或 Browserify 类似的构建工具时，Vue 源码会根据 process.env.NODE_ENV 决定是否启用生产环境模式，默认情况为开发环境模式。在 webpack 与 Browserify<br>中都有方法来覆盖此变量，以启用 Vue 的生产环境模式，同时在构建过程中警告语句也会被压缩工具去除。</p><h3 id="使用单文件组件预编译模板"><a href="#使用单文件组件预编译模板" class="headerlink" title="使用单文件组件预编译模板"></a>使用单文件组件预编译模板</h3><p>当使用 DOM 内模板或 JavaScript 内的字符串模板时，模板会在运行时被编译为渲染函数。通常情况下这个过程已经足够快了，但对性能敏感的应用还是最好避免这种用法。<br>预编译模板最简单的方式就是使用单文件组件——相关的构建设置会自动把预编译处理好，所以构建好的代码已经包含了编译出来的渲染函数而不是原始的模板字符串。</p><h3 id="提取组件的-CSS-到单独到文件"><a href="#提取组件的-CSS-到单独到文件" class="headerlink" title="提取组件的 CSS 到单独到文件"></a>提取组件的 CSS 到单独到文件</h3><p>当使用单文件组件时，组件内的 CSS 会以 <code>&lt;style&gt; </code>标签的方式通过 JavaScript 动态注入。这有一些小小的运行时开销，将所有组件的 CSS 提取到同一个文件可以避免这个问题，也会让 CSS 更好地进行压缩和缓存。</p><ul><li>webpack + vue-loader (vue-cli 的 webpack 模板已经预先配置好)</li><li>Browserify + vueify</li><li>Rollup + rollup-plugin-vue</li></ul><h3 id="利用-Object-freeze-提升性能"><a href="#利用-Object-freeze-提升性能" class="headerlink" title="利用 Object.freeze()提升性能"></a>利用 Object.freeze()提升性能</h3><p>Object.freeze() 可以冻结一个对象，冻结之后不能向这个对象添加新的属性，不能修改其已有属性的值，不能删除已有属性，以及不能修改该对象已有属性的可枚举性、可配置性、可写性。该方法返回被冻结的对象。<br>当你把一个普通的 JavaScript 对象传给 Vue 实例的 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter，这些<br>getter/setter 对用户来说是不可见的，但是在内部它们让 Vue 追踪依赖，在属性被访问和修改时通知变化。<br>但 Vue 在遇到像 Object.freeze() 这样被设置为不可配置之后的对象属性时，不会为对象加上 setter getter 等数据劫持的方法。 参考 Vue 源码<br>由于 Object.freeze() 会把对象冻结，所以比较适合展示类的场景，如果你的数据属性需要改变，可以重新替换成一个新的 Object.freeze()的对象。</p><h3 id="扁平化-Store-数据结构"><a href="#扁平化-Store-数据结构" class="headerlink" title="扁平化 Store 数据结构"></a>扁平化 Store 数据结构</h3><p>很多时候，我们会发现接口返回的信息是如下的深层嵌套的树形结构：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token string-property property">"id"</span><span class="token operator">:</span> <span class="token string">"123"</span>，<span class="token string-property property">"author"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"id"</span><span class="token operator">:</span> <span class="token string">"1"</span>，<span class="token string-property property">"name"</span><span class="token operator">:</span> <span class="token string">"Paul"</span><span class="token punctuation">&#125;</span>，<span class="token string-property property">"title"</span><span class="token operator">:</span> <span class="token string">"My awesome blog post"</span>，<span class="token string-property property">"comments"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string-property property">"id"</span><span class="token operator">:</span> <span class="token string">"324"</span>，<span class="token string-property property">"commenter"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"id"</span><span class="token operator">:</span> <span class="token string">"2"</span>，<span class="token string-property property">"name"</span><span class="token operator">:</span> <span class="token string">"Nicole"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>假如直接把这样的结构存储在 store 中，如果想修改某个 commenter 的信息，我们需要一层层去遍历找到这个用户的信息，同时有可能这个用户的信息出现了多次，还需要把其他地方的用户信息也进行修改，每次遍历的过程会带来额外的性能开销。<br>假设我们把用户信息在 store 内统一存放成 users[id]这样的结构，修改和读取用户信息的成本就变得非常低。<br>你可以手动去把接口里的信息通过类似数据的表一样像这样存起来，也可以借助一些工具，这里就需要提到一个概念叫做 JSON 数据规范化（normalize）， Normalizr 是一个开源的工具，可以将上面的深层嵌套的 JSON<br>对象通过定义好的 schema 转变成使用 id 作为字典的实体表示的对象。</p><h3 id="避免持久化-Store-数据带来的性能问题"><a href="#避免持久化-Store-数据带来的性能问题" class="headerlink" title="避免持久化 Store 数据带来的性能问题"></a>避免持久化 Store 数据带来的性能问题</h3><p>当你有让 Vue App 离线可用，或者有接口出错时候进行灾备的需求的时候，你可能会选择把 Store 数据进行持久化，这个时候需要注意以下几个方面：</p><ul><li>持久化时写入数据的性能问题<br>Vue 社区中比较流行的 vuex-persistedstate，利用了 store 的 subscribe 机制，来订阅 Store 数据的 mutation，如果发生了变化，就会写入 storage 中，默认用的是<br>localstorage 作为持久化存储。<br>也就是说默认情况下每次 commit 都会向 localstorage 写入数据，localstorage 写入是同步的，而且存在不小的性能开销，如果你想打造 60fps 的应用，就必须避免频繁写入持久化数据。<br>我们应该尽量减少直接写入 Storage 的频率：</li><li>多次写入操作合并为一次，比如采用函数节流或者将数据先缓存在内存中，最后在一并写入</li><li>只有在必要的时候才写入，比如只有关心的模块的数据发生变化的时候才写入</li><li>避免持久化存储的容量持续增长<br>由于持久化缓存的容量有限，比如 localstorage 的缓存在某些浏览器只有 5M，我们不能无限制的将所有数据都存起来，这样很容易达到容量限制，同时数据过大时，读取和写入操作会增加一些性能开销，同时内存也会上涨。<br>尤其是将 API 数据进行 normalize 数据扁平化后之后，会将一份数据散落在不同的实体上，下次请求到新的数据也会散落在其他不同的实体上，这样会带来持续的存储增长。<br>因此，当设计了一套持久化的数据缓存策略的时候，同时应该设计旧数据的缓存清除策略，例如请求到新数据的时候将旧的实体逐个进行清除。</li></ul><h3 id="优化无限列表性能"><a href="#优化无限列表性能" class="headerlink" title="优化无限列表性能"></a>优化无限列表性能</h3><p>如果你的应用存在非常长或者无限滚动的列表，那么采用 窗口化 的技术来优化性能，只需要渲染少部分区域的内容，减少重新渲染组件和创建 dom 节点的时间。<br>vue-virtual-scroll-list 和 vue-virtual-scroller 都是解决这类问题的开源项目。</p><h4 id="Google-工程师绘制的无限列表设计"><a href="#Google-工程师绘制的无限列表设计" class="headerlink" title="Google 工程师绘制的无限列表设计"></a>Google 工程师绘制的无限列表设计</h4><p>通过组件懒加载优化超长应用内容初始渲染性能</p><p>上面提到的无限列表的场景，比较适合列表内元素非常相似的情况，不过有时候，你的 Vue<br>应用的超长列表内的内容往往不尽相同，例如在一个复杂的应用的主界面中，整个主界面由非常多不同的模块组成，而用户看到的往往只有首屏一两个模块。在初始渲染的时候不可见区域的模块也会执行和渲染，带来一些额外的性能开销。<br>使用组件懒加载在不可见时只需要渲染一个骨架屏，不需要真正渲染组件</p><p>你可以对组件直接进行懒加载，对于不可见区域的组件内容，直接不进行加载和初始化，避免初始化渲染运行时的开销。</p><h3 id="Vue-应用加载性能优化建议"><a href="#Vue-应用加载性能优化建议" class="headerlink" title="Vue 应用加载性能优化建议"></a>Vue 应用加载性能优化建议</h3><p>利用服务端渲染（SSR）和预渲染（Prerender）来优化加载性能</p><p>在一个单页应用中，往往只有一个 html 文件，然后根据访问的 url 来匹配对应的路由脚本，动态地渲染页面内容。单页应用比较大的问题是首屏可见时间过长。<br>单页面应用显示一个页面会发送多次请求，第一次拿到 html 资源，然后通过请求再去拿数据，再将数据渲染到页面上。而且由于现在微服务架构的存在，还有可能发出多次数据请求才能将网页渲染出来，每次数据请求都会产生<br>RTT（往返时延），会导致加载页面的时间拖的很长。</p><h4 id="服务端渲染、预渲染和客户端渲染的对比"><a href="#服务端渲染、预渲染和客户端渲染的对比" class="headerlink" title="服务端渲染、预渲染和客户端渲染的对比"></a>服务端渲染、预渲染和客户端渲染的对比</h4><p>这种情况下可以采用服务端渲染（SSR）和预渲染（Prerender）来提升加载性能，这两种方案，用户读取到的直接就是网页内容，由于少了节省了很多 RTT（往返时延），同时，还可以对一些资源内联在页面，可以进一步提升加载的性能。</p><h4 id="通过组件懒加载优化超长应用内容加载性能"><a href="#通过组件懒加载优化超长应用内容加载性能" class="headerlink" title="通过组件懒加载优化超长应用内容加载性能"></a>通过组件懒加载优化超长应用内容加载性能</h4><p>在上面提到的超长应用内容的场景中，通过组件懒加载方案可以优化初始渲染的运行性能，其实，这对于优化应用的加载性能也很有帮助。<br>组件粒度的懒加载结合异步组件和 webpack 代码分片，可以保证按需加载组件，以及组件依赖的资源、接口请求等，比起通常单纯的对图片进行懒加载，更进一步的做到了按需加载资源。</p><p>使用组件懒加载方案对于超长内容的应用初始化渲染很有帮助，可以减少大量必要的资源请求，缩短渲染关键路径。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>上面部分总结了 Vue 应用运行时以及加载时的一些性能优化措施，下面做一个回顾和概括：</p><ul><li><p>Vue 应用运行时性能优化措施</p><ul><li>引入生产环境的 Vue 文件</li><li>使用单文件组件预编译模板</li><li>提取组件的 CSS 到单独到文件</li><li>利用 Object.freeze()提升性能</li><li>扁平化 Store 数据结构</li><li>合理使用持久化 Store 数据</li><li>组件懒加载</li></ul></li><li><p>Vue 应用加载性能优化措施</p><ul><li>服务端渲染 / 预渲染</li><li>组件懒加载</li></ul></li></ul><p>文章总结的这些性能优化手段当然不能覆盖所有的 Vue 应用性能问题，我们也会不断总结和补充其他问题及优化措施，希望文章中提到这些实践经验能给你的 Vue 应用性能优化工作带来小小的帮助。</p><h2 id="五、其他方面优化补充"><a href="#五、其他方面优化补充" class="headerlink" title="五、其他方面优化补充"></a>五、其他方面优化补充</h2><ul><li>webpack 模块打包和 JavaScript 压缩（如 gzip 压缩）</li><li>利用 CDN</li><li>按需加载资源</li><li>在使用 DOM 操作库时用上 array-ids</li><li>缓存优化</li><li>避免重定向</li><li>启用 HTTP/2</li><li>应用性能分析</li><li>使用负载均衡方案</li><li>为了更快的启动时间考虑一下同构</li><li>使用索引加速数据库查询</li><li>使用更快的转译方案</li><li>避免或最小化 JavaScript 和 CSS 的使用而阻塞渲染</li><li>用于未来的一个建议：使用 service workers + 流</li><li>图片编码优化，尽量使用 svg 和字体图标</li></ul>]]></content>
      
      
      <categories>
          
          <category> 性能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进阶 </tag>
            
            <tag> 性能优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序的不同页面间传值</title>
      <link href="/2022/02/24/xiao-cheng-xu-de-bu-tong-ye-mian-jian-chuan-zhi/"/>
      <url>/2022/02/24/xiao-cheng-xu-de-bu-tong-ye-mian-jian-chuan-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="小程序的不同页面间传值"><a href="#小程序的不同页面间传值" class="headerlink" title="小程序的不同页面间传值"></a>小程序的不同页面间传值</h3><img src="/2022/02/24/xiao-cheng-xu-de-bu-tong-ye-mian-jian-chuan-zhi/1.png" class="" title="小程序的不同页面间传值">]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue组件传值</title>
      <link href="/2022/02/23/vue-zu-jian-chuan-zhi/"/>
      <url>/2022/02/23/vue-zu-jian-chuan-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="1、父子组件"><a href="#1、父子组件" class="headerlink" title="1、父子组件"></a>1、父子组件</h3><blockquote><p>父传子<br>子传父</p></blockquote><h4 id="1-1-父传子"><a href="#1-1-父传子" class="headerlink" title="1.1 父传子"></a>1.1 父传子</h4><h4 id="1-2-子传父"><a href="#1-2-子传父" class="headerlink" title="1.2 子传父"></a>1.2 子传父</h4><h3 id="2、兄弟组件"><a href="#2、兄弟组件" class="headerlink" title="2、兄弟组件"></a>2、兄弟组件</h3><blockquote><p>采用父子组件传值方式<br>总线传值（bus）<br>vuex</p></blockquote><h4 id="2-1-采用父子组件传值方式"><a href="#2-1-采用父子组件传值方式" class="headerlink" title="2.1 采用父子组件传值方式"></a>2.1 采用父子组件传值方式</h4><h4 id="2-2-总线传值（bus）"><a href="#2-2-总线传值（bus）" class="headerlink" title="2.2 总线传值（bus）"></a>2.2 总线传值（bus）</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 兄弟组件传值  main.js</span><span class="token keyword">const</span> bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> bus<span class="token punctuation">;</span><span class="token comment">// 需要发送数据的组件</span><span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>presidePosition<span class="token punctuation">.</span>member<span class="token punctuation">.</span>userIcon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"hudong"</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>presidePosition<span class="token punctuation">.</span>member<span class="token punctuation">.</span>userIcon<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//定义一个名称，并发送数据</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>presidePosition<span class="token punctuation">.</span>member<span class="token punctuation">.</span>userIcon<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 需要接收数据的组件</span><span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//接收的时机自选，这里放在dom加载前</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'hudong'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">//接收数据</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">'urlurlurlurlurlurlurlurlurlurlurlurlurlurl'</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>avatar <span class="token operator">=</span> url    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3vuex"><a href="#2-3vuex" class="headerlink" title="2.3vuex"></a>2.3vuex</h4><img src="/2022/02/23/vue-zu-jian-chuan-zhi/1.png" class="" title="传值方式"><h3 id="3、vuex"><a href="#3、vuex" class="headerlink" title="3、vuex"></a>3、vuex</h3>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js函数的节流和防抖</title>
      <link href="/2022/02/18/js-han-shu-de-jie-liu-he-fang-dou/"/>
      <url>/2022/02/18/js-han-shu-de-jie-liu-he-fang-dou/</url>
      
        <content type="html"><![CDATA[<p>防抖和节流，反反复复写了好几次，概念就是不容易记住，终于有一天看到一个总结，感觉很合理</p><blockquote><p>防抖 在指定的时间内 只响应最后一次<br>节流 在指定的时间内 只响应第一次</p></blockquote><p>直接上代码</p><h3 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h3><p><code>情景说明，在用户进入直播间内，超过一段时间没有任何操作，给用户弹出一个提示框，有操作的话则重新计时</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 兄弟组件传值，弹窗并不在本组件内，这并不重要</span><span class="token keyword">let</span> <span class="token function-variable function">sendMessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>presidePosition<span class="token punctuation">.</span>member<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>that<span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"hudong"</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>presidePosition<span class="token punctuation">.</span>member<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>that<span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"hudong"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 关键代码</span><span class="token keyword">let</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个标记用来存放定时器的返回值</span><span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 每当用户输入的时候把前一个 setTimeout clear 掉</span>timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">// 然后又创建一个新的 setTimeout, 这样就能保证输入字符后的 interval 间隔内如果还有字符输入的话，就不会执行 fn 函数</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//arguments是传入的参数</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token function">debounce</span><span class="token punctuation">(</span>sendMessage<span class="token punctuation">,</span> showTime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//由于下面添加的是click的监听事件，那么在进入直播间后，没有任何事件之前也是应该要计时的，所以添加了一个计时为0的固定定时器</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token function">debounce</span><span class="token punctuation">(</span>sendMessage<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js中this指向性问题</title>
      <link href="/2022/02/16/js-zhong-this-zhi-xiang-xing-wen-ti/"/>
      <url>/2022/02/16/js-zhong-this-zhi-xiang-xing-wen-ti/</url>
      
        <content type="html"><![CDATA[<p><strong><code>this的指向是由上下文环境动态决定的</code></strong></p><blockquote><p>全局环境<br>普通函数调用<br>由call/apply/bind函数调用<br>对象属性方法调用<br>构造函数调用<br>箭头函数</p></blockquote><p>![this指向性问题](js中this指向性问题 /1.png)</p><p>[示例代码链接](js中this指向性问题 /<a href="https://github.com/hanshuang-ai/code/blob/master/this%E6%8C%87%E5%90%91%E6%80%A7%E9%97%AE%E9%A2%98.html">https://github.com/hanshuang-ai/code/blob/master/this%E6%8C%87%E5%90%91%E6%80%A7%E9%97%AE%E9%A2%98.html</a>)</p><h3 id="1、全局环境-指向window"><a href="#1、全局环境-指向window" class="headerlink" title="1、全局环境 指向window"></a>1、全局环境 指向window</h3><blockquote><p> this指向全局对象（浏览器环境的window）</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//需要注意的是  此处变量可以使用var声明，可以不声明，但是不能使用let或者const进行声明（点击此处查看不同声明方式之间的区别）</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span>           <span class="token comment">//1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>a<span class="token punctuation">)</span>         <span class="token comment">//1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2、普通函数"><a href="#2、普通函数" class="headerlink" title="2、普通函数"></a>2、普通函数</h3><blockquote><p> 1、严格模式 指向undefined<br> 2、非严格模式 指向window</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>         <span class="token comment">//window对象</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">'use strict'</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token comment">//undefined</span><span class="token punctuation">&#125;</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">foo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、call-bind-apply函数调用"><a href="#3、call-bind-apply函数调用" class="headerlink" title="3、call/bind/apply函数调用"></a>3、call/bind/apply函数调用</h3><blockquote><p>1、call/apply 这两个函数对象到方法能立即执行某个函数，并且将函数中的this绑定到你提供到对象上去<br>2、bind 方法永久的绑定函数中的this到指定对象上，并返回一个新函数，将来这个函数无论怎么调用都不会再改变</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'aa'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">//&#123;name:'aa'&#125;</span><span class="token keyword">let</span> aa <span class="token operator">=</span> <span class="token function">foo2</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token string">'123'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">aa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//&#123;num: '123'&#125;</span><span class="token function">aa</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'aa'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">//&#123;num: '123'&#125;  即使使用了call，也不会改变</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、对象属性方法调用"><a href="#4、对象属性方法调用" class="headerlink" title="4、对象属性方法调用"></a>4、对象属性方法调用</h3><blockquote><p>指向前面调用函数都那个对象</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'abc'</span><span class="token punctuation">,</span>    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> obj<span class="token punctuation">)</span>  <span class="token comment">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、构造函数调用或者类上下文"><a href="#5、构造函数调用或者类上下文" class="headerlink" title="5、构造函数调用或者类上下文"></a>5、构造函数调用或者类上下文</h3><blockquote><p>this指向的是new出来的那个对象实例本身</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">&#125;</span><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>  <span class="token comment">//1</span><span class="token keyword">const</span> pp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pp<span class="token punctuation">)</span>  <span class="token comment">//2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6、箭头函数中的this"><a href="#6、箭头函数中的this" class="headerlink" title="6、箭头函数中的this"></a>6、箭头函数中的this</h3><blockquote><p>箭头函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"tom"</span><span class="token punctuation">,</span>    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>obj2<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// obj2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 专题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="/2022/02/12/html-ji-chu/"/>
      <url>/2022/02/12/html-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="1、浏览器基础"><a href="#1、浏览器基础" class="headerlink" title="1、浏览器基础"></a>1、浏览器基础</h2><h3 id="1、从输入-url-到页面显示经历的过程"><a href="#1、从输入-url-到页面显示经历的过程" class="headerlink" title="1、从输入 url 到页面显示经历的过程"></a>1、从输入 url 到页面显示经历的过程</h3><blockquote><p>1、浏览器接收 url，开启线程对 URL 使用的协议进行判断<br>2、分析加载 URL<br>3、DNS 解析、获取 IP、连同浏览器信息进行 get 请求（对 IP 发起）<br>4、http 会话、发送报文<br>5、web 服务器处理请求<br>6、服务器处理逻辑（查询数据库或缓存等）<br>7、服务器返回报文（304 或 200）<br>8、浏览器下载 HTML 文档<br>9、浏览器解析 HTML，建立 DOM 树<br>10、解析渲染 DOM、css 树、读取缓存、js 事件操作等</p><img src="/2022/02/12/html-ji-chu/browser.png" class=""></blockquote><h3 id="2、前端应用开发模式演变"><a href="#2、前端应用开发模式演变" class="headerlink" title="2、前端应用开发模式演变"></a>2、前端应用开发模式演变</h3><blockquote><p>1、静态页面<br>2、服务器组装数据<br>3、后端为主的 mvc<br>4、前后端分离<br>5、纯前端的 mv*<br>6、前端 vvirtual DOM</p><img src="/2022/02/12/html-ji-chu/html1.png" class=""></blockquote><h3 id="3、浏览器组成结构"><a href="#3、浏览器组成结构" class="headerlink" title="3、浏览器组成结构"></a>3、浏览器组成结构</h3><img src="/2022/02/12/html-ji-chu/html2.png" class=""><h3 id="4、浏览器渲染"><a href="#4、浏览器渲染" class="headerlink" title="4、浏览器渲染"></a>4、浏览器渲染</h3><blockquote><p>1、解析 HTML、构建 DOM<br>2、构建渲染树<br>3、渲染树布局<br>4、绘制渲染树</p><img src="/2022/02/12/html-ji-chu/html3.png" class=""><p><code>注意重排和重绘：重排是dom发生变化，会在布局阶段开始重新渲染；重绘是只改变样式，不改变dom，是在绘制阶段</code><br><strong>由于重排是在布局阶段，所以重排后一定会发生重绘</strong></p></blockquote><h3 id="5、HTML-解析"><a href="#5、HTML-解析" class="headerlink" title="5、HTML 解析"></a>5、HTML 解析</h3><img src="/2022/02/12/html-ji-chu/html4.png" class=""><h3 id="6、CSS-解析"><a href="#6、CSS-解析" class="headerlink" title="6、CSS 解析"></a>6、CSS 解析</h3><img src="/2022/02/12/html-ji-chu/html5.png" class="">]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用css制作气泡图</title>
      <link href="/2022/01/28/shi-yong-css-zhi-zuo-qi-pao-tu/"/>
      <url>/2022/01/28/shi-yong-css-zhi-zuo-qi-pao-tu/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-image-slice">https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-image-slice</a></p><blockquote><p>border-image-slice 指定图像的边界向内偏移<br>通过 border-image-source 引用边框图片后，border-image-slice 属性会将图片分割为 9 个区域：四个角，四个边（edges）以及中心区域。四条切片线，从它们各自的侧面设置给定距离，控制区域的大小。</p><img src="/2022/01/28/shi-yong-css-zhi-zuo-qi-pao-tu/point9.png" class=""></blockquote><p>中间的区域将不会被边框使用，但当设置有 fill 关键词时将会被作为 background-image。这个关键词可以被设置在属性的任何一个位置(前面、后面或者两个值之间)</p><p>border-image-repeat, border-image-width, border-image-outset 属性则定义这些图片将如何使用。</p><img src="/2022/01/28/shi-yong-css-zhi-zuo-qi-pao-tu/img.png" class="">]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 特效 </tag>
            
            <tag> 点九图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>请求封装</title>
      <link href="/2022/01/14/feng-zhuang-qing-qiu-he-lan-jie/"/>
      <url>/2022/01/14/feng-zhuang-qing-qiu-he-lan-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h2><h3 id="1、封装与拦截"><a href="#1、封装与拦截" class="headerlink" title="1、封装与拦截"></a>1、封装与拦截</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Message <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"element-ui"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_API</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">"VUE_APP_BASE_API"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-1请求拦截"><a href="#1-1请求拦截" class="headerlink" title="1.1请求拦截"></a>1.1请求拦截</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 请求拦截</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"sessionId"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">"get"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    config<span class="token punctuation">.</span>params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">sessionId</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sessionId<span class="token punctuation">,</span>      <span class="token operator">...</span>config<span class="token punctuation">.</span>params<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">"post"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    config<span class="token punctuation">.</span>params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">sessionId</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sessionId<span class="token punctuation">,</span>      <span class="token operator">...</span>config<span class="token punctuation">.</span>params<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// console.log(config)</span>  <span class="token keyword">return</span> config<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-响应拦截"><a href="#1-2-响应拦截" class="headerlink" title="1.2 响应拦截"></a>1.2 响应拦截</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 响应拦截</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">success</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>success<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//  状态码正确</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//  操作正确</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> success<span class="token punctuation">.</span>data<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"您的登录信息已过期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/Login"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 操作错误</span>    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>success<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> success<span class="token punctuation">.</span>data<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"响应错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="uniapp"><a href="#uniapp" class="headerlink" title="uniapp"></a>uniapp</h2><h3 id="2、request-请求封装"><a href="#2、request-请求封装" class="headerlink" title="2、request 请求封装"></a>2、request 请求封装</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">post_data</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">"POST"</span><span class="token punctuation">,</span>      <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">version_code</span><span class="token operator">:</span> <span class="token string">"2022011101"</span><span class="token punctuation">,</span>        <span class="token literal-property property">version_name</span><span class="token operator">:</span> <span class="token string">"V1.0.0"</span><span class="token punctuation">,</span>        <span class="token literal-property property">app_type</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>        <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token string">"miniprogram"</span><span class="token punctuation">,</span>        <span class="token literal-property property">user_id</span><span class="token operator">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span>        <span class="token literal-property property">user_token</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token string-property property">"content-type"</span><span class="token operator">:</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">,</span> <span class="token comment">//默认传输json格式，如果后台接收的不是json格式，需要加上</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>      <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 如果成功，符合预期</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// resolve(res.data)</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>          uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">title</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span>            <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"接口请求失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> http </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
            <tag> 封装 </tag>
            
            <tag> http </tag>
            
            <tag> 请求 </tag>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信PC扫码支付</title>
      <link href="/2021/12/31/wei-xin-pc-sao-ma-zhi-fu/"/>
      <url>/2021/12/31/wei-xin-pc-sao-ma-zhi-fu/</url>
      
        <content type="html"><![CDATA[<h3 id="首先需要准备一个-dom-作为容器，放置-URL-转换的二维码"><a href="#首先需要准备一个-dom-作为容器，放置-URL-转换的二维码" class="headerlink" title="首先需要准备一个 dom 作为容器，放置 URL 转换的二维码"></a>首先需要准备一个 dom 作为容器，放置 URL 转换的二维码</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--微信支付二维码--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span> <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialogVisible<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>乐哇<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 将URL转换为二维码有很多，这里需要在二维码中间展示logo，所以用的vue-qr --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-qr</span> <span class="token attr-name">:logoSrc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span> <span class="token attr-name">:text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>codeURL<span class="token punctuation">"</span></span> <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-qr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>封装接口，调用后台接口<br>后台接口会返回一个 URL<br>将 URL 转变为二维码</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//请求后台接口</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">weixin</span><span class="token punctuation">(</span><span class="token parameter">goodsId<span class="token punctuation">,</span> quantity</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>    url<span class="token punctuation">,</span>    qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">goodsId</span><span class="token operator">:</span> goodsId<span class="token punctuation">,</span>      <span class="token literal-property property">quantity</span><span class="token operator">:</span> quantity<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 自定义请求头，不需要的话可以不传</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 具体调用</span><span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span><span class="token function">weixin</span><span class="token punctuation">(</span>payTtype<span class="token punctuation">,</span> number<span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>showPayPage <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>payMethod <span class="token operator">=</span> <span class="token string">"weixin"</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>dialogVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>codeURL <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>codeUrl<span class="token punctuation">;</span>      <span class="token comment">// -1.失败 0.充值中 1.成功</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 微信支付结果查询</span>        <span class="token function">searchWxResult</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>outTradeNo<span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>tradeStatus <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>              that<span class="token punctuation">.</span>dialogVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>              that<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 三方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付 </tag>
            
            <tag> 微信 </tag>
            
            <tag> 扫码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>支付宝电脑支付</title>
      <link href="/2021/12/31/zhi-fu-bao-dian-nao-zhi-fu/"/>
      <url>/2021/12/31/zhi-fu-bao-dian-nao-zhi-fu/</url>
      
        <content type="html"><![CDATA[<p><a href="%E6%94%AF%E4%BB%98%E5%AE%9D%E7%94%B5%E8%84%91%E6%94%AF%E4%BB%98/https://opendocs.alipay.com/open/270/105898">开发文档</a></p><blockquote><p>1、封装请求后台的接口<br>2、在其他页面使用接口，后端返回支付宝生成的 form 表单<br>3、打开表单（直接在返回接口的回调中使用即可）</p></blockquote><h3 id="封装请求后台的接口"><a href="#封装请求后台的接口" class="headerlink" title="封装请求后台的接口"></a>封装请求后台的接口</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 先封装请求后端的接口(promise)</span><span class="token comment">/** * 支付宝支付 * @param goodsId  1为自定义 * @param quantity 钻石数量 */</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">zhifubao</span><span class="token punctuation">(</span><span class="token parameter">goodsId<span class="token punctuation">,</span> quantity</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>    <span class="token comment">//后端支付接口</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>baseURL <span class="token operator">+</span> <span class="token string">"/sjsvoice/c/pms/create/zfb/pay"</span><span class="token punctuation">,</span>    qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">goodsId</span><span class="token operator">:</span> goodsId<span class="token punctuation">,</span>      <span class="token literal-property property">quantity</span><span class="token operator">:</span> quantity<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">"user-id"</span><span class="token operator">:</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>userId<span class="token punctuation">,</span>        <span class="token string-property property">"user-token"</span><span class="token operator">:</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userToken<span class="token punctuation">,</span>        <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token string">"pc"</span><span class="token punctuation">,</span>        <span class="token string-property property">"app-type"</span><span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在其他页面使用接口"><a href="#在其他页面使用接口" class="headerlink" title="在其他页面使用接口"></a>在其他页面使用接口</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在其他页面引入后使用</span><span class="token function">zhifubao</span><span class="token punctuation">(</span>payTtype<span class="token punctuation">,</span> number<span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>showPayPage <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token comment">//提前预留一个dom元素区域来承展form表单</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>html <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">//使用这个，直接打开form表单，然后扫码即可</span>        document<span class="token punctuation">.</span>forms<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="支付宝返回的-form-表单数据"><a href="#支付宝返回的-form-表单数据" class="headerlink" title="支付宝返回的 form 表单数据"></a>支付宝返回的 form 表单数据</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>punchout_form<span class="token punctuation">"</span></span>  <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span>  <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://openapi.alipay.com/gateway.do?charset=utf-8&amp;method=alipay.trade.page.pay&amp;sign=L6ZgaCz2Mz9RSAxC7UCNVD%2BY1BraRJjm6yAmrHeMxXMJwhs28PYawG3xbTWciO%2FAcz2lj6QRuh%2BKy27Q2Lm%2BKs6HKRHM%2Bbdgfwwypdm%2FL3d70W3jkzYsn58a4OjfGZkjyfdNBsOAczWLmYpKQ2b4JBwlodiqOX%2BsYcG%2Bk2KLw4f4S9LnMYqRP0ZyoVr%2Bc8lhGVqga%2FX4JebUrSxcHpo40QK9%2F%2Fc%2Fzaw9p%2FCh39ondJLpoiEQdLdgobzkWCT3EtvO4dFjKSTsy70lhWu4CKAGjjKOo0DxDCalFVevr7l4XIrIG68zdcDbTUUP9hKNNJ%2Fl7tAG0TALfTWIDlp2OVRp5w%3D%3D&amp;return_url=https%3A%2F%2Fg.levacp.com%2FRecharge&amp;notify_url=https%3A%2F%2Ftapi.levacp.com%2Fsjsvoice%2Fcallback%2Faliyun%2Fzfb%2Fpay&amp;version=1.0&amp;app_id=2021002190691523&amp;sign_type=RSA2&amp;timestamp=2021-12-31+17%3A45%3A19&amp;alipay_sdk=alipay-sdk-java-dynamicVersionNo&amp;format=json<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span>    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>biz_content<span class="token punctuation">"</span></span>    <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>&#123;"out_trade_no":"zfb1041640943919","total_amount":6,"subject":"支付充值","product_code":"FAST_INSTANT_TRADE_PAY"&#125;<span class="token punctuation">'</span></span>  <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>立即支付<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  document<span class="token punctuation">.</span>forms<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意事项：扫码支付成功后，后端会控制一个回跳地址，这个在和后端共同开发的时候需要提前协商好</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 三方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付 </tag>
            
            <tag> 扫码 </tag>
            
            <tag> 支付宝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号H5支付</title>
      <link href="/2021/12/30/wei-xin-gong-zhong-hao-h5-zhi-fu/"/>
      <url>/2021/12/30/wei-xin-gong-zhong-hao-h5-zhi-fu/</url>
      
        <content type="html"><![CDATA[<p><a href="%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7H5%E6%94%AF%E4%BB%98/https://pay.weixin.qq.com/wiki/doc/apiv3/wxpay/pages/index.shtml">微信商户平台，微信支付开发文档</a><br><a href="%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7H5%E6%94%AF%E4%BB%98/https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html">微信公众号登录授权文档</a><br><a href="%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7H5%E6%94%AF%E4%BB%98/https://res.wx.qq.com/open/js/jweixin-1.6.0.js">微信 JSapi 支付 sdk 链接</a></p><h3 id="登录授权"><a href="#登录授权" class="headerlink" title="登录授权"></a>登录授权</h3><blockquote><p>wx.config 在回跳地址时不会输出自己携带的参数，但是确实是传输过去了，可以使用 alert 打印</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 准备好了页面回跳地址</span><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">"XXXX"</span><span class="token punctuation">;</span><span class="token comment">// 请求业务网址，成功后，调用微信授权</span>axios  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>    <span class="token string">"https://tapi.levacp.com/sjsvoice/h5/sys/wechat/jssdk/config/query"</span><span class="token punctuation">,</span>    qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">url</span><span class="token operator">:</span> url <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 需要注意的是对回跳地址进行encodeURIComponent编码</span>      <span class="token comment">// 另外，如果需要在不同的页面之间传参，可以在传输给后台之前先拼接好参数</span>      <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jsSdkConfig<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//配置调试信息</span>      wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">debug</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>        <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">"xxx"</span><span class="token punctuation">,</span> <span class="token comment">// 必填，公众号的唯一标识</span>        <span class="token literal-property property">timestamp</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jsSdkConfig<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的时间戳</span>        <span class="token literal-property property">nonceStr</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jsSdkConfig<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的随机串</span>        <span class="token literal-property property">signature</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jsSdkConfig<span class="token punctuation">.</span>signature<span class="token punctuation">,</span> <span class="token comment">// 必填，签名</span>        <span class="token literal-property property">jsApiList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"chooseWXPay"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 必填，需要使用的JS接口列表</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx2d5c3d16592f8f3f&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//普通网页使用vue，并使用vant</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$toast</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="调用微信支付"><a href="#调用微信支付" class="headerlink" title="调用微信支付"></a>调用微信支付</h3><blockquote><p>微信支付有两个 API，本文使用的是 WeixinJSBridge</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[?&amp;][^?&amp;]+=[^?&amp;]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span><span class="token keyword">let</span> arr <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 解析URL，将回跳地址带来的参数进行解析</span><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> tempArr <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> key <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> val <span class="token operator">=</span> tempArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    params<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//根据code获取用户openid</span>axios  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"URL"</span><span class="token punctuation">,</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">code</span><span class="token operator">:</span> params<span class="token punctuation">.</span>code <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"获取用户Token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> accessToken <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>userId <span class="token operator">=</span> params<span class="token punctuation">.</span>userID<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>goodsId <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> params<span class="token punctuation">.</span>number <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">//    支付</span>      <span class="token comment">// const obj = &#123; uid: that.userId, goodsId: this.goodsId, openid: accessToken.openid, quantity: this.quantity &#125;</span>      <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">uid</span><span class="token operator">:</span> params<span class="token punctuation">.</span>userID<span class="token punctuation">,</span>        <span class="token literal-property property">goodsId</span><span class="token operator">:</span> params<span class="token punctuation">.</span>goodsId<span class="token punctuation">,</span>        <span class="token literal-property property">openid</span><span class="token operator">:</span> accessToken<span class="token punctuation">.</span>openid<span class="token punctuation">,</span>        <span class="token literal-property property">quantity</span><span class="token operator">:</span> params<span class="token punctuation">.</span>number<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token comment">//传输openid，请求支付接口</span>      axios        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>          that<span class="token punctuation">.</span>baseURL <span class="token operator">+</span> <span class="token string">"/sjsvoice/h5/sys/create/wx/pay"</span><span class="token punctuation">,</span>          qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">&#123;</span>            <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token string">"wxH5"</span><span class="token punctuation">,</span>              <span class="token literal-property property">app_type</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"支付结果"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 微信支付API</span>          <span class="token keyword">function</span> <span class="token function">onBridgeReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> <span class="token keyword">package</span> <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">;</span>            WeixinJSBridge<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>              <span class="token string">"getBrandWCPayRequest"</span><span class="token punctuation">,</span>              <span class="token punctuation">&#123;</span>                <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">"appid"</span><span class="token punctuation">,</span> <span class="token comment">//公众号ID，由商户传入</span>                <span class="token literal-property property">timeStamp</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>timeStamp<span class="token punctuation">,</span> <span class="token comment">//时间戳，自1970年以来的秒数</span>                <span class="token literal-property property">nonceStr</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">//随机串</span>                <span class="token keyword">package</span><span class="token operator">:</span> <span class="token string">"prepay_id="</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>package<span class="token punctuation">,</span> <span class="token comment">//一定要注意这个形式、一定要注意这个形式、一定要注意这个形式</span>                <span class="token literal-property property">signType</span><span class="token operator">:</span> <span class="token string">"RSA"</span><span class="token punctuation">,</span> <span class="token comment">//微信签名方式：</span>                <span class="token literal-property property">paySign</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>paySign<span class="token punctuation">,</span> <span class="token comment">//微信签名</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>err_msg <span class="token operator">==</span> <span class="token string">"get_brand_wcpay_request:ok"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  <span class="token comment">// 使用以上方式判断前端返回,微信团队郑重提示：</span>                  <span class="token comment">//res.err_msg将在用户支付成功后返回ok，但并不保证它绝对可靠。</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> WeixinJSBridge <span class="token operator">==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>                <span class="token string">"WeixinJSBridgeReady"</span><span class="token punctuation">,</span>                onBridgeReady<span class="token punctuation">,</span>                <span class="token boolean">false</span>              <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              document<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">"WeixinJSBridgeReady"</span><span class="token punctuation">,</span> onBridgeReady<span class="token punctuation">)</span><span class="token punctuation">;</span>              document<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">"onWeixinJSBridgeReady"</span><span class="token punctuation">,</span> onBridgeReady<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">onBridgeReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 三方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付 </tag>
            
            <tag> 微信公众号 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
